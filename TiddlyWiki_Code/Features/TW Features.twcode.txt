

$:/config/AutoSave

no



$:/config/MissingLinks

no



$:/config/Navigation/openLinkFromOutsideRiver

bottom



$:/config/Navigation/Permalinkview/CopyToClipboard

no



$:/config/RelinkOnRename

no



$:/config/ShortcutInfo/font-large



$:/config/ShortcutInfo/font-normal



$:/config/ShortcutInfo/home-tiddlers



$:/config/ShortcutInfo/save-all-changes



$:/config/shortcuts/font-large

ctrl-shift-Quote



$:/config/shortcuts/font-normal

ctrl-shift-Comma



$:/config/shortcuts/home-tiddlers

alt-H



$:/config/shortcuts/save-all-changes

alt-S



$:/config/TextEditor/EnableToolbar

no



$:/config/WikiParserRules/Inline/wikilink

disable



$:/DefaultTiddlers

[all[tiddlers]tag[INDEX]sort[title]]



$:/plugins/danielo515/searchNreplace

{
    "tiddlers": {
        "$:/danielo515/modules/startup/replace.js": {
            "text": "/*\\\r\ntitle: $:/danielo515/modules/startup/replace.js\r\ntype: application/javascript\r\nmodule-type: startup\r\nSearch and replace text\r\n\r\nRequires TW >= 5.1.4\r\n\r\n\\*/\r\n(function(){\r\n\r\n/*jslint node: true, browser: true */\r\n/*global $tw: false */\r\n\"use strict\";\r\n\r\n// Export name and synchronous status\r\nexports.name = \"password\";\r\nexports.platforms = [\"browser\"];\r\nexports.after = [\"startup\"];\r\nexports.synchronous = true;\r\n\r\nexports.startup = function() {\r\n  $tw.rootWidget.addEventListener(\"tm-replace\",function(event){\r\n  console.log(JSON.stringify(event));\r\n  var text=$tw.wiki.getTiddlerText(event.paramObject.source) || \"\",\r\n      doGlobal = event.paramObject.global || \"yes\", // by default do global search and replace\r\n      modifiers = ( doGlobal.toLowerCase() === \"no\" ? '' : 'g'),\r\n      doRegex= event.paramObject.regex === \"yes\",\r\n      regex = new RegExp(doRegex ? event.paramObject.search : $tw.utils.escapeRegExp(event.paramObject.search), modifiers),\r\n      //Tiddler to store the result, if not provided use the source\r\n      destination = event.paramObject.destination || event.paramObject.source;\r\n      $tw.wiki.setText(destination,\"text\",null,text.replace(regex,event.paramObject.replace));\r\n\r\n  });\r\n};\r\n\r\n})();",
            "title": "$:/danielo515/modules/startup/replace.js",
            "type": "application/javascript",
            "module-type": "startup"
        },
        "$:/plugins/danielo515/searchNreplace/readme": {
            "title": "$:/plugins/danielo515/searchNreplace/readme",
            "text": "This is searchNreplace plugin for ~TiddlyWiki.\r\nIt provides an additional controls bar on the default tiddler's editor. Currently it only allows you to search and replace text.\n\n!!Basic usage\r\n# Put what you want to replace in the first field. This is the ''search string''.\r\n# Put what you want to put in place of the search string in the second field.\r\n# Select if you want to do want replace all occurrences by checking the global checkbox.\r\n# Click the replace button.\n\n!!Using regular expressions\r\nSince version 1.2 you are able to use reuglar expressions. To do so just check the `Use regex` checkbox. This allows you to powerfull search and replacements.\n\nYou can also use references on your replace string. Use `$1`...`$N` notation to reference capturing groups.\n\nFor example, if you have a list like this\n\n```\r\nA 10\r\nB 02\r\nC 20\r\nD 35\r\n```\n\nand you want to invert the values, use the following parameters:\r\n* ''search'': `(\\w) (\\d+)`\r\n* ''replace'': `$2 $1`\r\nThis will put what you have captured in the second ''capturing group'' first and the first one in the second place.\n\nThe regular expressions should be valid javascript regular expressions.\n\n!!Requirements\r\nIt ''requires'' at least TW5 core to 5.1.4 or newer.\r\n"
        },
        "$:/plugins/danielo515/searchNreplace/ui/controls": {
            "created": "20150409175313556",
            "list-after": "$:/core/ui/EditTemplate/tags",
            "modified": "20150409182902159",
            "tags": "$:/tags/EditTemplate",
            "title": "$:/plugins/danielo515/searchNreplace/ui/controls",
            "type": "text/vnd.tiddlywiki",
            "text": "<div class=\"tc-edit-controls\">\n<$list filter=\"[all[shadows+tiddlers]tag[$:/tags/EditControls]]\" variable=\"control\">\n<$transclude tiddler=<<control>>>\n</$list>\n</div>"
        },
        "$:/plugins/danielo515/searchNreplace/ui/controls/replace": {
            "created": "20150409182035279",
            "modified": "20150409182544663",
            "tags": "$:/tags/EditControls",
            "title": "$:/plugins/danielo515/searchNreplace/ui/controls/replace",
            "type": "text/vnd.tiddlywiki",
            "text": "<$edit-text tiddler=\"$:/state/searchNreplace/search\" tag=\"input\" default=\"\" placeholder=\"search\"/> <$edit-text tiddler=\"$:/state/searchNreplace/replace\" tag=\"input\" default=\"\" placeholder=\"replace\"/> <$button class=\"button button-tiny button-primary\">Replace\r\n<$action-sendmessage $message=\"tm-replace\" source=<<currentTiddler>> search={{$:/state/searchNreplace/search}} replace={{$:/state/searchNreplace/replace}} global={{$:/state/searchNreplace/global}}\r\nregex={{$:/state/searchNreplace/regex}}/>\r\n</$button>\r\n<$checkbox default=\"yes\" unchecked=\"no\" checked=\"yes\" field=\"text\" tiddler=\"$:/state/searchNreplace/global\">Global</$checkbox>\r\n<$checkbox default=\"no\" unchecked=\"no\" checked=\"yes\" field=\"text\" tiddler=\"$:/state/searchNreplace/regex\">Use regex</$checkbox>"
        },
        "$:/plugins/danielo515/searchNreplace/styles": {
            "created": "20150409181359332",
            "modified": "20150409182956438",
            "tags": "$:/tags/Stylesheet",
            "title": "$:/plugins/danielo515/searchNreplace/styles",
            "type": "text/css",
            "text": "  .tc-edit-controls {\n  border: 1px solid #cccccc;\n  border-top: 0px;\n  padding: 4px 8px 4px 8px;\n}"
        }
    }
}



$:/themes/tiddlywiki/vanilla/metrics/bodyfontsize

15px



$:/themes/tiddlywiki/vanilla/metrics/bodylineheight

24px



$:/themes/tiddlywiki/vanilla/metrics/fontsize

14px



$:/themes/tiddlywiki/vanilla/metrics/lineheight

20px



$:/themes/tiddlywiki/vanilla/options/sidebarlayout

fluid-fixed



Borders

<<glbl_tagged_list>>



btn Delete Tips

<$button>
<$list filter="[tag[ARTICLE]] [tag[IMG]]"><$action-deletetiddler $tiddler=<<currentTiddler>> /></$list>
Del ARTICLE and IMG notes
</$button>



Colors

<<glbl_tagged_list>>



colour Macro

The colour (or color) [[macro|Macros]] returns the [[CSS|Cascading Style Sheets]] value of one the colours in the current [[palette|ColourPalettes]].

If no such entry exists in the current palette, the [[vanilla palette|$:/palettes/Vanilla]] is used instead. If no such entry exists in the vanilla palette, the system looks for a configuration tiddler with the title `$:/config/DefaultColourMappings/<colour-name>` and transcludes the colour from the text field. This enables to plugins to ship defaults for colours that are not present in the core palettes.

!! Parameters

;name
: The name of the palette entry, e.g. `page-background`

<<.macro-examples "colour">>




CSS

<<glbl_tagged_list>>



CSS Issues

<<glbl_article_list>>



CSS Issues\DIV Background Color Gradient

* Use the `<<background-linear-gradient "UrDirection, UrStartColor, UrEndColor" >>` macro to specify alternative browser-specific properties for a DIV Background-Image color gradient

<<glbl_subtip_show "Sample StyleSheet">>
<<glbl_subtip_show "Test Background Color Gradient">>

---
[[Stylesheet Macros]]

<<glbl_core_mcr_def "background-linear-gradient">>

<<ext "CSS Background Gradient">>



CSS Issues\DIV Background Color Gradient\Sample StyleSheet

.sample_div_background_gradient {
<<background-linear-gradient "to right, red , blue">>
}



CSS Issues\DIV Background Color Gradient\Test Background Color Gradient

<div class="sample_div_background_gradient">In a box<br>
<br>
color gradient
</div>




CSS Issues\DIV Box Shadow

* Use the `<<box-shadow "UrShadowPx" >>` macro to specify alternative browser-specific properties for a DIV Box Shadow size

<<glbl_subtip_show "Sample StyleSheet">>
<<glbl_subtip_show "Test DIV Box Shadow">>

---
[[Stylesheet Macros]]

<<glbl_core_mcr_def "box-shadow">>

<<ext "CSS Box Shadow">>



CSS Issues\DIV Box Shadow\Sample StyleSheet

.sample_div_box_shadow {
<<box-shadow "5px 10px #888888">>
}



CSS Issues\DIV Box Shadow\Test DIV Box Shadow

Out of a box shadow

<div class="sample_div_box_shadow">In a box<br>
<br>
shadow

</div><br>
<br>
Way beyond a box shadow



CSS Issues\DIV Transform Origin rotation

* Use the `<<transform-origin "UrXAxisPct UrYAxisPct" >>` macro to specify alternative browser-specific properties for a DIV Transform-Origin rotation

<<glbl_subtip_show "Sample StyleSheet">>
<<glbl_subtip_show "Test Transform Origin rotate">>

---
[[Stylesheet Macros]]

<<glbl_core_mcr_def "transform-origin">>

<<ext "CSS Transform Origin">>



CSS Issues\DIV Transform Origin rotation\Sample StyleSheet

.sample_div_transform_origin_rotate {
<<transform-origin "20% 40%">>
}

div.sample_div_transform_origin_rotate {
  transform: rotate(45deg);
  width=400px;
  position: absolute;
}




CSS Issues\DIV Transform Origin rotation\Test Transform Origin rotate

<div class="sample_div_transform_origin_rotate" style="background-color:aqua">In a short box<br>
<br>
This box is rotated around an off-center point
</div>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>




CSS Issues\DIV Transition Resize Speed

* Use the `<<transition "UrTransitionTime" >>` macro to specify alternative browser-specific properties for a DIV Transition resize speed

<<glbl_subtip_show "Sample StyleSheet">>
<<glbl_subtip_show "Test DIV Transition speed">>

---
[[Stylesheet Macros]]

<<glbl_core_mcr_def "transition">>

<<ext "CSS Transition Speed">>



CSS Issues\DIV Transition Resize Speed\Sample StyleSheet

.sample_div_transition_speed {
<<transition "width 2s">>
}

div.sample_div_transition_speed {
  width: 100px;
}

div:hover.sample_div_transition_speed {
  width: 300px;
}



CSS Issues\DIV Transition Resize Speed\Test DIV Transition speed

<div class="sample_div_transition_speed" style="background-color:aqua">In a short box<br>
<br>
Hover mouse to grow box slowly
</div>



CSS Issues\IMG DataURI

* Use the `<<datauri "UrImageTip" >>` macro to get the Base64 encoding of a Tip Image formatted for use in a CSS uri reference

<<glbl_subtip_code "Sample StyleSheet">>
<<glbl_subtip_show "Test IMG DataURI">>

---
[[datauri Macro]]

<<glbl_core_mcr_def "datauri">>

<<ext "CSS Background Image Base64">>



CSS Issues\IMG DataURI\Sample StyleSheet

.bg_img_striped {
    background-image: url(<$macrocall $name=datauri title="img Sample Black and White Bars"  $output="text/plain" />);
    color:pink;
}



CSS Issues\IMG DataURI\Test IMG DataURI

[[img Sample Black and White Bars]]

<$wikify name=image_b64 text='<<datauri "img Sample Black and White Bars">>' >
<img src=<<image_b64>> />
</$wikify>

<div class="bg_img_striped" >
Pink font over a black and white image repeated horizonally and extended vertically
</div>




CSS Issues\IMG Filter

* Use the `<<filter "UrFilterPct" >>` macro to specify alternative browser-specific properties for an IMG Filter percentage

<<glbl_subtip_show "Sample StyleSheet">>
<<glbl_subtip_show "Test IMG Filter Grayscale">>

---
[[Stylesheet Macros]]

<<glbl_core_mcr_def "filter">>

<<ext "CSS Filter">>



CSS Issues\IMG Filter\Sample StyleSheet

.sample_img_filter_grayscale {
<<filter "grayscale(100%)">>
}



CSS Issues\IMG Filter\Test IMG Filter Grayscale

[img[img TestColor]]

@@.sample_img_filter_grayscale
[img[img TestColor]]
@@

[img[img TestColor]]




CSS Issues\Page-element-named Color Codes

* Use the `<<colour "UrNamedColor" >>` or `<<color "UrNamedColor" >>` macros to retrieve the current Color Pallette Theme's HTML-ready (# prefixed) RGB color (hexacedicmal code) for a particular Page-element, like `page-background`.

<<glbl_subtip_show "Test Named-Color Lookup">>

---
[[colour Macro]]

<<glbl_core_mcr_def "colour">>

<<glbl_core_mcr_def "color">>




CSS Issues\Page-element-named Color Codes\Test Named-Color Lookup

<$list variable=cur_theme filter="[[$:/palette]get[text]]">

Current Theme Pallete = <<cur_theme>>
<$list variable=count_color_names filter="[<cur_theme>indexes[]count[]]">

Count of Color Names = <<count_color_names>>
</$list><!--count_color_names-->

Color Names that start with ''P'':
<$list variable=cur_color_name filter="[<cur_theme>indexes[]prefix[p]]">

* <<cur_color_name>> = <$macrocall $name=color name=<<cur_color_name>> />
</$list><!--cur_color_name-->

</$list><!--cur_theme-->





CSS Issues\Style Precedence

* CSS Precedence example:
** `html body.tc-body` is more specific than `body.tc-body`
!!
* You should always start with the least specific value that works!

---
[[Using Stylesheets]]



CSS Issues\StyleSheets with Tip Macros

```
\rules only filteredtranscludeinline transcludeinline macrodef 
```

* Include the `\rules` line at the start of a Tip that will have or reference Tip macros
** Note: The Tip content type must not be `text/css` in order for the macros to run
!!
* A stylesheet tiddler is processed such that it is first wikified and then the text portion of the ouput is extracted to apply as the CSS
* Any HTML tags you will use in your stylesheet are thus ignored.

<<glbl_subtip_show "Sample StyleSheet">>
<<glbl_subtip_show "Test macro stylesheet">>

---
[[Using Stylesheets]]



CSS Issues\StyleSheets with Tip Macros\Sample StyleSheet

\rules only filteredtranscludeinline transcludeinline macrodef macrocallinline html
\define test_css_style()
	background: aqua;
\end
.macro_css_class {
<<test_css_style>>
}



CSS Issues\StyleSheets with Tip Macros\Test macro stylesheet

The Tip Macro-generated @@.macro_css_class StyleSheet@@ works with any CSS selector.



CSS Issues\Tag-specific Tip Styles

* It is possible to style HTML elements that have specific attributes or attribute values.
* Create a Tip tagged with `data-tags-style`
* Tag with `css-data-tags-test`
* Fill with CSS Attribute Selectors that reference a Tip's tags

<<glbl_subtip_code "Sample StyleSheet">>
<<glbl_subtip_show "Test Tag Styling">>

---
[[Custom styles by data-tags]]

<<ext "CSS Attribute Selector">>



CSS Issues\Tag-specific Tip Styles\Sample StyleSheet

[data-tags*="css-data-tags-test"] {
  border: 2px solid pink;
}





CSS Issues\Tag-specific Tip Styles\Test Tag Styling

[[This Tip |CSS Issues\Tag-specific Tip Styles\Test Tag Styling]] and any other tip tagged with `css-data-tags-test` has a pink border.

Tag List:
<$list variable=cur_tag_name filter="[[CSS Issues\Tag-specific Tip Styles\Test Tag Styling]tags[]]">

* <<cur_tag_name>>
</$list><!--cur_tag_name-->




Custom styles by data-tags

! Attribute: data-tags

<<.from-version "5.1.16">>

The ~TiddlyWiki core adds several `attributes` to the rendered content. These make it possible to apply custom styles to tiddlers. 

For example this tiddler is tagged: <<tag "How to apply custom styles">> and <<tag "example-test">> so the attribute looks like this: 

```
data-tags="[[How to apply custom styles]] example-test"
```

''Important:'' Tiddler tags are ''not'' sorted so the order in the rendered output may be different!

!! Examples

The following CSS is defined in [[Custom data-styles]] and creates a pink border for all tiddlers (including this one) tagged with `example-test`.

```
[data-tags*="example-test"] {
  border: 2px solid pink;
}
```

!!! Styling Stylesheets

So to display tiddlers tagged: `data-tags-styles` in a decent way we can use the following code. (I could have used: `$:/tags/Stylesheet`, but that would affect all stylesheets in this wiki, which is not intended. amt ;)

''Important:'' Don't forget to also specify `.tc-tiddler-body` or the whole tiddler, including the title, will be changed! see: [[Custom data-styles]]

```
[data-tags*="data-tags-styles"] .tc-tiddler-body {
  display: block;
  padding: 14px;
  margin-top: 1em;
  margin-bottom: 1em;
  word-break: normal;
  word-wrap: break-word;
  white-space: pre-wrap;
  background-color: #f5f5f5;
  border: 1px solid #cccccc;
  padding: 0 3px 2px;
  border-radius: 3px;
  font-family: Monaco, Consolas, "Lucida Console", "DejaVu Sans Mono", monospace;
}
```

!! Hard Linebreaks

This mechanism may be handy for users who want to write prose text! See: [[Hard Linebreaks with CSS]]

!! More Possibilities

;[attr]
:Represents an element with an attribute name of attr.

;[attr="value"]
:Represents an element with an attribute name of attr and whose value is exactly "value".

;[attr~="value"]
:Represents an element with an attribute name of attr whose value is a whitespace-separated list of words, one of which is exactly "value".

;[attr|="value"]
:Represents an element with an attribute name of attr. Its value can be exactly “value” or can begin with “value” immediately followed by “-” (U+002D). It can be used for language subcode matches.

;[attr^="value"]
:Represents an element with an attribute name of attr and whose first value is prefixed by "value".

;[attr$="value"]
:Represents an element with an attribute name of attr and whose last value is suffixed by "value".

;[attr*="value"]
:Represents an element with an attribute name of attr and whose value contains at least one occurrence of string "value" as substring.

;[attr "operator value" i]
:Adding an i (or I) before the closing bracket causes the value to be compared case-insensitively (for characters within the ASCII range). 

Learn more at: [[Attribute selectors - CSS|https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors]] or [[CSS-Specification|https://www.w3.org/TR/CSS22/selector.html#attribute-selectors]]




datauri Macro

The <<.def datauri>> [[macro|Macros]] returns a [[data URI|Data URI]] for the content of a tiddler.

It is often used in [[stylesheet|Cascading Style Sheets]] tiddlers to reference things like inline images and fonts:

> `background: url(<<datauri "Motovun Jack.jpg">>);`

The data URI is automatically [[base64|Base64]]-encoded in the case of a non-text tiddler.

!! Parameters

;title
: The title of a tiddler, such as an image

<<.macro-examples "datauri">>




DivPop btn

\define divpop_current(ur_ref)
<$button class=<<tv-config-toolbar-class>> >
<$action-setfield $tiddler="$:/state/sidebar" text="yes"/>
<$action-setfield $tiddler="$:/state/popup/DivPopTitle" text="$ur_ref$"/>
<$action-sendmessage $message="tm-close-tiddler" $param="pop_right"/>
<$list filter="[<tv-config-toolbar-icons>match[yes]]">
{{DivPop.svg}}
</$list>
<$list filter="[<tv-config-toolbar-text>match[yes]]">
<span class="tc-btn-text"><$text text="Popup over Sidebar"/></span>
</$list>
</$button>
\end

<$list filter="[all[current]]">
<$macrocall $name=divpop_current ur_ref=<<currentTiddler>> /> 
</$list>



DivPop glbl

<$list filter="[{$:/state/popup/DivPopTitle}is[tiddler]]">
<div style="
position: fixed;
top: 0px;
right: 0px;
width: 350px;
border: 3px solid;
background: white;
bottom: 0%;
">
<div style="overflow-y: scroll; height: 100%;">
<$button>
<$action-setfield $tiddler="$:/state/sidebar" text="no"/>
<$action-setfield $tiddler="$:/state/popup/DivPopTitle" text=""/>
close
</$button>
<$tiddler tiddler=<<currentTiddler>> >
<$transclude mode="block" />
</$tiddler>
</div>
</div>
</$list>




DivPop.svg

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   inkscape:version="1.0 (4035a4fb49, 2020-05-01)"
   sodipodi:docname="PopupSidebar.svg"
   id="svg52"
   version="1.1"
   height="22pt"
   width="22pt"
   viewBox="0 0 128 128"
   class="tc-image-close-button tc-image-button">
  <metadata
     id="metadata58">
    <rdf:RDF>
      <cc:Work
         rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
        <dc:title></dc:title>
      </cc:Work>
    </rdf:RDF>
  </metadata>
  <defs
     id="defs56">
    <inkscape:perspective
       id="perspective60"
       inkscape:persp3d-origin="64 : 36.371105 : 1"
       inkscape:vp_z="128 : 43.054765 : 1"
       inkscape:vp_y="0 : 313.29655 : 0"
       inkscape:vp_x="0 : 43.054765 : 1"
       sodipodi:type="inkscape:persp3d" />
  </defs>
  <sodipodi:namedview
     inkscape:current-layer="svg52"
     inkscape:window-maximized="0"
     inkscape:window-y="27"
     inkscape:window-x="61"
     inkscape:cy="12.415296"
     inkscape:cx="21.019608"
     inkscape:zoom="8"
     showgrid="false"
     id="namedview54"
     inkscape:window-height="480"
     inkscape:window-width="820"
     inkscape:pageshadow="2"
     inkscape:pageopacity="0"
     guidetolerance="10"
     gridtolerance="10"
     objecttolerance="10"
     borderopacity="1"
     bordercolor="#666666"
     pagecolor="#ffffff" />
  <g
     id="g50"
     fill-rule="evenodd" />
  <rect
     y="13.090909"
     x="10.909091"
     height="104.72727"
     width="111.27273"
     id="rect85"
     style="fill:#cccccc;stroke-width:4.36364" />
  <rect
     y="19.636366"
     x="19.09091"
     height="89.454567"
     width="95.454552"
     id="rect92"
     style="fill:#ffffff;stroke-width:4.36364" />
  <rect
     y="58.909092"
     x="50.727272"
     height="10.909091"
     width="42.545452"
     id="rect94"
     style="fill:#cccccc;stroke-width:4.36364" />
  <path
     id="path96"
     d="m 61.090909,34.363636 c 32.181818,24.545458 32.181818,24.545458 32.181818,24.545458 v 0"
     style="fill:#cccccc;stroke:#cccccc;stroke-width:4.36364px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" />
  <path
     id="path98"
     d="M 64.909091,95.999999 C 93.272727,69.818185 93.272727,69.818185 93.272727,69.818185"
     style="fill:#b3b3b3;stroke:#cccccc;stroke-width:4.36364px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" />
  <rect
     y="16.90909"
     x="86.727272"
     height="94.909088"
     width="8.181818"
     id="rect100"
     style="fill:#cccccc;stroke-width:4.36364" />
</svg>




ext CSS Attribute Selector

[ext[https://www.w3schools.com/css/css_attribute_selectors.asp]]



ext CSS Background Gradient

[ext[https://www.w3schools.com/cssref/func_linear-gradient.asp]]



ext CSS Background Image Base64

[ext[https://www.hongkiat.com/blog/css-encoded-image/]]



ext CSS Box Shadow

[ext[https://www.w3schools.com/cssref/css3_pr_box-shadow.asp]]



ext CSS Filter

[ext[https://www.w3schools.com/cssref/css3_pr_filter.asp]]



ext CSS Transform Origin

[ext[https://www.w3schools.com/cssref/css3_pr_transform-origin.asp]]



ext CSS Transition Speed

[ext[https://www.w3schools.com/cssref/css3_pr_transition.asp]]



ext TW Return

\define TW_Return(ur_url, ur_link_title)
<div style="float:right"><a href="$ur_url$"> ($ur_link_title$)</a></div>
\end
<$list filter="[<tv-config-toolbar-icons>match[no]]">
<$list filter="[{$:/info/url/full}split[/]count[]subtract[1]]" variable=found_index>
<$list filter="[{$:/info/url/full}split[/]butfirst<found_index>first[]split[.html]join[.htm]]">
<$macrocall $name=TW_Return ur_url=<<currentTiddler>> ur_link_title="TiddlyWiki view of website" />
</$list>
</$list>
</$list>
<$list filter="[<tv-config-toolbar-icons>!match[no]]">
<$list filter="[{$:/info/url/full}split[/]count[]subtract[1]]" variable=found_index>
<$list filter="[{$:/info/url/full}split[/]butfirst<found_index>first[]split[.html]join[.htm]split[.htm]join[.html]]">
<$macrocall $name=TW_Return ur_url=<<currentTiddler>> ur_link_title="Static HTML view of website" />
</$list>
</$list>
</$list>




ext Wiki Parsing Rules

[ext[https://github.com/Jermolene/TiddlyWiki5/blob/ffc0899f52b45ba2b5a5a20fb909dcc587e80b3e/core/modules/parsers/wikiparser/rules/rules.js]]



Font Size

<$button>
{{keyboard action FontLarge}}
Big Font
</$button>

<$button>
{{keyboard action FontNormal}}
Normal Font
</$button>

<$button>
<$action-setfield $tiddler="$:/state/sidebar" text="no"/>
<$action-setfield $tiddler="$:/state/popup/DivPopTitle" text=""/>
<$action-setfield $tiddler="$:/state/tab/sidebar--595412856" text="$:/core/ui/SideBar/More"/>
<$action-sendmessage $message="tm-save-wiki" />
Save Wiki to GitHub
</$button>

<$list filter="[<currentTiddler>!prefix[Draft of]]" variable=strTIP_PK>
<$button>
<$list filter="[list[$:/StoryList]] -[<strTIP_PK>]" variable=strCLOSE_PK>
<$action-sendmessage $message="tm-close-tiddler" $param=<<strCLOSE_PK>>/>
</$list>
Close all other open Tips
</$button>
</$list>



<$vars new_tip_entry_pk="$:/state/popup/NewTempTipPK">
<$edit-text tiddler=<<new_tip_entry_pk>> field=text default="New Tip Title" placeholder="[no text yet]" autoHeight=yes tag=input/><br>
<$link to=<<new_tip_entry_pk>> /> = -<$transclude tiddler=<<new_tip_entry_pk>> />-<br>

<$list variable=new_tip filter="[<new_tip_entry_pk>get[text]!match[]]">
<$vars compare_entry_pk="$:/state/popup/CompareTempTipPK">

<$list variable=new_pk filter="[<new_tip>addprefix[$:/state/popup/]]">
<$button>
<$action-sendmessage $message="tm-new-tiddler" title=<<new_pk>> tags="OneTag [[Another Tag]]" text=<<now "Today is DDth, MMM YYYY">>/>
Create Tip ''<<new_tip>>'' and Edit
</$button><br>

<$button>
<$list variable=orig_tip_content filter="[<new_tip>get[text]addprefix[```
]else[yes]]">
<$action-setfield $tiddler=<<new_pk>> text=<<orig_tip_content>> />
</$list>
<$action-navigate $to=<<new_pk>>/>
Create Tip ''<<new_tip>>'' and Show
</$button><br>

<$link to=<<new_pk>> /><br>

<$button>
<$action-sendmessage $message="tm-close-tiddler" $param=<<new_pk>> />
Close Tip: ''<<new_tip>>''
</$button><br>

<$list filter="[<currentTiddler>!prefix[Draft of]]" variable=strTIP_PK>
<$button>
<$list filter="[list[$:/StoryList]] -[<strTIP_PK>]" variable=strCLOSE_PK>
<$action-sendmessage $message="tm-close-tiddler" $param=<<strCLOSE_PK>>/>
</$list>
Close all other open Tips
</$button>
</$list><br>

<$button>
<$action-sendmessage $message="tm-delete-tiddler" $param=<<new_pk>> />
Delete Tip: ''<<new_tip>>'' with confirmation
</$button><br>

<$button>
<$action-sendmessage $message="tm-close-tiddler" $param=<<new_pk>> />
<$action-deletetiddler $tiddler=<<new_pk>> />
Delete Tip: ''<<new_tip>>'' without confirmation
</$button><br>

<$edit-text tiddler=<<compare_entry_pk>> field=text default="Compare Tip Title" placeholder="[no text yet]" autoHeight=yes tag=input/><br>
<$list variable=compare_pk filter="[<compare_entry_pk>get[text]]">
<$link to=<<compare_pk>> />
<$list variable=compare_text filter="[<compare_pk>get[text]]">
<$list variable=new_tip_text filter="[<new_pk>get[text]]">
<$diff-text source=<<new_tip_text>> dest=<<compare_text>> />
</$list><!--new_tip_text-->
</$list><!--compare_text-->
</$list><!--compare_pk-->

</$list><!--new_pk-->
</$vars><!--compare_entry_pk-->
</$list><!--new_tip-->
</$vars><!--new_tip_entry_pk-->


!!Tips tagged with only $ prefixed tags

<$list variable=cur_tip filter="[is[tiddler]has[tags]!prefix[$:/state/]]">
<$list variable=has_non_dprefixed_tag filter="[<cur_tip>tags[]!prefix[$]count[]match[0]]">

<$link to=<<cur_tip>> />
</$list><!--has_non_dprefixed_tag-->
</$list><!--cur_tip-->


!!Tips where has[tags] does not work

<$list variable=cur_tip filter="[is[tiddler]]">
<$list variable=has_tags_test filter="[<cur_tip>!has[tags]count[]] [<cur_tip>has[tags]count[]] +[sum[]match[0]]">

<$link to=<<cur_tip>> />
</$list><!--has_tags_test-->
</$list><!--cur_tip-->

!!Tips with no tags

<$list variable=cur_tip filter="[is[tiddler]!has[tags]!prefix[Draft of]!prefix[$:/state/]!prefix[$:/library/]!prefix[$:/boot/]!prefix[$:/temp/]!match[$:/core]!match[$:/Import]!match[$:/isEncrypted]!match[$:/SiteSubtitle]!match[$:/SiteTitle]!prefix[$:/status/]!match[$:/StoryList]!match[$:/HistoryList]!match[$:/theme]!match[$:/themes/tiddlywiki/snowwhite]!match[$:/themes/tiddlywiki/vanilla]]">
<$list variable=has_parent_tip filter="[<cur_tip>split[\]count[]match[1]]">

<$link to=<<cur_tip>> />
</$list><!--has_parent_tip-->

<$list variable=has_parent_tip filter="[<cur_tip>split[\]count[]!match[1]]">
<$list variable=parent_tip_exists filter="[<cur_tip>split[\]first[]!is[tiddler]]">

<$link to=<<cur_tip>> />
</$list><!--parent_tip_exists-->
</$list><!--has_parent_tip-->
</$list><!--cur_tip-->



<$button>
<$list variable=cur_tip filter="[is[tiddler]!prefix[$:/state/]!prefix[Draft of]has[tags]]">
<$action-listops $tiddler=<<cur_tip>> $tags="+[append[COPY]]"/>
</$list>
<$list variable=cur_tip filter="[is[tiddler]!prefix[$:/state/]!prefix[Draft of]!has[tags]]">
<$list variable=has_parent_tip filter="[<cur_tip>split[\]count[]!match[1]]">
<$list variable=parent_tip_exists filter="[<cur_tip>split[\]first[]is[tiddler]]">
<$action-listops $tiddler=<<cur_tip>> $tags="+[append[COPY]]"/>
</$list><!--parent_tip_exists-->
</$list><!--has_parent_tip-->
</$list><!--cur_tip-->
Append COPY tag to all tips that already have tags
</$button><br>

<$button>
<$list variable=cur_tip filter="[tag[COPY]]">
<$action-listops $tiddler=<<cur_tip>> $tags="+[remove[COPY]]"/>
</$list>
Remove COPY tag from all tips
</$button><br>


[[btn Delete Tips]]




img Sample Black and White Bars

iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAAlklEQVRoBe3UwQnAMAwDQO+/dEsmEBYkryv0Jz1sH5nvwTcz3/X/wRz3hziLMshiA9dZucjiGifqIpvXbrncKu4iLlLBySW00MpKqgRaaFVwcgkttLKSKoEWWhWcXEILraykSqCFVgUnl9BCKyupEmihVcHJJbTQykqqBFpoVXByCS20spIqgRZaFZxcQgutrKRKvKD1AwC3Uv9HYw/tAAAAAElFTkSuQmCC



img TestColor

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



keyboard action FontLarge

<$action-setfield $tiddler="$:/themes/tiddlywiki/vanilla/metrics/fontsize" text="24px"/>
<$action-setfield $tiddler="$:/themes/tiddlywiki/vanilla/metrics/lineheight" text="30px"/>
<$action-setfield $tiddler="$:/themes/tiddlywiki/vanilla/metrics/bodyfontsize" text="25px"/>
<$action-setfield $tiddler="$:/themes/tiddlywiki/vanilla/metrics/bodylineheight" text="34px"/>




keyboard action FontNormal

<$action-setfield $tiddler="$:/themes/tiddlywiki/vanilla/metrics/fontsize" text="14px"/>
<$action-setfield $tiddler="$:/themes/tiddlywiki/vanilla/metrics/lineheight" text="20px"/>
<$action-setfield $tiddler="$:/themes/tiddlywiki/vanilla/metrics/bodyfontsize" text="15px"/>
<$action-setfield $tiddler="$:/themes/tiddlywiki/vanilla/metrics/bodylineheight" text="24px"/>




keyboard action HomeTiddlers

<$action-sendmessage $message="tm-home"/>




keyboard action SaveAllChanges

\define ExportSaveAll(ur_filename, ur_stamp, ur_save_wiki_extension, ur_save_export_html)
<$action-setfield $tiddler="$:/state/sidebar" text="no"/>
<$action-setfield $tiddler="$:/state/popup/DivPopTitle" text=""/>
<$action-setfield $tiddler="$:/state/tab/sidebar--595412856" text="$:/core/ui/SideBar/More"/>
<$action-sendmessage $message="tm-save-wiki" filename="TWMove_$ur_filename$-stamp-$ur_stamp$$ur_save_wiki_extension$"
/>
<$list vairable=save_export_html filter="[[$ur_save_export_html$]match[1]]">
<$action-sendmessage $message="tm-download-file"
$param="$:/core/templates/exporters/StaticRiver" filename="TWMove_$ur_filename$-stamp-$ur_stamp$.html"
exportFilter="""[all[tiddlers]tag[INDEX]sort[title]][all[tiddlers]!tag[EXT]!tag[INDEX]!tag[META]!tag[MCR]!prefix[Draft of]!is[image]!is[tag]!is[system]sort[title]]"""/>
</$list><!--save_export_html-->
<$action-sendmessage $message="tm-download-file"
$param="template ExportAllCode" filename="TWMove_$ur_filename$-stamp-$ur_stamp$.twcode.txt" />
\end
<$list variable=save_export_html filter="[{$:/info/url/full}suffix[.htm]count[]] [[parm SkipSaveExportHTML]is[tiddler]count[]multiply[-1]] +[sum[]]">
<$list variable=save_wiki_extension filter="[{$:/info/url/full}split[.]last[]addprefix[.]]">
<$list variable=save_as_file_name filter="[{$:/info/url/full}suffix[.htm]split[file:///]join[]split[:]join[-colon-]split[.html]join[]split[.htm]join[]split[%20]join[ ]split[/]join[-fslash-]split[%]join[-percent-]]">
<$macrocall $name="ExportSaveAll" ur_filename=<<save_as_file_name>> ur_stamp=<<now format:"YYYYm0MMd0DDam0hhm0mms0ss">> ur_save_wiki_extension=<<save_wiki_extension>> ur_save_export_html=<<save_export_html>> />
</$list><!--save_as_file_name-->
</$list><!--save_export_html-->




Macro

<<glbl_tagged_list>>



mcr glbl_article_list

\define glbl_article_list()
<ol>
<$list filter="[<currentTiddler>addsuffix[\]]">
<$list filter="[all[tiddlers]prefix<currentTiddler>!tag[Test Code]sort[]]">
<li><$link to=<<currentTiddler>> /></li>
</$list>
</$list>
</ol>
\end



mcr glbl_code_split

\define glbl_code_block(ur_note_pk)
[[$ur_note_pk$]]
<$codeblock code={{$ur_note_pk$}} />
\end
\define glbl_code_linenum(ur_note_pk, ur_skip_count, ur_section_size, ur_disp_linenum)
<div style="clear:both">[[$ur_note_pk$]]</div>
<$list filter="[[$ur_skip_count$]!match[]else[0]]" variable=intSKIP_COUNT>
<$list filter="[[$ur_note_pk$]get[text]splitregexp[\n]butfirst<intSKIP_COUNT>count[]]" variable=intLINE_COUNT>
<$list filter="[[$ur_section_size$]!match[]!match[0]else<intLINE_COUNT>]" variable=intSECTION_SIZE>
<$list filter="[range<intSECTION_SIZE>]" variable=intCUR_LINE>
<$list filter="[<intCUR_LINE>subtract[1]]" variable=IntREMOVE_LINE>
<$list filter="[[$ur_note_pk$]get[text]splitregexp[\n]butfirst<intSKIP_COUNT>butfirst<IntREMOVE_LINE>first[]]" variable=strCUR_LINE>
<$list filter="[[$ur_disp_linenum$]!match[n]!match[0]]"><div style="float:left"><<intCUR_LINE>></div></$list>
<$codeblock code=<<strCUR_LINE>> />
</$list></$list></$list></$list></$list></$list>
\end
\define glbl_code_split_group(ur_note_pk, ur_skip_count)
<$list filter="[{$ur_note_pk$}splitregexp[\n]butfirst[$ur_skip_count$]first[100]]"><$list filter="[<currentTiddler>splitregexp[\u0026]join[&#x0026;]splitregexp[\u0027]join[&#x0027;]splitregexp[\u002C]join[&#x002C;]splitregexp[\u002D]join[&#x002D;]splitregexp[\u002F]join[&#x002F;]splitregexp[\u003A]join[&#x003A;]splitregexp[\u003C]join[&#x003C;]splitregexp[\u0040]join[&#x0040;]splitregexp[\u005B]join[&#x005B;]splitregexp[\u005C]join[&#x005C;]splitregexp[\u005E]join[&#x005E;]splitregexp[\u005F]join[&#x005F;]splitregexp[\u0060]join[&#x0060;]splitregexp[\u007B]join[&#x007B;]splitregexp[\u007E]join[&#x007E;]splitregexp[\u0009]join[__	__]splitregexp[\u0020]join[__ __]splitregexp[\u0022\u0022\u0022]join[&#x0022;&#x0022;&#x0022;]]"><<currentTiddler>>
</$list></$list>
\end
\define glbl_code_split_count(ur_note_pk, ur_rem_counter, ur_last_counter, ur_first_line_skip)
<$list filter="[{$ur_last_counter$}subtract{$ur_rem_counter$}multiply[100]add[$ur_first_line_skip$]]"><$macrocall $name=glbl_code_split_group ur_note_pk="$ur_note_pk$" ur_skip_count=<<currentTiddler>> /></$list>
\end
\define glbl_code_split_data()
<$macrocall $name=glbl_code_split_count ur_note_pk=<<source_note_pk>> ur_rem_counter=<<temp_remcounter_pk>> ur_last_counter=<<temp_lastcounter_pk>> ur_first_line_skip=<<first_line_skip>> />
\end
\define glbl_code_split_next_group_disp(ur_rem_counter)
<$list filter="[{$ur_rem_counter$}subtract[1]]">
<$action-setfield $tiddler=<<temp_remcounter_pk>> text=<<currentTiddler>> />
</$list>
\end
\define glbl_code_split_disp(ur_source_note_pk, ur_temp_note_pk, ur_temp_remcounter_pk, ur_first_line_skip)
Line Count: <$list filter="[{$ur_source_note_pk$}splitregexp[\n]butfirst[$ur_first_line_skip$]count[]]"></$list><br>
Rem to find: <$list filter="[{$ur_temp_remcounter_pk$}]"></$list><br>
Source data: [[$ur_source_note_pk$]]<br>
\end
\define glbl_code_split_combine()
$(currentTiddler)$$(str_html_out)$
\end
\define glbl_code_split_init(ur_note_pk, ur_first_line_skip)
<$list filter="[[$ur_first_line_skip$]!match[]then[$ur_first_line_skip$]else[0]]">
  <$vars source_note_pk="$ur_note_pk$" temp_note_pk="$:/state/popup/$ur_note_pk$/HtmlEscapedLinesOutput" temp_remcounter_pk="$:/state/popup/$ur_note_pk$/HtmlEscapedLinesRemCounter" temp_lastcounter_pk="$:/state/popup/$ur_note_pk$/HtmlEscapedLinesLastCounter" first_line_skip=<<currentTiddler>> >
    <$list filter="[{$ur_note_pk$}splitregexp[\n]butfirst<first_line_skip>count[]divide[100]add[1]floor[]]">
      <$button>
        <$action-setfield $tiddler=<<temp_note_pk>> text="" />
        <$action-setfield $tiddler=<<temp_remcounter_pk>> text=<<currentTiddler>> />
        <$action-setfield $tiddler=<<temp_lastcounter_pk>> text=<<currentTiddler>> />
        Reset destination edit field
        </$button>
      </$list><br>
	
    <$edit-text tiddler=<<temp_remcounter_pk>> autoHeight=yes tag=input />
    </$vars>
  </$list>
\end
\define glbl_code_split(ur_note_pk, ur_first_line_skip)
<$macrocall $name=glbl_code_split_init ur_note_pk="$ur_note_pk$" ur_first_line_skip="$ur_first_line_skip$" /><br>
<$list filter="[[$ur_first_line_skip$]!match[]then[$ur_first_line_skip$]else[0]]">
  <$vars source_note_pk="$ur_note_pk$" temp_note_pk="$:/state/popup/$ur_note_pk$/HtmlEscapedLinesOutput" temp_remcounter_pk="$:/state/popup/$ur_note_pk$/HtmlEscapedLinesRemCounter" temp_lastcounter_pk="$:/state/popup/$ur_note_pk$/HtmlEscapedLinesLastCounter" first_line_skip=<<currentTiddler>> >
    <$macrocall $name=glbl_code_split_disp ur_source_note_pk=<<source_note_pk>> ur_temp_note_pk=<<temp_note_pk>> ur_temp_remcounter_pk=<<temp_remcounter_pk>> ur_temp_lastcounter_pk=<<temp_lastcounter_pk>> ur_first_line_skip=<<first_line_skip>> />
    <$button>
      <$wikify name=str_html_out text=<<glbl_code_split_data>> >
        <$list filter="[<temp_note_pk>get[text]else[]]"><$vars combine_html_out=<<glbl_code_split_combine>> >
        <$action-setfield $tiddler=<<temp_note_pk>> text=<<combine_html_out>> />
         </$vars></$list>
        <$macrocall $name=glbl_code_split_next_group_disp ur_rem_counter=<<temp_remcounter_pk>> />
        </$wikify>
      
      Find next 100 lines
      </$button><br>

    <$edit-text tiddler=<<temp_note_pk>> autoHeight=no />
    </$vars>
  </$list>
\end
\define glbl_code_disp_group(ur_note_pk, ur_skip_count)
<$list filter="[{$ur_note_pk$}splitregexp[\n]butfirst[$ur_skip_count$]first[100]]"><$list filter="[<currentTiddler>splitregexp[\u0026]join[&#x0026;]splitregexp[\u00A0]join[&nbsp;]splitregexp[\u0009]join[&nbsp;&nbsp;&nbsp;&nbsp;]splitregexp[\u0020]join[&nbsp;]splitregexp[\u0027]join[&#x0027;]splitregexp[\u002C]join[&#x002C;]splitregexp[\u002D]join[&#x002D;]splitregexp[\u002F]join[&#x002F;]splitregexp[\u003A]join[&#x003A;]splitregexp[\u003C]join[&#x003C;]splitregexp[\u0040]join[&#x0040;]splitregexp[\u005B]join[&#x005B;]splitregexp[\u005C]join[&#x005C;]splitregexp[\u005E]join[&#x005E;]splitregexp[\u005F]join[&#x005F;]splitregexp[\u0060]join[&#x0060;]splitregexp[\u007B]join[&#x007B;]splitregexp[\u007E]join[&#x007E;]]"><<currentTiddler>><br></$list></$list>
\end
\define glbl_code_disp_count(ur_note_pk, ur_rem_counter, ur_last_counter, ur_first_line_skip)
<$list filter="[{$ur_last_counter$}subtract{$ur_rem_counter$}multiply[100]add[$ur_first_line_skip$]]"><$macrocall $name=glbl_code_disp_group ur_note_pk="$ur_note_pk$" ur_skip_count=<<currentTiddler>> /></$list>
\end
\define glbl_code_disp_data()
<$macrocall $name=glbl_code_disp_count ur_note_pk=<<source_note_pk>> ur_rem_counter=<<temp_remcounter_pk>> ur_last_counter=<<temp_lastcounter_pk>> ur_first_line_skip=<<first_line_skip>> />
\end
\define glbl_code_disp_next_group_disp(ur_rem_counter, ur_oper)
<$list filter="[{$ur_rem_counter$}$ur_oper$[1]]">
<$action-setfield $tiddler=<<temp_remcounter_pk>> text=<<currentTiddler>> />
</$list>
\end
\define glbl_code_disp_disp(ur_source_note_pk, ur_temp_remcounter_pk, ur_first_line_skip)
Line Count: <$list filter="[{$ur_source_note_pk$}splitregexp[\n]butfirst[$ur_first_line_skip$]count[]]"></$list><br>
Rem to browse: <$list filter="[{$ur_temp_remcounter_pk$}]"></$list><br>
\end
\define glbl_code_disp_init(ur_note_pk, ur_first_line_skip)
<$list filter="[[$ur_first_line_skip$]!match[]then[$ur_first_line_skip$]else[0]]">
  <$vars source_note_pk="$ur_note_pk$" temp_remcounter_pk="$:/state/popup/$ur_note_pk$/HtmlEscapedLinesRemCounter" temp_lastcounter_pk="$:/state/popup/$ur_note_pk$/HtmlEscapedLinesLastCounter" first_line_skip=<<currentTiddler>> >
    <$list filter="[{$ur_note_pk$}splitregexp[\n]butfirst<first_line_skip>count[]divide[100]floor[]]">
      <$button>
        <$action-setfield $tiddler=<<temp_remcounter_pk>> text=<<currentTiddler>> />
        <$action-setfield $tiddler=<<temp_lastcounter_pk>> text=<<currentTiddler>> />
        Reset destination edit field
        </$button>
      </$list><br>
	
    <$edit-text tiddler=<<temp_remcounter_pk>> autoHeight=yes tag=input />
    </$vars>
  </$list>
\end
\define glbl_code_disp(ur_note_pk, ur_first_line_skip)
<$macrocall $name=glbl_code_disp_init ur_note_pk="$ur_note_pk$" ur_first_line_skip="$ur_first_line_skip$" /><br>
[[$ur_note_pk$]]<br>
<$list filter="[[$ur_first_line_skip$]!match[]then[$ur_first_line_skip$]else[0]]">
  <$vars source_note_pk="$ur_note_pk$" temp_remcounter_pk="$:/state/popup/$ur_note_pk$/HtmlEscapedLinesRemCounter" temp_lastcounter_pk="$:/state/popup/$ur_note_pk$/HtmlEscapedLinesLastCounter" first_line_skip=<<currentTiddler>> >
    <$macrocall $name=glbl_code_disp_disp ur_source_note_pk=<<source_note_pk>> ur_temp_remcounter_pk=<<temp_remcounter_pk>> ur_temp_lastcounter_pk=<<temp_lastcounter_pk>> ur_first_line_skip=<<first_line_skip>> />
    <$button>
      <$macrocall $name=glbl_code_disp_next_group_disp ur_rem_counter=<<temp_remcounter_pk>> ur_oper="subtract" />
      
      Browse next 100 lines
      </$button><br>
    <$button>
      <$macrocall $name=glbl_code_disp_next_group_disp ur_rem_counter=<<temp_remcounter_pk>> ur_oper="add" />
      
      Browse prev 100 lines
      </$button><br>

    <<glbl_code_disp_data>>
    </$vars>
  </$list>
\end

<!--<$macrocall $name=glbl_code_disp ur_note_pk="WebNotes\Data" ur_first_line_skip=1 />-->

<!--<<glbl_code_disp "WebNotes\Data 1 >>-->

<!--Does not pass through the \u0009 tab or \u00A0 non-breaking space characters. Chrome highlight and copy puts spaces on the clipboard.-->

<!--[[WebNotes\Data]]-->

<!--<$macrocall $name=glbl_code_split ur_note_pk="WebNotes\Data" ur_first_line_skip=1 />-->

<!--<<glbl_code_block "UrNotePK">>-->

<!--<<glbl_code_linenum "UrNotePK" 0 15 n>>-->



mcr glbl_compare_lines

\define glbl_compare_lines_results_table(ur_note_pk, ur_second_pk, ur_row_count)
<table><tr>
<th>''Line''</th>
<th>Show text</th>
<th>First Side<br>Second Side</th>
</tr>
<$list filter="[range<intSECOND_COUNT>subtract[1]]" variable="intCUR_ENTRY">
<$list filter="[{$ur_note_pk$}splitregexp[\n]butfirst<intCUR_ENTRY>first[]]" variable="strFIRST_LINE">
<$list filter="[{$ur_second_pk$}splitregexp[\n]butfirst<intCUR_ENTRY>first[]!match<strFIRST_LINE>]" variable="strSECOND_LINE">
<tr>
<td rowspan=2>

!!<<intCUR_ENTRY>>
</td>
<td>
<$button>
<$action-setfield $tiddler="$:/state/CompareTextLine1" text=<<intCUR_ENTRY>>/>
<$action-setfield $tiddler="$:/state/CompareTextSection1" text="""<$edit-text tiddler="$:/state/CompareTextLine1" field=text default="" placeholder="[no text yet]" autoHeight=no tag=input/>
<$list filter="[{$:/state/CompareTextLine1}!match[]else[0]]" variable=intSTART_LINE><$list filter="[<intSTART_LINE>subtract[1]]" variable=intPREV_LINE>
<$list filter="[<intSTART_LINE>add[1]]" variable=intNEXT_LINE>
<$button>
<$action-setfield $tiddler="$:/state/CompareTextLine1" text=<<intPREV_LINE>>/>
<<intPREV_LINE>>
</$button>
<$button>
<$action-setfield $tiddler="$:/state/CompareTextLine1" text=<<intNEXT_LINE>>/>
<<intNEXT_LINE>>
</$button><br>[[$ur_note_pk$]]<br>
<$macrocall $name=glbl_code_disp_group ur_note_pk="$ur_note_pk$"  ur_skip_count=<<intSTART_LINE>> />
</$list></$list></$list>""" />
<$action-navigate $to="$:/state/CompareTextSection1"/>
<<intCUR_ENTRY>>
</$button>
</td>
<td><$codeblock code=<<strFIRST_LINE>> /></td>
</tr>
<tr>
<td>
<$button>
<$action-setfield $tiddler="$:/state/CompareTextLine2" text=<<intCUR_ENTRY>>/>
<$action-setfield $tiddler="$:/state/CompareTextSection2" text="""<$edit-text tiddler="$:/state/CompareTextLine2" field=text default="" placeholder="[no text yet]" autoHeight=no tag=input/>
<$list filter="[{$:/state/CompareTextLine2}!match[]else[0]]" variable=intSTART_LINE>
<$list filter="[<intSTART_LINE>subtract[1]]" variable=intPREV_LINE>
<$list filter="[<intSTART_LINE>add[1]]" variable=intNEXT_LINE>
<$button>
<$action-setfield $tiddler="$:/state/CompareTextLine2" text=<<intPREV_LINE>>/>
<<intPREV_LINE>>
</$button>
<$button>
<$action-setfield $tiddler="$:/state/CompareTextLine2" text=<<intNEXT_LINE>>/>
<<intNEXT_LINE>>
</$button><br>[[$ur_second_pk$]]<br>
<$macrocall $name=glbl_code_disp_group ur_note_pk="$ur_second_pk$"  ur_skip_count=<<intSTART_LINE>> />
</$list></$list></$list>""" />
<$action-navigate $to="$:/state/CompareTextSection2"/>
<<intCUR_ENTRY>>
</$button>
</td>
<td><$codeblock code=<<strSECOND_LINE>> /></td>
</tr>
</$list></$list></$list>
</table>
\end
\define glbl_compare_lines(ur_note_pk, ur_second_pk)
<$list filter="[{$ur_note_pk$}splitregexp[\n]count[]]" variable="intFIRST_COUNT">
<$list filter="[{$ur_second_pk$}splitregexp[\n]count[]]" variable="intSECOND_COUNT">
<$list filter="[{$ur_second_pk$}splitregexp[\n]count[]subtract<intFIRST_COUNT>]" variable="intSECOND_EXTRA">

[[$ur_note_pk$]] line count: <<intFIRST_COUNT>>

[[$ur_second_pk$]] line count: <<intSECOND_COUNT>>

''$ur_second_pk$'' excess line count: ''<<intSECOND_EXTRA>>''

<$macrocall $name=glbl_compare_lines_results_table ur_note_pk="$ur_note_pk$" ur_second_pk="$ur_second_pk$" ur_row_count=<<intSECOND_COUNT>> />
</$list>
</$list>
</$list>
\end

<!--
<$edit-text tiddler="$:/state/CompareText1" field=text default="" placeholder="[no text yet]" autoHeight=no tag=textarea/>
<$edit-text tiddler="$:/state/CompareText2" field=text default="" placeholder="[no text yet]" autoHeight=no tag=textarea/>

<<glbl_compare_lines "$:/state/CompareText1" "$:/state/CompareText2">>
-->



mcr glbl_core_mcr_def

\define glbl_core_mcr_def(ur_macro_name)
<$list variable=cur_pk filter="""[[$:/core]get[text]split[define $ur_macro_name$(]butfirst[]split[\n\\end]first[]addprefix[define $ur_macro_name$(]addsuffix[\n\\end]split[\\]join[\]split[\"]join["]split[\n]join[
]]""">
<$codeblock code=<<cur_pk>> />
</$list><!--cur_pk-->
\end




mcr glbl_ext

\define ext(ur_extnote_pk)
<$list filter="[[ext $ur_extnote_pk$]get[text]count[]match[0]]">Missing: [$ur_extnote_pk$]</$list>
{{ext $ur_extnote_pk$}}<div style="float:right">[[->|ext $ur_extnote_pk$]]</div>
\end




mcr glbl_image

\define glbl_image_high(ur_image_pk, ur_size:200)
<$link to="$ur_image_pk$">[img height=$ur_size$px [$ur_image_pk$]]</$link>
\end
\define glbl_image_wide(ur_image_pk, ur_size:500)
<$link to="$ur_image_pk$">[img width=$ur_size$px [$ur_image_pk$]]</$link>
\end



mcr glbl_subtip_code

\define glbl_subtip_code(ur_subtip)
<$list variable=subtip_pk filter="[<currentTiddler>split[Draft of ]join[]split[']join[]addsuffix[\$ur_subtip$]]">
<$list variable=subtip_wtext filter="[<subtip_pk>get[text]]">
<div style="clear:both;float:right;"><$link to=<<subtip_pk>> >-></$link></div>
<$codeblock code=<<subtip_wtext>> />
</$list><!--subtip_wtext-->
</$list><!--subtip_pk-->
\end
\define glbl_subtip_show(ur_subtip)
<<glbl_subtip_code "$ur_subtip$">>
<$list variable=subtip_pk filter="[<currentTiddler>split[Draft of ]join[]split[']join[]addsuffix[\$ur_subtip$]]">
<div style="clear:both;float:right;"><$link to=<<subtip_pk>> >-></$link></div>
<$transclude mode="block" tiddler=<<subtip_pk>> />
</$list><!--subtip_pk-->
\end




mcr glbl_tagged_list

\define glbl_tagged_list()
<$list variable=cur_pk filter="[tag<currentTiddler>]">

!! <$link to=<<cur_pk>> />
<$transclude mode="block" tiddler=<<cur_pk>> />
</$list>
\end




Page Layout

<<glbl_article_list>>



Page Layout\Palette

!! Control Panel
* [Appearance tab, Palette sub-tab]
* Select a Palette record to reformat page element colors



Page Layout\Theme

!! Control Panel
* [Appearance tab, Theme sub-tab]
* Select a Theme record to reformat page element borders



parm SkipSaveExportHTML



Pragma

<<glbl_tagged_list>>



Recent Entries

[[Search All Fields]]

[[View All Tips]]

[[View All Code]]

[[Font Size]]

<<timeline limit:30 format:"YYYY-0MM-0DD">>



Reserved Names

<<glbl_tagged_list>>



Search All Fields

<$vars search_text_pk="$:/state/popup/SearchAllFields">
<$list variable=show_code_pk filter="[<search_text_pk>addsuffix[-checkShowCode]]">
<$list variable=skip_system_pk filter="[<search_text_pk>addsuffix[-checkSkipSystem]]">
<$edit-text tiddler=<<search_text_pk>> field=text default="" placeholder="[no text yet]" autoHeight=yes tag=input/>
<$checkbox default="no" unchecked="no" checked="yes" field="text" tiddler=<<show_code_pk>>> Show Code</$checkbox>
<$checkbox default="yes" unchecked="no" checked="yes" field="text" tiddler=<<skip_system_pk>>> Skip System </$checkbox><br>
<br>

<$list variable=cur_search_text filter="[<search_text_pk>get[text]!match[]]">
<$list variable=cur_showcode_text filter="[<show_code_pk>get[text]else[no]]">
<$list variable=cur_skipsystem_text filter="[<skip_system_pk>get[text]else[yes]match[yes]count[]]">

<!--Tip titles-->
<$list variable=cur_pk filter="[regexp<cur_search_text>sort[]]">
<$list variable=found_skipsystem filter="[<cur_skipsystem_text>] [<cur_pk>!is[system]count[]] +[sum[]match[1]]">

<<cur_pk>>: <<cur_field>>
</$list><!--found_skipsystem-->
</$list><!--cur_pk-->

<!--Tip fields-->
<$list variable=cur_pk filter="[!regexp<cur_search_text>sort[]]">
<$list variable=found_skipsystem filter="[<cur_pk>is[system]count[]multiply<cur_skipsystem_text>match[0]]">
<$list variable=cur_field filter="[<cur_pk>fields[]]">
<$list variable=found_field filter="[<cur_pk>get<cur_field>regexp<cur_search_text>]">

<$link to=<<cur_pk>> />: <<cur_field>>
<$list variable=disp_code filter="[<cur_showcode_text>match[yes]]">
<$codeblock code=<<found_field>> />
</$list><!--disp_code-->
</$list><!--found_field-->
</$list><!--cur_field-->

</$list><!--found_skipsystem-->
</$list><!--cur_pk-->

</$list><!--cur_skipsystem_text-->
</$list><!--cur_showcode_text-->
</$list><!--cur_search_text-->
</$list><!--skip_system_pk-->
</$list><!--show_code_pk-->
</$vars><!--search_text_pk-->



Setting a favicon

"favicons" are small icons that most browsers display to help users identify websites. Note that all browsers support bitmap images, but only certain modern browsers support SVG format icons.

! favicons in the Browser

When TiddlyWiki starts up in the browser it looks for a tiddler called [[$:/favicon.ico]] and dynamically uses it as the favicon for the page. If you modify the image then the favicon changes instantly to reflect it.

<<.from-version "5.1.23">> To set an external image as the favicon, assign the URL to the ''_canonical_uri'' field of the [[$:/favicon.ico]] tiddler.

! favicons on the Server

On the server, the ServerCommand will serve the tiddler [[$:/favicon.ico]] at the path `/favicon.ico`.






Setting a page background image

# Import your image as a tiddler (see [[Images in WikiText]])
#* You can also use an [[external image|ExternalImages]]
# Open the [[control panel|$:/ControlPanel]] <<.icon $:/core/images/options-button>> and switch to the ''Appearance''/''Theme Tweaks'' tab
# Select your image from the dropdown labelled "Page background image"
# Set "Page background image attachment" to "Fixed to window" to have the background stay stationary and the content to scroll over the top of it, or "Scroll with tiddlers" to have it move (note that the iPhone/iPad [[doesn't support the fixed setting|http://stackoverflow.com/a/20444219]] for performance reasons)
# Set "Page background image size" as follows:
#* ''Auto'' causes the background image to be tiled over the page background
#* ''Cover'' causes the background image to be sized so that it completely covers the page. Some of the image may be clipped
#* ''Contain'' causes the background image to be sized so that it fits within the page

Note that the palette ''DarkPhotos'' is provided to make the sidebar more readable on dark background images.





Sizing

<<glbl_tagged_list>>



Stylesheet Macros

The following core [[macros|Macros]] make it easy to specify alternative browser-specific properties when constructing a [[stylesheet|Cascading Style Sheets]] tiddler:

;`<<box-shadow shadow>>`
: for the `x-box-shadow` properties
;`<<filter filter>>`
: for the `x-filter` properties
;`<<transition transition>>`
: for the `x-transition` properties
;`<<transform-origin origin>>`
: for the `x-transition-origin` properties
;`<<background-linear-gradient gradient>>`
: for the `x-linear-gradient` values of the `background-image` property

The following macros are documented separately:

* colour
* datauri

All these macros are defined in the [[$:/core/macros/CSS]] tiddler.

<$list variable=cur_var filter="[[$:/core/macros/CSS]get[text]]">
<$codeblock code=<<cur_var>> />
</$list>




template ExportAllCode

\define renderContent()
<$list variable=cur_tip_pk filter="[all[tiddlers]!has[draft.of]has[tags]!prefix[undefined]sort[title]]">
<hr>
<h2><$link to=<<cur_tip_pk>> /></h2>
<$list variable=cur_tip_text filter="[<cur_tip_pk>get[text]]">
<$codeblock code=<<cur_tip_text>> />
</$list><!--cur_tip_text-->
</$list><!--cur_tip_pk-->
\end
<<renderContent>>



template Home Button

<div style="float:right;padding-left:30px;">
{{$:/core/ui/TopBar/menu}}
</div>

<div style="float:right"><$button set="$:/state/sidebar" setTo="no" tooltip={{$:/language/Buttons/Home/Hint}} aria-label={{$:/language/Buttons/Home/Caption}} class=<<tv-config-toolbar-class>>>
<span class="tc-dirty-indicator">
<$list filter="[<tv-config-toolbar-icons>match[yes]]">
{{$:/core/images/home-button}}
</$list>
<$list filter="[<tv-config-toolbar-text>match[yes]]">
<span class="tc-btn-text"><$text text={{$:/language/Buttons/Home/Caption}}/></span>
</$list>
</span>
<$action-sendmessage $message="tm-home"/>
</$button></div>




Text Formatting

<<glbl_article_list>>



Text Formatting\CSS Classes

!! New Tip
* Tag = `$:/tags/Stylesheet`
* Content type = `text/css`
* Body text =

<<glbl_subtip_code "Test a_class_css">>

!! Usage
* @''''@ syntax requires a class name to start with a period (''.'') and ''Not'' be followed by a semicolon ('';'')

<<glbl_subtip_show "Test code apply class">>




Text Formatting\CSS Classes\Test a_class_css

.a_css_class {
	background: red;
}



Text Formatting\CSS Classes\Test code apply class

You can apply @@.a_css_class CSS styles @@ in-line with the text.



Text Formatting\CSS in HTML

Usage
@@ syntax requires each css style-value pair be followed by a semicolon (;) and ''No'' spaces between the semicolon and the next style name

<<glbl_subtip_show "Test code apply style-value">>



Text Formatting\CSS Span

!! Usage
* @''''@ syntax requires each css style-value pair be followed by a semicolon (;) and ''No'' spaces between the semicolon and the next style name

<<glbl_subtip_show "Test code apply style-value">>

<<glbl_subtip_show "Test code apply style block">>



Text Formatting\CSS Span\Test code apply style block

You can apply CSS classes and styles:

@@background-color:yellow;
* Inline @''''@ syntax
* Block @''''@ syntax
* In html ''class'' attributes
* In html ''style'' attributes
@@





Text Formatting\CSS Span\Test code apply style-value

You can apply @@background-color:yellow; CSS styles @@ in-line with the text.



TiddlyWiki Features

{{ext TW Return}}

Documents:

<<list-links filter:"[tag[DOC]!is[draft]sort[title]]">>

Topics:

<<list-links filter:"[tag[TOPIC]!is[draft]sort[title]]">>

[[___|Recent Entries]]



Tip Code

<<glbl_article_list>>



Tip Code\Define a Tip-specific macro

```
\define UrMacroName(ur_macro_parm1, ur_macro_parm2) One-line macro

\define UrMacroName(ur_macro_parm1, ur_macro_parm2)
Macro with

several lines
\end

\define UrMacroName(ur_macro_parm1 ur_macro_parm2)
Macro parameter separator is optional
\end

\define UrMacroName()
Parentheses are required, and there must NOT be any spaces between the macro name and the open parenthesis
\end
```

* If a Tip has macro definitions and is tagged with `$:/tags/Macro`, you may use that Tip's macros within any other Tip code

<<glbl_subtip_show "Sample local macro">>
<<glbl_subtip_show "Sample global macro">>
<<glbl_subtip_show "Test local and global macros">>

---
[[TW Pragma]]




Tip Code\Define a Tip-specific macro\Sample global macro

\define sample_global_macro()
Some global sample text

Note: This Tip has a `$:/tags/Macro tag`
\end




Tip Code\Define a Tip-specific macro\Sample local macro

\define sample_tip_specific_macro()
Some local sample text

This Tip does not have a `$:/tags/Macro tag`
\end
<<sample_tip_specific_macro>>



Tip Code\Define a Tip-specific macro\Test local and global macros

<<sample_tip_specific_macro>>
The tip-specific macro does not work.

<<sample_global_macro>>



Tip Code\Include Non-global macros

```
\import <filter-expression>
```

* If a Tip has macro definitions and is not tagged with `$:/tags/Macro`, you must import that Tip to use its macros

<<glbl_subtip_code "Sample macro">>
<<glbl_subtip_show "Test missing macro">>
<<glbl_subtip_show "Test imported macro">>

---
[[TW Pragma]]




Tip Code\Include Non-global macros\Sample macro

\define test_macro()
It is now: <<now>>
\end



Tip Code\Include Non-global macros\Test imported macro

\import [[Tip Code\Include Non-global macros\Sample macro]]
<<test_macro>>




Tip Code\Include Non-global macros\Test missing macro

<<test_macro>>
No results here



Tip Code\Tip-specific Interpreting Rules

```
\rules only filteredtranscludeinline transcludeinline macrodef macrocallinline html
```

* Place at the start of a Tip to keep the a Tip from parsing any code but macros and transclusion
* This is useful in a CSS Template to keep special WikiText formatting codes from being parsed
** Note: The CSS Template must not have Tip content type = `text/css` to be able to run macros

<<glbl_subtip_show "Test CSS parsing rules">>

---
[[Using Stylesheets]]

[[TW Pragma]]

<<ext "Wiki Parsing Rules">>



Tip Code\Tip-specific Interpreting Rules\Test CSS parsing rules

\rules only filteredtranscludeinline transcludeinline macrodef macrocallinline html
This would normally ''be bold font''. The WikiText parsing rules are excluded, so you can see the doubled-single quotes (') + (').



Tip Code\Tip-specific Whitespace rules

`\whitespace trim` or `\whitespace notrim`

* Place at the start of a Tip to keep the a Tip from keeping any whitespace before, between and after any html coded tags
* The default option is ''notrim''

<<glbl_subtip_show "Test trim">>
<<glbl_subtip_show "Test notrim">>

---
[[TW Pragma]]



Tip Code\Tip-specific Whitespace rules\Test notrim

\whitespace notrim
The whitespace before, ''between '' and after tags is '' kept,

even on multiple lines,'' inside or outside of the tag.

Starting a new line ''with an in-line tag'' still keeps

multiple lines separated.




Tip Code\Tip-specific Whitespace rules\Test trim

\whitespace trim
The whitespace before, ''between '' and after tags is '' trimmed,

even on multiple lines,'' until you are out of the tag.

Starting a new line ''with an in-line tag'' lets you keep

multiple lines separated.




TW Pragma

A <<.def pragma>> is a special component of WikiText that provides control over the way the remaining text is parsed.

Pragmas occupy lines that start with `\`. They can only appear at the start of the text, but blank lines are allowed between them. If a pragma line appears in the main body of the text, it is treated as if it was ordinary text.

The following pragmas are available:

;`\define`
: for defining a [[macro|Macros]]
;`\rules`
: for adjusting the set of rules used to parse the text
;`\whitespace trim` or `\whitespace notrim`
: <<.from-version "5.1.15">> Control whether whitespace is trimmed from the start and end of text runs (the default is ''notrim''). This setting can be useful when the whitespace generated by linebreaks disturbs formatting
;`\import <filter-expression>`
: <<.from-version "5.1.18">> for importing macro definitions from tiddlers identified by a filter expression




Using Stylesheets

\define tv-config-toolbar-text() yes

\define openCpTheme()
<$action-setfield $tiddler="$:/state/tab-1749438307" $value="$:/core/ui/ControlPanel/Appearance"/>
<$action-setfield $tiddler="$:/state/tab--1963855381" $value="$:/core/ui/ControlPanel/Theme"/>
<$action-navigate $to="$:/ControlPanel"/>
\end

! Theme and Colorpalette

The first steps to changing the appearance of ~TiddlyWiki are to choose and apply:

* One of the available themes: <span class="tc-btn-standard"> {{$:/core/ui/Buttons/theme}} </span>
* Modify the colour palette: <span class="tc-btn-standard"> {{$:/core/ui/Buttons/palette}} </span>
* Experiment with the <$button actions=<<openCpTheme>> ><<.icon $:/core/images/options-button>> ControlPanel</$button>

! Work with Stylesheets

In addition to the control panel, custom styles can be defined by tagging a tiddler `$:/tags/Stylesheet`. Try creating a custom stylesheet now with the following content in order to change the page background colour to red:

```
body.tc-body {
	background: red;
}
```

!! Additional Resrouces

* [[Cascading Style Sheets (CSS) at mozilla|https://developer.mozilla.org/en-US/docs/Web/CSS]]
* [[Cascading Style Sheets (CSS) at w3scools|http://www.w3schools.com/css]]

! Overriding Theme Settings

Custom stylesheets are applied independently from theme stylesheets. Therefore, it is often necessary for the css rules in your custom stylesheet to be more specific than those of the theme you want to override. For example, `html body.tc-body` is more specific than `body.tc-body`. 

<<.tip "''You should always start with the least specific value that works!''<br><br>">>

! Stylesheet Types

Usually it is best to use the type `text/css` for stylesheets. This treats them as plain stylesheets, and ensures that ~TiddlyWiki doesn't apply any wiki processing to them.

If you wish to use macros and transclusions in your stylesheets you should instead use the default WikiText type `text/vnd.tiddlywiki`. This allows full ~WikiText processing to be performed. Here is an example:

```
\rules only filteredtranscludeinline transcludeinline macrodef macrocallinline html

body.tc-body pre {
	<<box-shadow "inset 0 1px 0 #fff">>
}
```

The `\rules` pragma at the top of the tiddler restricts the ~WikiText to just allow macros and transclusion. This avoids mistakenly triggering unwanted ~WikiText processing.

A stylesheet tiddler is processed such that it is first wikified and then the text portion of the ouput is extracted to apply as the CSS. Any HTML tags you will use in your stylesheet are thus ignored. For example, HTML elements generated by the RevealWidget will not affect the output. As in the following example, you can wrap CSS rules in `<pre>` tags to display them as a codeblock without affecting processing, including handling the inner macro.

```
\rules only filteredtranscludeinline transcludeinline macrodef macrocallinline html

<pre>body.tc-body pre {
	<<box-shadow "inset 0 1px 0 #fff">>
}
</pre>
```

!! Stylesheet Macros

The ~TiddlyWiki core provides several [[global macros that are helpful in constructing stylesheets|Stylesheet Macros]].




View All Code

<$list variable=cur_tip_pk filter="[all[tiddlers]!has[draft.of]has[tags]!prefix[undefined]sort[title]]">
<hr>
<h2><$link to=<<cur_tip_pk>> /></h2>
<$list variable=cur_tip_text filter="[<cur_tip_pk>get[text]]">
<$codeblock code=<<cur_tip_text>> />
</$list><!--cur_tip_text-->
</$list><!--cur_tip_pk-->



View All Tips

<$list filter="[all[tiddlers]!tag[EXTLINK]!tag[IMG]!tag[INDEX]!tag[MCR]!tag[META]!has[draft.of]!is[image]!is[tag]!is[system]has[tags]!prefix[undefined]sort[title]]">
<hr>
<h2><$link to=<<currentTiddler>> /></h2>
{{||$:/core/ui/ViewTemplate/tags}}
<$transclude mode="block"/>
</$list>



Web Browser Tab

<<glbl_article_list>>



Web Browser Tab\FavIcon

When TiddlyWiki starts up in the browser it looks for a tiddler called $:/favicon.ico and dynamically uses it as the favicon for the page. 

---
[[Setting a favicon]]




Wiki Startup

<<glbl_tagged_list>>

