

$:/config/MissingLinks

no



$:/config/Navigation/openLinkFromOutsideRiver

bottom



$:/config/Navigation/Permalinkview/CopyToClipboard

no



$:/config/ShortcutInfo/font-large



$:/config/ShortcutInfo/font-normal



$:/config/ShortcutInfo/home-tiddlers



$:/config/ShortcutInfo/preview-card



$:/config/ShortcutInfo/save-all-changes



$:/config/shortcuts/font-large

ctrl-shift-Quote



$:/config/shortcuts/font-normal

ctrl-shift-Comma



$:/config/shortcuts/home-tiddlers

alt-H



$:/config/shortcuts/preview-card

alt-V



$:/config/shortcuts/save-all-changes

alt-S



$:/config/TextEditor/EnableToolbar

no



$:/config/ViewToolbarButtons/Visibility/$:/positivesigner/gcmpr/btn gcmpr card

hide



$:/config/WikiParserRules/Inline/wikilink

disable



$:/DefaultTiddlers

[tag[INDEX]has[sort_ord]sort[title]]
[tag[INDEX]!has[sort_ord]sort[title]]




$:/ext

<$vars cur_title=<<currentTiddler>> >
<$list variable=filter_text filter="[<cur_title>split[Draft of ']join[]split[']join[]]">
<$list variable=cur_card filter="[tag<filter_text>!match[$:/ext]sort[]]">

<$link to=<<cur_card>> />
</$list><!--cur_card-->
</$list><!--filter_text-->
</$vars><!--cur_card-->



$:/img

<$vars cur_title=<<currentTiddler>> >
<$list variable=filter_text filter="[<cur_title>split[Draft of ']join[]split[']join[]]">
<$list variable=cur_card filter="[tag<filter_text>!match[$:/img]sort[]]">

<$link to=<<cur_card>> />
</$list><!--cur_card-->
</$list><!--filter_text-->
</$vars><!--cur_card-->



$:/language/DefaultNewTiddlerTitle

New Card



$:/plugins/hoelzro/full-text-search

{
    "tiddlers": {
        "$:/plugins/hoelzro/full-text-search/cache.js": {
            "title": "$:/plugins/hoelzro/full-text-search/cache.js",
            "text": "\"use strict\";\n/*\\\ntitle: $:/plugins/hoelzro/full-text-search/cache.js\ntype: application/javascript\nmodule-type: library\n\n\\*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar localForage = require('$:/plugins/hoelzro/full-text-search/localforage.min.js');\nvar FTSCache;\n(function (FTSCache) {\n    var RELATED_TERMS_TIDDLER = '$:/plugins/hoelzro/full-text-search/RelatedTerms.json';\n    function hasFunctionalCache() {\n        return localForage.driver() != null;\n    }\n    function currentPluginVersion() {\n        var pluginTiddler = $tw.wiki.getTiddler('$:/plugins/hoelzro/full-text-search');\n        return pluginTiddler.fields.version;\n    }\n    function relatedTermsModified() {\n        var relatedTerms = $tw.wiki.getTiddler(RELATED_TERMS_TIDDLER);\n        if (!relatedTerms || !relatedTerms.fields.modified) {\n            return 0;\n        }\n        return relatedTerms.fields.modified.getTime();\n    }\n    function getCacheMetadata() {\n        return __awaiter(this, void 0, void 0, function () {\n            var metaKey, cacheMeta, cacheRelatedTermsModified, relatedTerms, ourRelatedTermsModified;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!hasFunctionalCache()) {\n                            return [2 /*return*/];\n                        }\n                        metaKey = 'tw-fts-index.meta.' + $tw.wiki.getTiddler('$:/SiteTitle').fields.text;\n                        return [4 /*yield*/, localForage.getItem(metaKey)];\n                    case 1:\n                        cacheMeta = _a.sent();\n                        if (cacheMeta === null) {\n                            return [2 /*return*/];\n                        }\n                        if (!('ftsPluginVersion' in cacheMeta) || cacheMeta.ftsPluginVersion != currentPluginVersion()) {\n                            return [2 /*return*/];\n                        }\n                        cacheRelatedTermsModified = ('relatedTermsModified' in cacheMeta) ? cacheMeta.relatedTermsModified : 0;\n                        relatedTerms = $tw.wiki.getTiddler(RELATED_TERMS_TIDDLER);\n                        ourRelatedTermsModified = relatedTermsModified();\n                        if (cacheRelatedTermsModified != ourRelatedTermsModified) {\n                            return [2 /*return*/];\n                        }\n                        return [2 /*return*/, cacheMeta];\n                }\n            });\n        });\n    }\n    // XXX what about migrating between lunr versions? what about invalid data under the key?\n    function getCacheData() {\n        return __awaiter(this, void 0, void 0, function () {\n            var metaData, dataKey, cacheData;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!hasFunctionalCache()) {\n                            return [2 /*return*/];\n                        }\n                        return [4 /*yield*/, getCacheMetadata()];\n                    case 1:\n                        metaData = _a.sent();\n                        if (metaData == null) {\n                            return [2 /*return*/, null];\n                        }\n                        dataKey = 'tw-fts-index.data.' + $tw.wiki.getTiddler('$:/SiteTitle').fields.text;\n                        return [4 /*yield*/, localForage.getItem(dataKey)];\n                    case 2:\n                        cacheData = _a.sent();\n                        if (cacheData === null) {\n                            return [2 /*return*/, null];\n                        }\n                        return [2 /*return*/, JSON.parse(cacheData)];\n                }\n            });\n        });\n    }\n    function getAge() {\n        return __awaiter(this, void 0, void 0, function () {\n            var cacheMeta;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!hasFunctionalCache()) {\n                            return [2 /*return*/, 0];\n                        }\n                        return [4 /*yield*/, getCacheMetadata()];\n                    case 1:\n                        cacheMeta = _a.sent();\n                        if (!cacheMeta) {\n                            return [2 /*return*/, 0];\n                        }\n                        return [2 /*return*/, cacheMeta.age];\n                }\n            });\n        });\n    }\n    FTSCache.getAge = getAge;\n    function load() {\n        if (!hasFunctionalCache()) {\n            return null;\n        }\n        var cacheData = getCacheData();\n        if (!cacheData) {\n            return;\n        }\n        return cacheData;\n    }\n    FTSCache.load = load;\n    function save(age, data) {\n        return __awaiter(this, void 0, void 0, function () {\n            var dataKey, metaKey, dataPromise, metaPromise;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!hasFunctionalCache()) {\n                            return [2 /*return*/];\n                        }\n                        dataKey = 'tw-fts-index.data.' + $tw.wiki.getTiddler('$:/SiteTitle').fields.text;\n                        metaKey = 'tw-fts-index.meta.' + $tw.wiki.getTiddler('$:/SiteTitle').fields.text;\n                        dataPromise = localForage.setItem(dataKey, JSON.stringify(data));\n                        metaPromise = localForage.setItem(metaKey, { age: age, ftsPluginVersion: currentPluginVersion(), relatedTermsModified: relatedTermsModified() });\n                        return [4 /*yield*/, Promise.all([dataPromise, metaPromise])];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    }\n    FTSCache.save = save;\n    function invalidate() {\n        return __awaiter(this, void 0, void 0, function () {\n            var dataKey, metaKey, dataPromise, metaPromise;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!hasFunctionalCache()) {\n                            return [2 /*return*/];\n                        }\n                        dataKey = 'tw-fts-index.data.' + $tw.wiki.getTiddler('$:/SiteTitle').fields.text;\n                        metaKey = 'tw-fts-index.meta.' + $tw.wiki.getTiddler('$:/SiteTitle').fields.text;\n                        dataPromise = localForage.removeItem(dataKey);\n                        metaPromise = localForage.removeItem(metaKey);\n                        return [4 /*yield*/, Promise.all([dataPromise, metaPromise])];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    }\n    FTSCache.invalidate = invalidate;\n})(FTSCache || (FTSCache = {}));\nmodule.exports = FTSCache;\n",
            "type": "application/javascript",
            "module-type": "library"
        },
        "$:/plugins/hoelzro/full-text-search/control-panel": {
            "title": "$:/plugins/hoelzro/full-text-search/control-panel",
            "type": "text/vnd.tiddlywiki",
            "tags": "$:/tags/ControlPanel",
            "caption": "Full Text Configuration",
            "text": "<$set name=\"state\" value=\"$:/temp/FTS-state\">\n\n<$reveal type=\"match\" state=<<state>> text=\"uninitialized\">\n\nIn order to use full text search, you'll need to generate an index.\n\n<$button>\n  Click here to generate the index\n  <$fts-action-generate-index />\n</$button>\n\n</$reveal>\n\n<$reveal type=\"match\" state=<<state>> text=\"initializing\">\nGenerating index...\n\n<$hoelzro-progressbar current={{$:/temp/FTS-state!!progressCurrent}} total={{$:/temp/FTS-state!!progressTotal}} />\n</$reveal>\n\n<$reveal type=\"match\" state=<<state>> text=\"initialized\">\n\nIndex generated.  Happy searching!\n\n<$button>\n  Click here to rebuild the index\n  <$fts-action-generate-index rebuild=\"true\" />\n</$button>\n\n</$reveal>\n\n! Auto Indexing\n\n<$list variable=\"fiveSixteenOrBetter\" filter=\"5.1.16 [title<version>] +[sort[]first[]] +[prefix[5.1.16]]\" emptyMessage=\"Sorry, you need TiddlyWiki 5.1.16 or greater to enable auto-indexing.\">\n\n<$set name=\"autoIndexTiddler\" value=\"$:/plugins/hoelzro/full-text-search/auto-index\">\n\nAutomatic indexing refers to a feature where your wiki is automatically indexed in the background after it's been loaded.\n\n<$list filter=\"[title<autoIndexTiddler>get[title]]\" emptyMessage=\"\"\"<$button><$action-createtiddler $basetitle=<<autoIndexTiddler>> text=\"<$fts-action-generate-index />\" tags=\"$:/tags/StartupAction/Browser\" />Click here to enable automatic indexing</$button>\"\"\">\n<$button>\n  <$action-deletetiddler $tiddler=<<autoIndexTiddler>> />\n  Click here to disable automatic indexing\n</$button>\n</$list>\n\n</$set>\n</$list>\n\n! Wildcard/Fuzzy Searching (experimental)\n\nWildcard searches allow you to use wildcards to do things like use `format*ing` to match both \"formating\" and \"formatting\".\nPlease consult [[the lunr documentation|https://lunrjs.com/guides/searching.html#wildcards]] for more information.\n\nFuzzy searches allow you to compensate for spelling mistakes by specifying an //edit distance// - for example, if you want\nto tolerate being off by one character, you'd searching for `formattign~1`.  For performance, it's recommended to keep\nthe distance below 3.  You can read more about fuzzy searching in [[the lunr documentation|https://lunrjs.com/guides/searching.html#fuzzy-matches]].\n\nNote that you don't need wildcards to have the search system treat \"format\", \"formatting\", and \"formatted\" as the same -\nthe default setup is smart enough to handle this!\n\nEnabling wildcard and fuzzy searches takes more computing power, memory, and storage space, but does prove useful for various users.  If\nyou'd like to try wildcard searches, you can enable them here:\n\n<$checkbox tiddler=\"$:/plugins/hoelzro/full-text-search/EnableFuzzySearching\" field=\"text\" checked=\"yes\" unchecked=\"\" default=\"\">\nEnable wildcard/fuzzy searches? (this will require an index rebuild)\n</$checkbox>\n\n</$set>\n"
        },
        "$:/plugins/hoelzro/full-text-search/lunr.min.js": {
            "text": "/**\n * lunr - http://lunrjs.com - A bit like Solr, but much smaller and not as bright - 2.3.5\n * Copyright (C) 2018 Oliver Nightingale\n * @license MIT\n */\n!function(){var t,l,c,e,r,h,d,f,p,y,m,g,x,v,w,Q,k,S,E,L,b,P,T,O,I,i,n,s,z=function(e){var t=new z.Builder;return t.pipeline.add(z.trimmer,z.stopWordFilter,z.stemmer),t.searchPipeline.add(z.stemmer),e.call(t,t),t.build()};z.version=\"2.3.5\",z.utils={},z.utils.warn=(t=this,function(e){t.console&&console.warn&&console.warn(e)}),z.utils.asString=function(e){return null==e?\"\":e.toString()},z.utils.clone=function(e){if(null==e)return e;for(var t=Object.create(null),r=Object.keys(e),i=0;i<r.length;i++){var n=r[i],s=e[n];if(Array.isArray(s))t[n]=s.slice();else{if(\"string\"!=typeof s&&\"number\"!=typeof s&&\"boolean\"!=typeof s)throw new TypeError(\"clone is not deep and does not support nested objects\");t[n]=s}}return t},z.FieldRef=function(e,t,r){this.docRef=e,this.fieldName=t,this._stringValue=r},z.FieldRef.joiner=\"/\",z.FieldRef.fromString=function(e){var t=e.indexOf(z.FieldRef.joiner);if(-1===t)throw\"malformed field ref string\";var r=e.slice(0,t),i=e.slice(t+1);return new z.FieldRef(i,r,e)},z.FieldRef.prototype.toString=function(){return null==this._stringValue&&(this._stringValue=this.fieldName+z.FieldRef.joiner+this.docRef),this._stringValue},z.Set=function(e){if(this.elements=Object.create(null),e){this.length=e.length;for(var t=0;t<this.length;t++)this.elements[e[t]]=!0}else this.length=0},z.Set.complete={intersect:function(e){return e},union:function(e){return e},contains:function(){return!0}},z.Set.empty={intersect:function(){return this},union:function(e){return e},contains:function(){return!1}},z.Set.prototype.contains=function(e){return!!this.elements[e]},z.Set.prototype.intersect=function(e){var t,r,i,n=[];if(e===z.Set.complete)return this;if(e===z.Set.empty)return e;r=this.length<e.length?(t=this,e):(t=e,this),i=Object.keys(t.elements);for(var s=0;s<i.length;s++){var o=i[s];o in r.elements&&n.push(o)}return new z.Set(n)},z.Set.prototype.union=function(e){return e===z.Set.complete?z.Set.complete:e===z.Set.empty?this:new z.Set(Object.keys(this.elements).concat(Object.keys(e.elements)))},z.idf=function(e,t){var r=0;for(var i in e)\"_index\"!=i&&(r+=Object.keys(e[i]).length);var n=(t-r+.5)/(r+.5);return Math.log(1+Math.abs(n))},z.Token=function(e,t){this.str=e||\"\",this.metadata=t||{}},z.Token.prototype.toString=function(){return this.str},z.Token.prototype.update=function(e){return this.str=e(this.str,this.metadata),this},z.Token.prototype.clone=function(e){return e=e||function(e){return e},new z.Token(e(this.str,this.metadata),this.metadata)},z.tokenizer=function(e,t){if(null==e||null==e)return[];if(Array.isArray(e))return e.map(function(e){return new z.Token(z.utils.asString(e).toLowerCase(),z.utils.clone(t))});for(var r=e.toString().trim().toLowerCase(),i=r.length,n=[],s=0,o=0;s<=i;s++){var a=s-o;if(r.charAt(s).match(z.tokenizer.separator)||s==i){if(0<a){var u=z.utils.clone(t)||{};u.position=[o,a],u.index=n.length,n.push(new z.Token(r.slice(o,s),u))}o=s+1}}return n},z.tokenizer.separator=/[\\s\\-]+/,z.Pipeline=function(){this._stack=[]},z.Pipeline.registeredFunctions=Object.create(null),z.Pipeline.registerFunction=function(e,t){t in this.registeredFunctions&&z.utils.warn(\"Overwriting existing registered function: \"+t),e.label=t,z.Pipeline.registeredFunctions[e.label]=e},z.Pipeline.warnIfFunctionNotRegistered=function(e){e.label&&e.label in this.registeredFunctions||z.utils.warn(\"Function is not registered with pipeline. This may cause problems when serialising the index.\\n\",e)},z.Pipeline.load=function(e){var r=new z.Pipeline;return e.forEach(function(e){var t=z.Pipeline.registeredFunctions[e];if(!t)throw new Error(\"Cannot load unregistered function: \"+e);r.add(t)}),r},z.Pipeline.prototype.add=function(){Array.prototype.slice.call(arguments).forEach(function(e){z.Pipeline.warnIfFunctionNotRegistered(e),this._stack.push(e)},this)},z.Pipeline.prototype.after=function(e,t){z.Pipeline.warnIfFunctionNotRegistered(t);var r=this._stack.indexOf(e);if(-1==r)throw new Error(\"Cannot find existingFn\");r+=1,this._stack.splice(r,0,t)},z.Pipeline.prototype.before=function(e,t){z.Pipeline.warnIfFunctionNotRegistered(t);var r=this._stack.indexOf(e);if(-1==r)throw new Error(\"Cannot find existingFn\");this._stack.splice(r,0,t)},z.Pipeline.prototype.remove=function(e){var t=this._stack.indexOf(e);-1!=t&&this._stack.splice(t,1)},z.Pipeline.prototype.run=function(e){for(var t=this._stack.length,r=0;r<t;r++){for(var i=this._stack[r],n=[],s=0;s<e.length;s++){var o=i(e[s],s,e);if(void 0!==o&&\"\"!==o)if(Array.isArray(o))for(var a=0;a<o.length;a++)n.push(o[a]);else n.push(o)}e=n}return e},z.Pipeline.prototype.runString=function(e,t){var r=new z.Token(e,t);return this.run([r]).map(function(e){return e.toString()})},z.Pipeline.prototype.reset=function(){this._stack=[]},z.Pipeline.prototype.toJSON=function(){return this._stack.map(function(e){return z.Pipeline.warnIfFunctionNotRegistered(e),e.label})},z.Vector=function(e){this._magnitude=0,this.elements=e||[]},z.Vector.prototype.positionForIndex=function(e){if(0==this.elements.length)return 0;for(var t=0,r=this.elements.length/2,i=r-t,n=Math.floor(i/2),s=this.elements[2*n];1<i&&(s<e&&(t=n),e<s&&(r=n),s!=e);)i=r-t,n=t+Math.floor(i/2),s=this.elements[2*n];return s==e?2*n:e<s?2*n:s<e?2*(n+1):void 0},z.Vector.prototype.insert=function(e,t){this.upsert(e,t,function(){throw\"duplicate index\"})},z.Vector.prototype.upsert=function(e,t,r){this._magnitude=0;var i=this.positionForIndex(e);this.elements[i]==e?this.elements[i+1]=r(this.elements[i+1],t):this.elements.splice(i,0,e,t)},z.Vector.prototype.magnitude=function(){if(this._magnitude)return this._magnitude;for(var e=0,t=this.elements.length,r=1;r<t;r+=2){var i=this.elements[r];e+=i*i}return this._magnitude=Math.sqrt(e)},z.Vector.prototype.dot=function(e){for(var t=0,r=this.elements,i=e.elements,n=r.length,s=i.length,o=0,a=0,u=0,l=0;u<n&&l<s;)(o=r[u])<(a=i[l])?u+=2:a<o?l+=2:o==a&&(t+=r[u+1]*i[l+1],u+=2,l+=2);return t},z.Vector.prototype.similarity=function(e){return this.dot(e)/this.magnitude()||0},z.Vector.prototype.toArray=function(){for(var e=new Array(this.elements.length/2),t=1,r=0;t<this.elements.length;t+=2,r++)e[r]=this.elements[t];return e},z.Vector.prototype.toJSON=function(){return this.elements},z.stemmer=(l={ational:\"ate\",tional:\"tion\",enci:\"ence\",anci:\"ance\",izer:\"ize\",bli:\"ble\",alli:\"al\",entli:\"ent\",eli:\"e\",ousli:\"ous\",ization:\"ize\",ation:\"ate\",ator:\"ate\",alism:\"al\",iveness:\"ive\",fulness:\"ful\",ousness:\"ous\",aliti:\"al\",iviti:\"ive\",biliti:\"ble\",logi:\"log\"},c={icate:\"ic\",ative:\"\",alize:\"al\",iciti:\"ic\",ical:\"ic\",ful:\"\",ness:\"\"},e=\"[aeiouy]\",r=\"[^aeiou][^aeiouy]*\",h=new RegExp(\"^([^aeiou][^aeiouy]*)?[aeiouy][aeiou]*[^aeiou][^aeiouy]*\"),d=new RegExp(\"^([^aeiou][^aeiouy]*)?[aeiouy][aeiou]*[^aeiou][^aeiouy]*[aeiouy][aeiou]*[^aeiou][^aeiouy]*\"),f=new RegExp(\"^([^aeiou][^aeiouy]*)?[aeiouy][aeiou]*[^aeiou][^aeiouy]*([aeiouy][aeiou]*)?$\"),p=new RegExp(\"^([^aeiou][^aeiouy]*)?[aeiouy]\"),y=/^(.+?)(ss|i)es$/,m=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,x=/^(.+?)(ed|ing)$/,v=/.$/,w=/(at|bl|iz)$/,Q=new RegExp(\"([^aeiouylsz])\\\\1$\"),k=new RegExp(\"^\"+r+e+\"[^aeiouwxy]$\"),S=/^(.+?[^aeiou])y$/,E=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,L=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,b=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,P=/^(.+?)(s|t)(ion)$/,T=/^(.+?)e$/,O=/ll$/,I=new RegExp(\"^\"+r+e+\"[^aeiouwxy]$\"),i=function(e){var t,r,i,n,s,o,a;if(e.length<3)return e;if(\"y\"==(i=e.substr(0,1))&&(e=i.toUpperCase()+e.substr(1)),s=m,(n=y).test(e)?e=e.replace(n,\"$1$2\"):s.test(e)&&(e=e.replace(s,\"$1$2\")),s=x,(n=g).test(e)){var u=n.exec(e);(n=h).test(u[1])&&(n=v,e=e.replace(n,\"\"))}else if(s.test(e)){t=(u=s.exec(e))[1],(s=p).test(t)&&(o=Q,a=k,(s=w).test(e=t)?e+=\"e\":o.test(e)?(n=v,e=e.replace(n,\"\")):a.test(e)&&(e+=\"e\"))}(n=S).test(e)&&(e=(t=(u=n.exec(e))[1])+\"i\");(n=E).test(e)&&(t=(u=n.exec(e))[1],r=u[2],(n=h).test(t)&&(e=t+l[r]));(n=L).test(e)&&(t=(u=n.exec(e))[1],r=u[2],(n=h).test(t)&&(e=t+c[r]));if(s=P,(n=b).test(e))t=(u=n.exec(e))[1],(n=d).test(t)&&(e=t);else if(s.test(e)){t=(u=s.exec(e))[1]+u[2],(s=d).test(t)&&(e=t)}(n=T).test(e)&&(t=(u=n.exec(e))[1],s=f,o=I,((n=d).test(t)||s.test(t)&&!o.test(t))&&(e=t));return s=d,(n=O).test(e)&&s.test(e)&&(n=v,e=e.replace(n,\"\")),\"y\"==i&&(e=i.toLowerCase()+e.substr(1)),e},function(e){return e.update(i)}),z.Pipeline.registerFunction(z.stemmer,\"stemmer\"),z.generateStopWordFilter=function(e){var t=e.reduce(function(e,t){return e[t]=t,e},{});return function(e){if(e&&t[e.toString()]!==e.toString())return e}},z.stopWordFilter=z.generateStopWordFilter([\"a\",\"able\",\"about\",\"across\",\"after\",\"all\",\"almost\",\"also\",\"am\",\"among\",\"an\",\"and\",\"any\",\"are\",\"as\",\"at\",\"be\",\"because\",\"been\",\"but\",\"by\",\"can\",\"cannot\",\"could\",\"dear\",\"did\",\"do\",\"does\",\"either\",\"else\",\"ever\",\"every\",\"for\",\"from\",\"get\",\"got\",\"had\",\"has\",\"have\",\"he\",\"her\",\"hers\",\"him\",\"his\",\"how\",\"however\",\"i\",\"if\",\"in\",\"into\",\"is\",\"it\",\"its\",\"just\",\"least\",\"let\",\"like\",\"likely\",\"may\",\"me\",\"might\",\"most\",\"must\",\"my\",\"neither\",\"no\",\"nor\",\"not\",\"of\",\"off\",\"often\",\"on\",\"only\",\"or\",\"other\",\"our\",\"own\",\"rather\",\"said\",\"say\",\"says\",\"she\",\"should\",\"since\",\"so\",\"some\",\"than\",\"that\",\"the\",\"their\",\"them\",\"then\",\"there\",\"these\",\"they\",\"this\",\"tis\",\"to\",\"too\",\"twas\",\"us\",\"wants\",\"was\",\"we\",\"were\",\"what\",\"when\",\"where\",\"which\",\"while\",\"who\",\"whom\",\"why\",\"will\",\"with\",\"would\",\"yet\",\"you\",\"your\"]),z.Pipeline.registerFunction(z.stopWordFilter,\"stopWordFilter\"),z.trimmer=function(e){return e.update(function(e){return e.replace(/^\\W+/,\"\").replace(/\\W+$/,\"\")})},z.Pipeline.registerFunction(z.trimmer,\"trimmer\"),z.TokenSet=function(){this.final=!1,this.edges={},this.id=z.TokenSet._nextId,z.TokenSet._nextId+=1},z.TokenSet._nextId=1,z.TokenSet.fromArray=function(e){for(var t=new z.TokenSet.Builder,r=0,i=e.length;r<i;r++)t.insert(e[r]);return t.finish(),t.root},z.TokenSet.fromClause=function(e){return\"editDistance\"in e?z.TokenSet.fromFuzzyString(e.term,e.editDistance):z.TokenSet.fromString(e.term)},z.TokenSet.fromFuzzyString=function(e,t){for(var r=new z.TokenSet,i=[{node:r,editsRemaining:t,str:e}];i.length;){var n,s,o,a=i.pop();if(0<a.str.length)(s=a.str.charAt(0))in a.node.edges?n=a.node.edges[s]:(n=new z.TokenSet,a.node.edges[s]=n),1==a.str.length&&(n.final=!0),i.push({node:n,editsRemaining:a.editsRemaining,str:a.str.slice(1)});if(0<a.editsRemaining&&1<a.str.length)(s=a.str.charAt(1))in a.node.edges?o=a.node.edges[s]:(o=new z.TokenSet,a.node.edges[s]=o),a.str.length<=2?o.final=!0:i.push({node:o,editsRemaining:a.editsRemaining-1,str:a.str.slice(2)});if(0<a.editsRemaining&&1==a.str.length&&(a.node.final=!0),0<a.editsRemaining&&1<=a.str.length){if(\"*\"in a.node.edges)var u=a.node.edges[\"*\"];else{u=new z.TokenSet;a.node.edges[\"*\"]=u}1==a.str.length?u.final=!0:i.push({node:u,editsRemaining:a.editsRemaining-1,str:a.str.slice(1)})}if(0<a.editsRemaining){if(\"*\"in a.node.edges)var l=a.node.edges[\"*\"];else{l=new z.TokenSet;a.node.edges[\"*\"]=l}0==a.str.length?l.final=!0:i.push({node:l,editsRemaining:a.editsRemaining-1,str:a.str})}if(0<a.editsRemaining&&1<a.str.length){var c,h=a.str.charAt(0),d=a.str.charAt(1);d in a.node.edges?c=a.node.edges[d]:(c=new z.TokenSet,a.node.edges[d]=c),1==a.str.length?c.final=!0:i.push({node:c,editsRemaining:a.editsRemaining-1,str:h+a.str.slice(2)})}}return r},z.TokenSet.fromString=function(e){for(var t=new z.TokenSet,r=t,i=0,n=e.length;i<n;i++){var s=e[i],o=i==n-1;if(\"*\"==s)(t.edges[s]=t).final=o;else{var a=new z.TokenSet;a.final=o,t.edges[s]=a,t=a}}return r},z.TokenSet.prototype.toArray=function(){for(var e=[],t=[{prefix:\"\",node:this}];t.length;){var r=t.pop(),i=Object.keys(r.node.edges),n=i.length;r.node.final&&(r.prefix.charAt(0),e.push(r.prefix));for(var s=0;s<n;s++){var o=i[s];t.push({prefix:r.prefix.concat(o),node:r.node.edges[o]})}}return e},z.TokenSet.prototype.toString=function(){if(this._str)return this._str;for(var e=this.final?\"1\":\"0\",t=Object.keys(this.edges).sort(),r=t.length,i=0;i<r;i++){var n=t[i];e=e+n+this.edges[n].id}return e},z.TokenSet.prototype.intersect=function(e){for(var t=new z.TokenSet,r=void 0,i=[{qNode:e,output:t,node:this}];i.length;){r=i.pop();for(var n=Object.keys(r.qNode.edges),s=n.length,o=Object.keys(r.node.edges),a=o.length,u=0;u<s;u++)for(var l=n[u],c=0;c<a;c++){var h=o[c];if(h==l||\"*\"==l){var d=r.node.edges[h],f=r.qNode.edges[l],p=d.final&&f.final,y=void 0;h in r.output.edges?(y=r.output.edges[h]).final=y.final||p:((y=new z.TokenSet).final=p,r.output.edges[h]=y),i.push({qNode:f,output:y,node:d})}}}return t},z.TokenSet.Builder=function(){this.previousWord=\"\",this.root=new z.TokenSet,this.uncheckedNodes=[],this.minimizedNodes={}},z.TokenSet.Builder.prototype.insert=function(e){var t,r=0;if(e<this.previousWord)throw new Error(\"Out of order word insertion\");for(var i=0;i<e.length&&i<this.previousWord.length&&e[i]==this.previousWord[i];i++)r++;this.minimize(r),t=0==this.uncheckedNodes.length?this.root:this.uncheckedNodes[this.uncheckedNodes.length-1].child;for(i=r;i<e.length;i++){var n=new z.TokenSet,s=e[i];t.edges[s]=n,this.uncheckedNodes.push({parent:t,char:s,child:n}),t=n}t.final=!0,this.previousWord=e},z.TokenSet.Builder.prototype.finish=function(){this.minimize(0)},z.TokenSet.Builder.prototype.minimize=function(e){for(var t=this.uncheckedNodes.length-1;e<=t;t--){var r=this.uncheckedNodes[t],i=r.child.toString();i in this.minimizedNodes?r.parent.edges[r.char]=this.minimizedNodes[i]:(r.child._str=i,this.minimizedNodes[i]=r.child),this.uncheckedNodes.pop()}},z.Index=function(e){this.invertedIndex=e.invertedIndex,this.fieldVectors=e.fieldVectors,this.tokenSet=e.tokenSet,this.fields=e.fields,this.pipeline=e.pipeline},z.Index.prototype.search=function(t){return this.query(function(e){new z.QueryParser(t,e).parse()})},z.Index.prototype.query=function(e){for(var t=new z.Query(this.fields),r=Object.create(null),i=Object.create(null),n=Object.create(null),s=Object.create(null),o=Object.create(null),a=0;a<this.fields.length;a++)i[this.fields[a]]=new z.Vector;e.call(t,t);for(a=0;a<t.clauses.length;a++){var u=t.clauses[a],l=null,c=z.Set.complete;l=u.usePipeline?this.pipeline.runString(u.term,{fields:u.fields}):[u.term];for(var h=0;h<l.length;h++){var d=l[h];u.term=d;var f=z.TokenSet.fromClause(u),p=this.tokenSet.intersect(f).toArray();if(0===p.length&&u.presence===z.Query.presence.REQUIRED){for(var y=0;y<u.fields.length;y++){s[R=u.fields[y]]=z.Set.empty}break}for(var m=0;m<p.length;m++){var g=p[m],x=this.invertedIndex[g],v=x._index;for(y=0;y<u.fields.length;y++){var w=x[R=u.fields[y]],Q=Object.keys(w),k=g+\"/\"+R,S=new z.Set(Q);if(u.presence==z.Query.presence.REQUIRED&&(c=c.union(S),void 0===s[R]&&(s[R]=z.Set.complete)),u.presence!=z.Query.presence.PROHIBITED){if(i[R].upsert(v,u.boost,function(e,t){return e+t}),!n[k]){for(var E=0;E<Q.length;E++){var L,b=Q[E],P=new z.FieldRef(b,R),T=w[b];void 0===(L=r[P])?r[P]=new z.MatchData(g,R,T):L.add(g,R,T)}n[k]=!0}}else void 0===o[R]&&(o[R]=z.Set.empty),o[R]=o[R].union(S)}}}if(u.presence===z.Query.presence.REQUIRED)for(y=0;y<u.fields.length;y++){s[R=u.fields[y]]=s[R].intersect(c)}}var O=z.Set.complete,I=z.Set.empty;for(a=0;a<this.fields.length;a++){var R;s[R=this.fields[a]]&&(O=O.intersect(s[R])),o[R]&&(I=I.union(o[R]))}var F=Object.keys(r),C=[],N=Object.create(null);if(t.isNegated()){F=Object.keys(this.fieldVectors);for(a=0;a<F.length;a++){P=F[a];var j=z.FieldRef.fromString(P);r[P]=new z.MatchData}}for(a=0;a<F.length;a++){var _=(j=z.FieldRef.fromString(F[a])).docRef;if(O.contains(_)&&!I.contains(_)){var D,A=this.fieldVectors[j],B=i[j.fieldName].similarity(A);if(void 0!==(D=N[_]))D.score+=B,D.matchData.combine(r[j]);else{var V={ref:_,score:B,matchData:r[j]};N[_]=V,C.push(V)}}}return C.sort(function(e,t){return t.score-e.score})},z.Index.prototype.toJSON=function(){var e=Object.keys(this.invertedIndex).sort().map(function(e){return[e,this.invertedIndex[e]]},this),t=Object.keys(this.fieldVectors).map(function(e){return[e,this.fieldVectors[e].toJSON()]},this);return{version:z.version,fields:this.fields,fieldVectors:t,invertedIndex:e,pipeline:this.pipeline.toJSON()}},z.Index.load=function(e){var t={},r={},i=e.fieldVectors,n=Object.create(null),s=e.invertedIndex,o=new z.TokenSet.Builder,a=z.Pipeline.load(e.pipeline);e.version!=z.version&&z.utils.warn(\"Version mismatch when loading serialised index. Current version of lunr '\"+z.version+\"' does not match serialized index '\"+e.version+\"'\");for(var u=0;u<i.length;u++){var l=(h=i[u])[0],c=h[1];r[l]=new z.Vector(c)}for(u=0;u<s.length;u++){var h,d=(h=s[u])[0],f=h[1];o.insert(d),n[d]=f}return o.finish(),t.fields=e.fields,t.fieldVectors=r,t.invertedIndex=n,t.tokenSet=o.root,t.pipeline=a,new z.Index(t)},z.Builder=function(){this._ref=\"id\",this._fields=Object.create(null),this._documents=Object.create(null),this.invertedIndex=Object.create(null),this.fieldTermFrequencies={},this.fieldLengths={},this.tokenizer=z.tokenizer,this.pipeline=new z.Pipeline,this.searchPipeline=new z.Pipeline,this.documentCount=0,this._b=.75,this._k1=1.2,this.termIndex=0,this.metadataWhitelist=[]},z.Builder.prototype.ref=function(e){this._ref=e},z.Builder.prototype.field=function(e,t){if(/\\//.test(e))throw new RangeError(\"Field '\"+e+\"' contains illegal character '/'\");this._fields[e]=t||{}},z.Builder.prototype.b=function(e){this._b=e<0?0:1<e?1:e},z.Builder.prototype.k1=function(e){this._k1=e},z.Builder.prototype.add=function(e,t){var r=e[this._ref],i=Object.keys(this._fields);this._documents[r]=t||{},this.documentCount+=1;for(var n=0;n<i.length;n++){var s=i[n],o=this._fields[s].extractor,a=o?o(e):e[s],u=this.tokenizer(a,{fields:[s]}),l=this.pipeline.run(u),c=new z.FieldRef(r,s),h=Object.create(null);this.fieldTermFrequencies[c]=h,this.fieldLengths[c]=0,this.fieldLengths[c]+=l.length;for(var d=0;d<l.length;d++){var f=l[d];if(null==h[f]&&(h[f]=0),h[f]+=1,null==this.invertedIndex[f]){var p=Object.create(null);p._index=this.termIndex,this.termIndex+=1;for(var y=0;y<i.length;y++)p[i[y]]=Object.create(null);this.invertedIndex[f]=p}null==this.invertedIndex[f][s][r]&&(this.invertedIndex[f][s][r]=Object.create(null));for(var m=0;m<this.metadataWhitelist.length;m++){var g=this.metadataWhitelist[m],x=f.metadata[g];null==this.invertedIndex[f][s][r][g]&&(this.invertedIndex[f][s][r][g]=[]),this.invertedIndex[f][s][r][g].push(x)}}}},z.Builder.prototype.calculateAverageFieldLengths=function(){for(var e=Object.keys(this.fieldLengths),t=e.length,r={},i={},n=0;n<t;n++){var s=z.FieldRef.fromString(e[n]),o=s.fieldName;i[o]||(i[o]=0),i[o]+=1,r[o]||(r[o]=0),r[o]+=this.fieldLengths[s]}var a=Object.keys(this._fields);for(n=0;n<a.length;n++){var u=a[n];r[u]=r[u]/i[u]}this.averageFieldLength=r},z.Builder.prototype.createFieldVectors=function(){for(var e={},t=Object.keys(this.fieldTermFrequencies),r=t.length,i=Object.create(null),n=0;n<r;n++){for(var s=z.FieldRef.fromString(t[n]),o=s.fieldName,a=this.fieldLengths[s],u=new z.Vector,l=this.fieldTermFrequencies[s],c=Object.keys(l),h=c.length,d=this._fields[o].boost||1,f=this._documents[s.docRef].boost||1,p=0;p<h;p++){var y,m,g,x=c[p],v=l[x],w=this.invertedIndex[x]._index;void 0===i[x]?(y=z.idf(this.invertedIndex[x],this.documentCount),i[x]=y):y=i[x],m=y*((this._k1+1)*v)/(this._k1*(1-this._b+this._b*(a/this.averageFieldLength[o]))+v),m*=d,m*=f,g=Math.round(1e3*m)/1e3,u.insert(w,g)}e[s]=u}this.fieldVectors=e},z.Builder.prototype.createTokenSet=function(){this.tokenSet=z.TokenSet.fromArray(Object.keys(this.invertedIndex).sort())},z.Builder.prototype.build=function(){return this.calculateAverageFieldLengths(),this.createFieldVectors(),this.createTokenSet(),new z.Index({invertedIndex:this.invertedIndex,fieldVectors:this.fieldVectors,tokenSet:this.tokenSet,fields:Object.keys(this._fields),pipeline:this.searchPipeline})},z.Builder.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},z.MatchData=function(e,t,r){for(var i=Object.create(null),n=Object.keys(r||{}),s=0;s<n.length;s++){var o=n[s];i[o]=r[o].slice()}this.metadata=Object.create(null),void 0!==e&&(this.metadata[e]=Object.create(null),this.metadata[e][t]=i)},z.MatchData.prototype.combine=function(e){for(var t=Object.keys(e.metadata),r=0;r<t.length;r++){var i=t[r],n=Object.keys(e.metadata[i]);null==this.metadata[i]&&(this.metadata[i]=Object.create(null));for(var s=0;s<n.length;s++){var o=n[s],a=Object.keys(e.metadata[i][o]);null==this.metadata[i][o]&&(this.metadata[i][o]=Object.create(null));for(var u=0;u<a.length;u++){var l=a[u];null==this.metadata[i][o][l]?this.metadata[i][o][l]=e.metadata[i][o][l]:this.metadata[i][o][l]=this.metadata[i][o][l].concat(e.metadata[i][o][l])}}}},z.MatchData.prototype.add=function(e,t,r){if(!(e in this.metadata))return this.metadata[e]=Object.create(null),void(this.metadata[e][t]=r);if(t in this.metadata[e])for(var i=Object.keys(r),n=0;n<i.length;n++){var s=i[n];s in this.metadata[e][t]?this.metadata[e][t][s]=this.metadata[e][t][s].concat(r[s]):this.metadata[e][t][s]=r[s]}else this.metadata[e][t]=r},z.Query=function(e){this.clauses=[],this.allFields=e},z.Query.wildcard=new String(\"*\"),z.Query.wildcard.NONE=0,z.Query.wildcard.LEADING=1,z.Query.wildcard.TRAILING=2,z.Query.presence={OPTIONAL:1,REQUIRED:2,PROHIBITED:3},z.Query.prototype.clause=function(e){return\"fields\"in e||(e.fields=this.allFields),\"boost\"in e||(e.boost=1),\"usePipeline\"in e||(e.usePipeline=!0),\"wildcard\"in e||(e.wildcard=z.Query.wildcard.NONE),e.wildcard&z.Query.wildcard.LEADING&&e.term.charAt(0)!=z.Query.wildcard&&(e.term=\"*\"+e.term),e.wildcard&z.Query.wildcard.TRAILING&&e.term.slice(-1)!=z.Query.wildcard&&(e.term=e.term+\"*\"),\"presence\"in e||(e.presence=z.Query.presence.OPTIONAL),this.clauses.push(e),this},z.Query.prototype.isNegated=function(){for(var e=0;e<this.clauses.length;e++)if(this.clauses[e].presence!=z.Query.presence.PROHIBITED)return!1;return!0},z.Query.prototype.term=function(e,t){if(Array.isArray(e))return e.forEach(function(e){this.term(e,z.utils.clone(t))},this),this;var r=t||{};return r.term=e.toString(),this.clause(r),this},z.QueryParseError=function(e,t,r){this.name=\"QueryParseError\",this.message=e,this.start=t,this.end=r},z.QueryParseError.prototype=new Error,z.QueryLexer=function(e){this.lexemes=[],this.str=e,this.length=e.length,this.pos=0,this.start=0,this.escapeCharPositions=[]},z.QueryLexer.prototype.run=function(){for(var e=z.QueryLexer.lexText;e;)e=e(this)},z.QueryLexer.prototype.sliceString=function(){for(var e=[],t=this.start,r=this.pos,i=0;i<this.escapeCharPositions.length;i++)r=this.escapeCharPositions[i],e.push(this.str.slice(t,r)),t=r+1;return e.push(this.str.slice(t,this.pos)),this.escapeCharPositions.length=0,e.join(\"\")},z.QueryLexer.prototype.emit=function(e){this.lexemes.push({type:e,str:this.sliceString(),start:this.start,end:this.pos}),this.start=this.pos},z.QueryLexer.prototype.escapeCharacter=function(){this.escapeCharPositions.push(this.pos-1),this.pos+=1},z.QueryLexer.prototype.next=function(){if(this.pos>=this.length)return z.QueryLexer.EOS;var e=this.str.charAt(this.pos);return this.pos+=1,e},z.QueryLexer.prototype.width=function(){return this.pos-this.start},z.QueryLexer.prototype.ignore=function(){this.start==this.pos&&(this.pos+=1),this.start=this.pos},z.QueryLexer.prototype.backup=function(){this.pos-=1},z.QueryLexer.prototype.acceptDigitRun=function(){for(var e,t;47<(t=(e=this.next()).charCodeAt(0))&&t<58;);e!=z.QueryLexer.EOS&&this.backup()},z.QueryLexer.prototype.more=function(){return this.pos<this.length},z.QueryLexer.EOS=\"EOS\",z.QueryLexer.FIELD=\"FIELD\",z.QueryLexer.TERM=\"TERM\",z.QueryLexer.EDIT_DISTANCE=\"EDIT_DISTANCE\",z.QueryLexer.BOOST=\"BOOST\",z.QueryLexer.PRESENCE=\"PRESENCE\",z.QueryLexer.lexField=function(e){return e.backup(),e.emit(z.QueryLexer.FIELD),e.ignore(),z.QueryLexer.lexText},z.QueryLexer.lexTerm=function(e){if(1<e.width()&&(e.backup(),e.emit(z.QueryLexer.TERM)),e.ignore(),e.more())return z.QueryLexer.lexText},z.QueryLexer.lexEditDistance=function(e){return e.ignore(),e.acceptDigitRun(),e.emit(z.QueryLexer.EDIT_DISTANCE),z.QueryLexer.lexText},z.QueryLexer.lexBoost=function(e){return e.ignore(),e.acceptDigitRun(),e.emit(z.QueryLexer.BOOST),z.QueryLexer.lexText},z.QueryLexer.lexEOS=function(e){0<e.width()&&e.emit(z.QueryLexer.TERM)},z.QueryLexer.termSeparator=z.tokenizer.separator,z.QueryLexer.lexText=function(e){for(;;){var t=e.next();if(t==z.QueryLexer.EOS)return z.QueryLexer.lexEOS;if(92!=t.charCodeAt(0)){if(\":\"==t)return z.QueryLexer.lexField;if(\"~\"==t)return e.backup(),0<e.width()&&e.emit(z.QueryLexer.TERM),z.QueryLexer.lexEditDistance;if(\"^\"==t)return e.backup(),0<e.width()&&e.emit(z.QueryLexer.TERM),z.QueryLexer.lexBoost;if(\"+\"==t&&1===e.width())return e.emit(z.QueryLexer.PRESENCE),z.QueryLexer.lexText;if(\"-\"==t&&1===e.width())return e.emit(z.QueryLexer.PRESENCE),z.QueryLexer.lexText;if(t.match(z.QueryLexer.termSeparator))return z.QueryLexer.lexTerm}else e.escapeCharacter()}},z.QueryParser=function(e,t){this.lexer=new z.QueryLexer(e),this.query=t,this.currentClause={},this.lexemeIdx=0},z.QueryParser.prototype.parse=function(){this.lexer.run(),this.lexemes=this.lexer.lexemes;for(var e=z.QueryParser.parseClause;e;)e=e(this);return this.query},z.QueryParser.prototype.peekLexeme=function(){return this.lexemes[this.lexemeIdx]},z.QueryParser.prototype.consumeLexeme=function(){var e=this.peekLexeme();return this.lexemeIdx+=1,e},z.QueryParser.prototype.nextClause=function(){var e=this.currentClause;this.query.clause(e),this.currentClause={}},z.QueryParser.parseClause=function(e){var t=e.peekLexeme();if(null!=t)switch(t.type){case z.QueryLexer.PRESENCE:return z.QueryParser.parsePresence;case z.QueryLexer.FIELD:return z.QueryParser.parseField;case z.QueryLexer.TERM:return z.QueryParser.parseTerm;default:var r=\"expected either a field or a term, found \"+t.type;throw 1<=t.str.length&&(r+=\" with value '\"+t.str+\"'\"),new z.QueryParseError(r,t.start,t.end)}},z.QueryParser.parsePresence=function(e){var t=e.consumeLexeme();if(null!=t){switch(t.str){case\"-\":e.currentClause.presence=z.Query.presence.PROHIBITED;break;case\"+\":e.currentClause.presence=z.Query.presence.REQUIRED;break;default:var r=\"unrecognised presence operator'\"+t.str+\"'\";throw new z.QueryParseError(r,t.start,t.end)}var i=e.peekLexeme();if(null==i){r=\"expecting term or field, found nothing\";throw new z.QueryParseError(r,t.start,t.end)}switch(i.type){case z.QueryLexer.FIELD:return z.QueryParser.parseField;case z.QueryLexer.TERM:return z.QueryParser.parseTerm;default:r=\"expecting term or field, found '\"+i.type+\"'\";throw new z.QueryParseError(r,i.start,i.end)}}},z.QueryParser.parseField=function(e){var t=e.consumeLexeme();if(null!=t){if(-1==e.query.allFields.indexOf(t.str)){var r=e.query.allFields.map(function(e){return\"'\"+e+\"'\"}).join(\", \"),i=\"unrecognised field '\"+t.str+\"', possible fields: \"+r;throw new z.QueryParseError(i,t.start,t.end)}e.currentClause.fields=[t.str];var n=e.peekLexeme();if(null==n){i=\"expecting term, found nothing\";throw new z.QueryParseError(i,t.start,t.end)}switch(n.type){case z.QueryLexer.TERM:return z.QueryParser.parseTerm;default:i=\"expecting term, found '\"+n.type+\"'\";throw new z.QueryParseError(i,n.start,n.end)}}},z.QueryParser.parseTerm=function(e){var t=e.consumeLexeme();if(null!=t){e.currentClause.term=t.str.toLowerCase(),-1!=t.str.indexOf(\"*\")&&(e.currentClause.usePipeline=!1);var r=e.peekLexeme();if(null!=r)switch(r.type){case z.QueryLexer.TERM:return e.nextClause(),z.QueryParser.parseTerm;case z.QueryLexer.FIELD:return e.nextClause(),z.QueryParser.parseField;case z.QueryLexer.EDIT_DISTANCE:return z.QueryParser.parseEditDistance;case z.QueryLexer.BOOST:return z.QueryParser.parseBoost;case z.QueryLexer.PRESENCE:return e.nextClause(),z.QueryParser.parsePresence;default:var i=\"Unexpected lexeme type '\"+r.type+\"'\";throw new z.QueryParseError(i,r.start,r.end)}else e.nextClause()}},z.QueryParser.parseEditDistance=function(e){var t=e.consumeLexeme();if(null!=t){var r=parseInt(t.str,10);if(isNaN(r)){var i=\"edit distance must be numeric\";throw new z.QueryParseError(i,t.start,t.end)}e.currentClause.editDistance=r;var n=e.peekLexeme();if(null!=n)switch(n.type){case z.QueryLexer.TERM:return e.nextClause(),z.QueryParser.parseTerm;case z.QueryLexer.FIELD:return e.nextClause(),z.QueryParser.parseField;case z.QueryLexer.EDIT_DISTANCE:return z.QueryParser.parseEditDistance;case z.QueryLexer.BOOST:return z.QueryParser.parseBoost;case z.QueryLexer.PRESENCE:return e.nextClause(),z.QueryParser.parsePresence;default:i=\"Unexpected lexeme type '\"+n.type+\"'\";throw new z.QueryParseError(i,n.start,n.end)}else e.nextClause()}},z.QueryParser.parseBoost=function(e){var t=e.consumeLexeme();if(null!=t){var r=parseInt(t.str,10);if(isNaN(r)){var i=\"boost must be numeric\";throw new z.QueryParseError(i,t.start,t.end)}e.currentClause.boost=r;var n=e.peekLexeme();if(null!=n)switch(n.type){case z.QueryLexer.TERM:return e.nextClause(),z.QueryParser.parseTerm;case z.QueryLexer.FIELD:return e.nextClause(),z.QueryParser.parseField;case z.QueryLexer.EDIT_DISTANCE:return z.QueryParser.parseEditDistance;case z.QueryLexer.BOOST:return z.QueryParser.parseBoost;case z.QueryLexer.PRESENCE:return e.nextClause(),z.QueryParser.parsePresence;default:i=\"Unexpected lexeme type '\"+n.type+\"'\";throw new z.QueryParseError(i,n.start,n.end)}else e.nextClause()}},n=this,s=function(){return z},\"function\"==typeof define&&define.amd?define(s):\"object\"==typeof exports?module.exports=s():n.lunr=s()}();\n",
            "type": "application/javascript",
            "title": "$:/plugins/hoelzro/full-text-search/lunr.min.js",
            "module-type": "library"
        },
        "$:/plugins/hoelzro/full-text-search/lunr-mutable.js": {
            "text": "(function() {\n\nvar lunr = require('$:/plugins/hoelzro/full-text-search/lunr.min.js');\n/*\n * Copyright 2018 Rob Hoelz <rob AT hoelz.ro>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n */\n\nvar MutableBuilder = function () {\n  lunr.Builder.call(this)\n}\n\nMutableBuilder.prototype = new lunr.Builder()\n\nMutableBuilder.prototype.build = function build () {\n  this.calculateAverageFieldLengths()\n  this.createFieldVectors()\n  this.createTokenSet()\n\n  return new MutableIndex({\n    invertedIndex: this.invertedIndex,\n    fieldVectors: this.fieldVectors,\n    tokenSet: this.tokenSet,\n    fields: Object.keys(this._fields),\n    pipeline: this.searchPipeline,\n    builder: this\n  })\n}\n\nMutableBuilder.prototype.remove = function remove (doc) {\n  var docRef = doc[this._ref]\n  var fields = Object.keys(this._fields)\n\n  var isDirty = false\n\n  for (var i = 0; i < fields.length; i++) {\n    var fieldName = fields[i],\n        fieldRef = new lunr.FieldRef (docRef, fieldName)\n\n    if (fieldRef in this.fieldTermFrequencies || fieldRef in this.fieldLengths) {\n      isDirty = true\n    }\n\n    delete this.fieldTermFrequencies[fieldRef]\n    delete this.fieldLengths[fieldRef]\n  }\n\n  if (!isDirty) {\n    return\n  }\n\n  this.documentCount -= 1\n\n  // XXX what if a term disappears from the index?\n  for (var term in this.invertedIndex) {\n    for (var fieldName in this.invertedIndex[term]) { // XXX what about \"_index\"?\n      delete this.invertedIndex[term][fieldName][docRef]\n    }\n  }\n}\n\nMutableBuilder.prototype.toJSON = function toJSON () {\n  var fieldRefs = []\n  var fieldTermFrequencies = []\n  var fieldLengths = []\n\n  for (var fieldRef in this.fieldTermFrequencies) {\n    if (this.fieldTermFrequencies.hasOwnProperty(fieldRef)) {\n      fieldRefs.push(fieldRef)\n      fieldTermFrequencies.push(this.fieldTermFrequencies[fieldRef])\n      fieldLengths.push(this.fieldLengths[fieldRef])\n    }\n  }\n\n  // XXX omit tokenizer for now\n  // some properties (invertedIndex, searchPipeline) are omitted\n  // from here because they're on the index, and serializing them twice\n  // would be redundant\n  return {\n    _ref: this._ref,\n    _fields: this._fields,\n    _documents: this._documents,\n    fieldRefs: fieldRefs,\n    fieldTermFrequencies: fieldTermFrequencies,\n    fieldLengths: fieldLengths,\n    pipeline: this.pipeline.toJSON(),\n    documentCount: this.documentCount,\n    _b: this._b, // XXX special (due to precision)?\n    _k1: this._k1, // XXX special (due to precision)?\n    termIndex: this.termIndex,\n    metadataWhitelist: this.metadataWhitelist\n  }\n}\n\nMutableBuilder.load = function load (serializedBuilder) {\n  var builder = new MutableBuilder()\n\n  for (var k in serializedBuilder) {\n    if (serializedBuilder.hasOwnProperty(k)) {\n      builder[k] = serializedBuilder[k]\n      if(k == '_fields' || k == '_documents') {\n          var noProtoObject = Object.create(null)\n          for(var innerK in builder[k]) {\n            noProtoObject[innerK] = builder[k][innerK]\n          }\n          builder[k] = noProtoObject\n      }\n    }\n  }\n\n  var fieldRefs = builder.fieldRefs\n  var fieldTermFrequencies = builder.fieldTermFrequencies\n  var fieldLengths = builder.fieldLengths\n  delete builder.fieldRefs\n\n  builder.fieldTermFrequencies = {}\n  builder.fieldLengths = {}\n\n  for (var i = 0; i < fieldRefs.length; i++) {\n    var fieldRef = fieldRefs[i]\n    builder.fieldTermFrequencies[fieldRef] = fieldTermFrequencies[i]\n    builder.fieldLengths[fieldRef] = fieldLengths[i]\n  }\n\n  // builder.tokenizer is initialized to the default by the MutableBuilder\n  // constructor\n  builder.pipeline = lunr.Pipeline.load(builder.pipeline)\n\n  return builder\n}\n/*\n * Copyright 2018 Rob Hoelz <rob AT hoelz.ro>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n */\n\nvar MutableIndex = function (attrs) {\n  lunr.Index.call(this, attrs)\n  this.builder = attrs.builder\n  this._dirty = false\n}\n\nMutableIndex.prototype = new lunr.Index({})\n\nMutableIndex.prototype.add = function add (doc) {\n  this.builder.add(doc)\n  this._dirty = true\n}\n\nMutableIndex.prototype.update = function update (doc) {\n  this.remove(doc)\n  this.add(doc)\n}\n\nMutableIndex.prototype.remove = function remove (doc) {\n  this.builder.remove(doc)\n  this._dirty = true\n}\n\n// XXX rebuilds the entire index =(\n// XXX refreshing this from newIndex is kinda wonky =(\nMutableIndex.prototype.checkDirty = function checkDirty () {\n  if (this._dirty) {\n    this._dirty = false\n    var newIndex = this.builder.build()\n    for (var k in newIndex) {\n      if (newIndex.hasOwnProperty(k)) {\n        this[k] = newIndex[k]\n      }\n    }\n  }\n}\n\nMutableIndex.prototype.toJSON = function toJSON () {\n  this.checkDirty()\n\n  // XXX do you need to serialize things that we could calculate post-load via builder.build?\n  var json = lunr.Index.prototype.toJSON.call(this)\n  json.builder = this.builder.toJSON()\n  return json\n}\n\nMutableIndex.load = function load (serializedIndex) {\n  var index = lunr.Index.load(serializedIndex)\n  var mutableIndex = new MutableIndex({})\n\n  for (var k in index) {\n    if (index.hasOwnProperty(k)) {\n      mutableIndex[k] = index[k]\n    }\n  }\n\n  mutableIndex.builder = MutableBuilder.load(serializedIndex.builder)\n  mutableIndex.builder.invertedIndex = mutableIndex.invertedIndex\n  mutableIndex.builder.searchPipeline = mutableIndex.pipeline\n  mutableIndex.dirty = false\n\n  return mutableIndex\n}\n\nMutableIndex.prototype.query = function query (fn) {\n  this.checkDirty()\n\n  return lunr.Index.prototype.query.call(this, fn)\n}\n/*\n * Copyright 2018 Rob Hoelz <rob AT hoelz.ro>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n */\n\n/**\n * A convenience function for configuring and constructing\n * a new mutable lunr Index.\n *\n * A lunr.MutableBuilder instance is created and the pipeline setup\n * with a trimmer, stop word filter and stemmer.\n *\n * This mutable builder object is yielded to the configuration function\n * that is passed as a parameter, allowing the list of fields\n * and other builder parameters to be customised.\n *\n * All documents _must_ be added within the passed config function, but\n * you can always update the index later. ;)\n *\n * @example\n * var idx = lunrMutable(function () {\n *   this.field('title')\n *   this.field('body')\n *   this.ref('id')\n *\n *   documents.forEach(function (doc) {\n *     this.add(doc)\n *   }, this)\n * })\n *\n * index.add({\n *     \"title\": \"new title\",\n *     \"body\": \"new body\",\n *     \"id\": \"2\"\n * })\n *\n * index.remove({ id: \"1\" });\n *\n * index.update({\n *   \"body\": \"change\",\n *   \"id\": \"2\"\n * })\n */\n\nvar lunrMutable = function (config) {\n  var builder = new MutableBuilder();\n\n  builder.pipeline.add(\n    lunr.trimmer,\n    lunr.stopWordFilter,\n    lunr.stemmer\n  )\n\n  builder.searchPipeline.add(\n    lunr.stemmer\n  )\n\n  config.call(builder, builder)\n  return builder.build()\n}\n\nlunrMutable.version = \"2.3.2\"\n\nlunrMutable.Builder = MutableBuilder\nlunrMutable.Index = MutableIndex\n  /**\n   * export the module via AMD, CommonJS or as a browser global\n   * Export code from https://github.com/umdjs/umd/blob/master/returnExports.js\n   */\n  ;(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      // AMD. Register as an anonymous module.\n      define(factory)\n    } else if (typeof exports === 'object') {\n      /**\n       * Node. Does not work with strict CommonJS, but\n       * only CommonJS-like enviroments that support module.exports,\n       * like Node.\n       */\n      module.exports = factory()\n    } else {\n      // Browser globals (root is window)\n      root.lunr = factory()\n    }\n  }(this, function () {\n    /**\n     * Just return a value to define the module export.\n     * This example returns an object, but the module\n     * can return a function as the exported value.\n     */\n    return lunrMutable\n  }))\n})();\n",
            "type": "application/javascript",
            "title": "$:/plugins/hoelzro/full-text-search/lunr-mutable.js",
            "module-type": "library"
        },
        "$:/plugins/hoelzro/full-text-search/localforage.min.js": {
            "text": "/*!\n    localForage -- Offline Storage, Improved\n    Version 1.5.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n!function(a){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=a();else if(\"function\"==typeof define&&define.amd)define([],a);else{var b;b=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,b.localforage=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i=\"function\"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error(\"Cannot find module '\"+g+\"'\");throw j.code=\"MODULE_NOT_FOUND\",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f=\"function\"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){(function(a){\"use strict\";function c(){k=!0;for(var a,b,c=l.length;c;){for(b=l,l=[],a=-1;++a<c;)b[a]();c=l.length}k=!1}function d(a){1!==l.push(a)||k||e()}var e,f=a.MutationObserver||a.WebKitMutationObserver;if(f){var g=0,h=new f(c),i=a.document.createTextNode(\"\");h.observe(i,{characterData:!0}),e=function(){i.data=g=++g%2}}else if(a.setImmediate||\"undefined\"==typeof a.MessageChannel)e=\"document\"in a&&\"onreadystatechange\"in a.document.createElement(\"script\")?function(){var b=a.document.createElement(\"script\");b.onreadystatechange=function(){c(),b.onreadystatechange=null,b.parentNode.removeChild(b),b=null},a.document.documentElement.appendChild(b)}:function(){setTimeout(c,0)};else{var j=new a.MessageChannel;j.port1.onmessage=c,e=function(){j.port2.postMessage(0)}}var k,l=[];b.exports=d}).call(this,\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{})},{}],2:[function(a,b,c){\"use strict\";function d(){}function e(a){if(\"function\"!=typeof a)throw new TypeError(\"resolver must be a function\");this.state=s,this.queue=[],this.outcome=void 0,a!==d&&i(this,a)}function f(a,b,c){this.promise=a,\"function\"==typeof b&&(this.onFulfilled=b,this.callFulfilled=this.otherCallFulfilled),\"function\"==typeof c&&(this.onRejected=c,this.callRejected=this.otherCallRejected)}function g(a,b,c){o(function(){var d;try{d=b(c)}catch(b){return p.reject(a,b)}d===a?p.reject(a,new TypeError(\"Cannot resolve promise with itself\")):p.resolve(a,d)})}function h(a){var b=a&&a.then;if(a&&\"object\"==typeof a&&\"function\"==typeof b)return function(){b.apply(a,arguments)}}function i(a,b){function c(b){f||(f=!0,p.reject(a,b))}function d(b){f||(f=!0,p.resolve(a,b))}function e(){b(d,c)}var f=!1,g=j(e);\"error\"===g.status&&c(g.value)}function j(a,b){var c={};try{c.value=a(b),c.status=\"success\"}catch(a){c.status=\"error\",c.value=a}return c}function k(a){return a instanceof this?a:p.resolve(new this(d),a)}function l(a){var b=new this(d);return p.reject(b,a)}function m(a){function b(a,b){function d(a){g[b]=a,++h!==e||f||(f=!0,p.resolve(j,g))}c.resolve(a).then(d,function(a){f||(f=!0,p.reject(j,a))})}var c=this;if(\"[object Array]\"!==Object.prototype.toString.call(a))return this.reject(new TypeError(\"must be an array\"));var e=a.length,f=!1;if(!e)return this.resolve([]);for(var g=new Array(e),h=0,i=-1,j=new this(d);++i<e;)b(a[i],i);return j}function n(a){function b(a){c.resolve(a).then(function(a){f||(f=!0,p.resolve(h,a))},function(a){f||(f=!0,p.reject(h,a))})}var c=this;if(\"[object Array]\"!==Object.prototype.toString.call(a))return this.reject(new TypeError(\"must be an array\"));var e=a.length,f=!1;if(!e)return this.resolve([]);for(var g=-1,h=new this(d);++g<e;)b(a[g]);return h}var o=a(1),p={},q=[\"REJECTED\"],r=[\"FULFILLED\"],s=[\"PENDING\"];b.exports=c=e,e.prototype.catch=function(a){return this.then(null,a)},e.prototype.then=function(a,b){if(\"function\"!=typeof a&&this.state===r||\"function\"!=typeof b&&this.state===q)return this;var c=new this.constructor(d);if(this.state!==s){var e=this.state===r?a:b;g(c,e,this.outcome)}else this.queue.push(new f(c,a,b));return c},f.prototype.callFulfilled=function(a){p.resolve(this.promise,a)},f.prototype.otherCallFulfilled=function(a){g(this.promise,this.onFulfilled,a)},f.prototype.callRejected=function(a){p.reject(this.promise,a)},f.prototype.otherCallRejected=function(a){g(this.promise,this.onRejected,a)},p.resolve=function(a,b){var c=j(h,b);if(\"error\"===c.status)return p.reject(a,c.value);var d=c.value;if(d)i(a,d);else{a.state=r,a.outcome=b;for(var e=-1,f=a.queue.length;++e<f;)a.queue[e].callFulfilled(b)}return a},p.reject=function(a,b){a.state=q,a.outcome=b;for(var c=-1,d=a.queue.length;++c<d;)a.queue[c].callRejected(b);return a},c.resolve=k,c.reject=l,c.all=m,c.race=n},{1:1}],3:[function(a,b,c){(function(b){\"use strict\";\"function\"!=typeof b.Promise&&(b.Promise=a(2))}).call(this,\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{})},{2:2}],4:[function(a,b,c){\"use strict\";function d(a,b){if(!(a instanceof b))throw new TypeError(\"Cannot call a class as a function\")}function e(){try{if(\"undefined\"!=typeof indexedDB)return indexedDB;if(\"undefined\"!=typeof webkitIndexedDB)return webkitIndexedDB;if(\"undefined\"!=typeof mozIndexedDB)return mozIndexedDB;if(\"undefined\"!=typeof OIndexedDB)return OIndexedDB;if(\"undefined\"!=typeof msIndexedDB)return msIndexedDB}catch(a){}}function f(){try{if(!ga)return!1;var a=\"undefined\"!=typeof openDatabase&&/(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent)&&!/Chrome/.test(navigator.userAgent)&&!/BlackBerry/.test(navigator.platform),b=\"function\"==typeof fetch&&fetch.toString().indexOf(\"[native code\")!==-1;return(!a||b)&&\"undefined\"!=typeof indexedDB&&\"undefined\"!=typeof IDBKeyRange}catch(a){return!1}}function g(){return\"function\"==typeof openDatabase}function h(){try{return\"undefined\"!=typeof localStorage&&\"setItem\"in localStorage&&localStorage.setItem}catch(a){return!1}}function i(a,b){a=a||[],b=b||{};try{return new Blob(a,b)}catch(f){if(\"TypeError\"!==f.name)throw f;for(var c=\"undefined\"!=typeof BlobBuilder?BlobBuilder:\"undefined\"!=typeof MSBlobBuilder?MSBlobBuilder:\"undefined\"!=typeof MozBlobBuilder?MozBlobBuilder:WebKitBlobBuilder,d=new c,e=0;e<a.length;e+=1)d.append(a[e]);return d.getBlob(b.type)}}function j(a,b){b&&a.then(function(a){b(null,a)},function(a){b(a)})}function k(a,b,c){\"function\"==typeof b&&a.then(b),\"function\"==typeof c&&a.catch(c)}function l(a){for(var b=a.length,c=new ArrayBuffer(b),d=new Uint8Array(c),e=0;e<b;e++)d[e]=a.charCodeAt(e);return c}function m(a){return new ja(function(b){var c=a.transaction(ka,\"readwrite\"),d=i([\"\"]);c.objectStore(ka).put(d,\"key\"),c.onabort=function(a){a.preventDefault(),a.stopPropagation(),b(!1)},c.oncomplete=function(){var a=navigator.userAgent.match(/Chrome\\/(\\d+)/),c=navigator.userAgent.match(/Edge\\//);b(c||!a||parseInt(a[1],10)>=43)}}).catch(function(){return!1})}function n(a){return\"boolean\"==typeof ha?ja.resolve(ha):m(a).then(function(a){return ha=a})}function o(a){var b=ia[a.name],c={};c.promise=new ja(function(a){c.resolve=a}),b.deferredOperations.push(c),b.dbReady?b.dbReady=b.dbReady.then(function(){return c.promise}):b.dbReady=c.promise}function p(a){var b=ia[a.name],c=b.deferredOperations.pop();c&&c.resolve()}function q(a,b){return new ja(function(c,d){if(a.db){if(!b)return c(a.db);o(a),a.db.close()}var e=[a.name];b&&e.push(a.version);var f=ga.open.apply(ga,e);b&&(f.onupgradeneeded=function(b){var c=f.result;try{c.createObjectStore(a.storeName),b.oldVersion<=1&&c.createObjectStore(ka)}catch(c){if(\"ConstraintError\"!==c.name)throw c;console.warn('The database \"'+a.name+'\" has been upgraded from version '+b.oldVersion+\" to version \"+b.newVersion+', but the storage \"'+a.storeName+'\" already exists.')}}),f.onerror=function(a){a.preventDefault(),d(f.error)},f.onsuccess=function(){c(f.result),p(a)}})}function r(a){return q(a,!1)}function s(a){return q(a,!0)}function t(a,b){if(!a.db)return!0;var c=!a.db.objectStoreNames.contains(a.storeName),d=a.version<a.db.version,e=a.version>a.db.version;if(d&&(a.version!==b&&console.warn('The database \"'+a.name+\"\\\" can't be downgraded from version \"+a.db.version+\" to version \"+a.version+\".\"),a.version=a.db.version),e||c){if(c){var f=a.db.version+1;f>a.version&&(a.version=f)}return!0}return!1}function u(a){return new ja(function(b,c){var d=new FileReader;d.onerror=c,d.onloadend=function(c){var d=btoa(c.target.result||\"\");b({__local_forage_encoded_blob:!0,data:d,type:a.type})},d.readAsBinaryString(a)})}function v(a){var b=l(atob(a.data));return i([b],{type:a.type})}function w(a){return a&&a.__local_forage_encoded_blob}function x(a){var b=this,c=b._initReady().then(function(){var a=ia[b._dbInfo.name];if(a&&a.dbReady)return a.dbReady});return k(c,a,a),c}function y(a){function b(){return ja.resolve()}var c=this,d={db:null};if(a)for(var e in a)d[e]=a[e];ia||(ia={});var f=ia[d.name];f||(f={forages:[],db:null,dbReady:null,deferredOperations:[]},ia[d.name]=f),f.forages.push(c),c._initReady||(c._initReady=c.ready,c.ready=x);for(var g=[],h=0;h<f.forages.length;h++){var i=f.forages[h];i!==c&&g.push(i._initReady().catch(b))}var j=f.forages.slice(0);return ja.all(g).then(function(){return d.db=f.db,r(d)}).then(function(a){return d.db=a,t(d,c._defaultConfig.version)?s(d):a}).then(function(a){d.db=f.db=a,c._dbInfo=d;for(var b=0;b<j.length;b++){var e=j[b];e!==c&&(e._dbInfo.db=d.db,e._dbInfo.version=d.version)}})}function z(a,b){var c=this;\"string\"!=typeof a&&(console.warn(a+\" used as a key, but it is not a string.\"),a=String(a));var d=new ja(function(b,d){c.ready().then(function(){var e=c._dbInfo,f=e.db.transaction(e.storeName,\"readonly\").objectStore(e.storeName),g=f.get(a);g.onsuccess=function(){var a=g.result;void 0===a&&(a=null),w(a)&&(a=v(a)),b(a)},g.onerror=function(){d(g.error)}}).catch(d)});return j(d,b),d}function A(a,b){var c=this,d=new ja(function(b,d){c.ready().then(function(){var e=c._dbInfo,f=e.db.transaction(e.storeName,\"readonly\").objectStore(e.storeName),g=f.openCursor(),h=1;g.onsuccess=function(){var c=g.result;if(c){var d=c.value;w(d)&&(d=v(d));var e=a(d,c.key,h++);void 0!==e?b(e):c.continue()}else b()},g.onerror=function(){d(g.error)}}).catch(d)});return j(d,b),d}function B(a,b,c){var d=this;\"string\"!=typeof a&&(console.warn(a+\" used as a key, but it is not a string.\"),a=String(a));var e=new ja(function(c,e){var f;d.ready().then(function(){return f=d._dbInfo,\"[object Blob]\"===la.call(b)?n(f.db).then(function(a){return a?b:u(b)}):b}).then(function(b){var d=f.db.transaction(f.storeName,\"readwrite\"),g=d.objectStore(f.storeName),h=g.put(b,a);null===b&&(b=void 0),d.oncomplete=function(){void 0===b&&(b=null),c(b)},d.onabort=d.onerror=function(){var a=h.error?h.error:h.transaction.error;e(a)}}).catch(e)});return j(e,c),e}function C(a,b){var c=this;\"string\"!=typeof a&&(console.warn(a+\" used as a key, but it is not a string.\"),a=String(a));var d=new ja(function(b,d){c.ready().then(function(){var e=c._dbInfo,f=e.db.transaction(e.storeName,\"readwrite\"),g=f.objectStore(e.storeName),h=g.delete(a);f.oncomplete=function(){b()},f.onerror=function(){d(h.error)},f.onabort=function(){var a=h.error?h.error:h.transaction.error;d(a)}}).catch(d)});return j(d,b),d}function D(a){var b=this,c=new ja(function(a,c){b.ready().then(function(){var d=b._dbInfo,e=d.db.transaction(d.storeName,\"readwrite\"),f=e.objectStore(d.storeName),g=f.clear();e.oncomplete=function(){a()},e.onabort=e.onerror=function(){var a=g.error?g.error:g.transaction.error;c(a)}}).catch(c)});return j(c,a),c}function E(a){var b=this,c=new ja(function(a,c){b.ready().then(function(){var d=b._dbInfo,e=d.db.transaction(d.storeName,\"readonly\").objectStore(d.storeName),f=e.count();f.onsuccess=function(){a(f.result)},f.onerror=function(){c(f.error)}}).catch(c)});return j(c,a),c}function F(a,b){var c=this,d=new ja(function(b,d){return a<0?void b(null):void c.ready().then(function(){var e=c._dbInfo,f=e.db.transaction(e.storeName,\"readonly\").objectStore(e.storeName),g=!1,h=f.openCursor();h.onsuccess=function(){var c=h.result;return c?void(0===a?b(c.key):g?b(c.key):(g=!0,c.advance(a))):void b(null)},h.onerror=function(){d(h.error)}}).catch(d)});return j(d,b),d}function G(a){var b=this,c=new ja(function(a,c){b.ready().then(function(){var d=b._dbInfo,e=d.db.transaction(d.storeName,\"readonly\").objectStore(d.storeName),f=e.openCursor(),g=[];f.onsuccess=function(){var b=f.result;return b?(g.push(b.key),void b.continue()):void a(g)},f.onerror=function(){c(f.error)}}).catch(c)});return j(c,a),c}function H(a){var b,c,d,e,f,g=.75*a.length,h=a.length,i=0;\"=\"===a[a.length-1]&&(g--,\"=\"===a[a.length-2]&&g--);var j=new ArrayBuffer(g),k=new Uint8Array(j);for(b=0;b<h;b+=4)c=na.indexOf(a[b]),d=na.indexOf(a[b+1]),e=na.indexOf(a[b+2]),f=na.indexOf(a[b+3]),k[i++]=c<<2|d>>4,k[i++]=(15&d)<<4|e>>2,k[i++]=(3&e)<<6|63&f;return j}function I(a){var b,c=new Uint8Array(a),d=\"\";for(b=0;b<c.length;b+=3)d+=na[c[b]>>2],d+=na[(3&c[b])<<4|c[b+1]>>4],d+=na[(15&c[b+1])<<2|c[b+2]>>6],d+=na[63&c[b+2]];return c.length%3===2?d=d.substring(0,d.length-1)+\"=\":c.length%3===1&&(d=d.substring(0,d.length-2)+\"==\"),d}function J(a,b){var c=\"\";if(a&&(c=Ea.call(a)),a&&(\"[object ArrayBuffer]\"===c||a.buffer&&\"[object ArrayBuffer]\"===Ea.call(a.buffer))){var d,e=qa;a instanceof ArrayBuffer?(d=a,e+=sa):(d=a.buffer,\"[object Int8Array]\"===c?e+=ua:\"[object Uint8Array]\"===c?e+=va:\"[object Uint8ClampedArray]\"===c?e+=wa:\"[object Int16Array]\"===c?e+=xa:\"[object Uint16Array]\"===c?e+=za:\"[object Int32Array]\"===c?e+=ya:\"[object Uint32Array]\"===c?e+=Aa:\"[object Float32Array]\"===c?e+=Ba:\"[object Float64Array]\"===c?e+=Ca:b(new Error(\"Failed to get type for BinaryArray\"))),b(e+I(d))}else if(\"[object Blob]\"===c){var f=new FileReader;f.onload=function(){var c=oa+a.type+\"~\"+I(this.result);b(qa+ta+c)},f.readAsArrayBuffer(a)}else try{b(JSON.stringify(a))}catch(c){console.error(\"Couldn't convert value into a JSON string: \",a),b(null,c)}}function K(a){if(a.substring(0,ra)!==qa)return JSON.parse(a);var b,c=a.substring(Da),d=a.substring(ra,Da);if(d===ta&&pa.test(c)){var e=c.match(pa);b=e[1],c=c.substring(e[0].length)}var f=H(c);switch(d){case sa:return f;case ta:return i([f],{type:b});case ua:return new Int8Array(f);case va:return new Uint8Array(f);case wa:return new Uint8ClampedArray(f);case xa:return new Int16Array(f);case za:return new Uint16Array(f);case ya:return new Int32Array(f);case Aa:return new Uint32Array(f);case Ba:return new Float32Array(f);case Ca:return new Float64Array(f);default:throw new Error(\"Unkown type: \"+d)}}function L(a){var b=this,c={db:null};if(a)for(var d in a)c[d]=\"string\"!=typeof a[d]?a[d].toString():a[d];var e=new ja(function(a,d){try{c.db=openDatabase(c.name,String(c.version),c.description,c.size)}catch(a){return d(a)}c.db.transaction(function(e){e.executeSql(\"CREATE TABLE IF NOT EXISTS \"+c.storeName+\" (id INTEGER PRIMARY KEY, key unique, value)\",[],function(){b._dbInfo=c,a()},function(a,b){d(b)})})});return c.serializer=Fa,e}function M(a,b){var c=this;\"string\"!=typeof a&&(console.warn(a+\" used as a key, but it is not a string.\"),a=String(a));var d=new ja(function(b,d){c.ready().then(function(){var e=c._dbInfo;e.db.transaction(function(c){c.executeSql(\"SELECT * FROM \"+e.storeName+\" WHERE key = ? LIMIT 1\",[a],function(a,c){var d=c.rows.length?c.rows.item(0).value:null;d&&(d=e.serializer.deserialize(d)),b(d)},function(a,b){d(b)})})}).catch(d)});return j(d,b),d}function N(a,b){var c=this,d=new ja(function(b,d){c.ready().then(function(){var e=c._dbInfo;e.db.transaction(function(c){c.executeSql(\"SELECT * FROM \"+e.storeName,[],function(c,d){for(var f=d.rows,g=f.length,h=0;h<g;h++){var i=f.item(h),j=i.value;if(j&&(j=e.serializer.deserialize(j)),j=a(j,i.key,h+1),void 0!==j)return void b(j)}b()},function(a,b){d(b)})})}).catch(d)});return j(d,b),d}function O(a,b,c,d){var e=this;\"string\"!=typeof a&&(console.warn(a+\" used as a key, but it is not a string.\"),a=String(a));var f=new ja(function(f,g){e.ready().then(function(){void 0===b&&(b=null);var h=b,i=e._dbInfo;i.serializer.serialize(b,function(b,j){j?g(j):i.db.transaction(function(c){c.executeSql(\"INSERT OR REPLACE INTO \"+i.storeName+\" (key, value) VALUES (?, ?)\",[a,b],function(){f(h)},function(a,b){g(b)})},function(b){if(b.code===b.QUOTA_ERR){if(d>0)return void f(O.apply(e,[a,h,c,d-1]));g(b)}})})}).catch(g)});return j(f,c),f}function P(a,b,c){return O.apply(this,[a,b,c,1])}function Q(a,b){var c=this;\"string\"!=typeof a&&(console.warn(a+\" used as a key, but it is not a string.\"),a=String(a));var d=new ja(function(b,d){c.ready().then(function(){var e=c._dbInfo;e.db.transaction(function(c){c.executeSql(\"DELETE FROM \"+e.storeName+\" WHERE key = ?\",[a],function(){b()},function(a,b){d(b)})})}).catch(d)});return j(d,b),d}function R(a){var b=this,c=new ja(function(a,c){b.ready().then(function(){var d=b._dbInfo;d.db.transaction(function(b){b.executeSql(\"DELETE FROM \"+d.storeName,[],function(){a()},function(a,b){c(b)})})}).catch(c)});return j(c,a),c}function S(a){var b=this,c=new ja(function(a,c){b.ready().then(function(){var d=b._dbInfo;d.db.transaction(function(b){b.executeSql(\"SELECT COUNT(key) as c FROM \"+d.storeName,[],function(b,c){var d=c.rows.item(0).c;a(d)},function(a,b){c(b)})})}).catch(c)});return j(c,a),c}function T(a,b){var c=this,d=new ja(function(b,d){c.ready().then(function(){var e=c._dbInfo;e.db.transaction(function(c){c.executeSql(\"SELECT key FROM \"+e.storeName+\" WHERE id = ? LIMIT 1\",[a+1],function(a,c){var d=c.rows.length?c.rows.item(0).key:null;b(d)},function(a,b){d(b)})})}).catch(d)});return j(d,b),d}function U(a){var b=this,c=new ja(function(a,c){b.ready().then(function(){var d=b._dbInfo;d.db.transaction(function(b){b.executeSql(\"SELECT key FROM \"+d.storeName,[],function(b,c){for(var d=[],e=0;e<c.rows.length;e++)d.push(c.rows.item(e).key);a(d)},function(a,b){c(b)})})}).catch(c)});return j(c,a),c}function V(a){var b=this,c={};if(a)for(var d in a)c[d]=a[d];return c.keyPrefix=c.name+\"/\",c.storeName!==b._defaultConfig.storeName&&(c.keyPrefix+=c.storeName+\"/\"),b._dbInfo=c,c.serializer=Fa,ja.resolve()}function W(a){var b=this,c=b.ready().then(function(){for(var a=b._dbInfo.keyPrefix,c=localStorage.length-1;c>=0;c--){var d=localStorage.key(c);0===d.indexOf(a)&&localStorage.removeItem(d)}});return j(c,a),c}function X(a,b){var c=this;\"string\"!=typeof a&&(console.warn(a+\" used as a key, but it is not a string.\"),a=String(a));var d=c.ready().then(function(){var b=c._dbInfo,d=localStorage.getItem(b.keyPrefix+a);return d&&(d=b.serializer.deserialize(d)),d});return j(d,b),d}function Y(a,b){var c=this,d=c.ready().then(function(){for(var b=c._dbInfo,d=b.keyPrefix,e=d.length,f=localStorage.length,g=1,h=0;h<f;h++){var i=localStorage.key(h);if(0===i.indexOf(d)){var j=localStorage.getItem(i);if(j&&(j=b.serializer.deserialize(j)),j=a(j,i.substring(e),g++),void 0!==j)return j}}});return j(d,b),d}function Z(a,b){var c=this,d=c.ready().then(function(){var b,d=c._dbInfo;try{b=localStorage.key(a)}catch(a){b=null}return b&&(b=b.substring(d.keyPrefix.length)),b});return j(d,b),d}function $(a){var b=this,c=b.ready().then(function(){for(var a=b._dbInfo,c=localStorage.length,d=[],e=0;e<c;e++)0===localStorage.key(e).indexOf(a.keyPrefix)&&d.push(localStorage.key(e).substring(a.keyPrefix.length));return d});return j(c,a),c}function _(a){var b=this,c=b.keys().then(function(a){return a.length});return j(c,a),c}function aa(a,b){var c=this;\"string\"!=typeof a&&(console.warn(a+\" used as a key, but it is not a string.\"),a=String(a));var d=c.ready().then(function(){var b=c._dbInfo;localStorage.removeItem(b.keyPrefix+a)});return j(d,b),d}function ba(a,b,c){var d=this;\"string\"!=typeof a&&(console.warn(a+\" used as a key, but it is not a string.\"),a=String(a));var e=d.ready().then(function(){void 0===b&&(b=null);var c=b;return new ja(function(e,f){var g=d._dbInfo;g.serializer.serialize(b,function(b,d){if(d)f(d);else try{localStorage.setItem(g.keyPrefix+a,b),e(c)}catch(a){\"QuotaExceededError\"!==a.name&&\"NS_ERROR_DOM_QUOTA_REACHED\"!==a.name||f(a),f(a)}})})});return j(e,c),e}function ca(a,b){a[b]=function(){var c=arguments;return a.ready().then(function(){return a[b].apply(a,c)})}}function da(){for(var a=1;a<arguments.length;a++){var b=arguments[a];if(b)for(var c in b)b.hasOwnProperty(c)&&(Oa(b[c])?arguments[0][c]=b[c].slice():arguments[0][c]=b[c])}return arguments[0]}function ea(a){for(var b in Ja)if(Ja.hasOwnProperty(b)&&Ja[b]===a)return!0;return!1}var fa=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&\"function\"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?\"symbol\":typeof a},ga=e();\"undefined\"==typeof Promise&&a(3);var ha,ia,ja=Promise,ka=\"local-forage-detect-blob-support\",la=Object.prototype.toString,ma={_driver:\"asyncStorage\",_initStorage:y,iterate:A,getItem:z,setItem:B,removeItem:C,clear:D,length:E,key:F,keys:G},na=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",oa=\"~~local_forage_type~\",pa=/^~~local_forage_type~([^~]+)~/,qa=\"__lfsc__:\",ra=qa.length,sa=\"arbf\",ta=\"blob\",ua=\"si08\",va=\"ui08\",wa=\"uic8\",xa=\"si16\",ya=\"si32\",za=\"ur16\",Aa=\"ui32\",Ba=\"fl32\",Ca=\"fl64\",Da=ra+sa.length,Ea=Object.prototype.toString,Fa={serialize:J,deserialize:K,stringToBuffer:H,bufferToString:I},Ga={_driver:\"webSQLStorage\",_initStorage:L,iterate:N,getItem:M,setItem:P,removeItem:Q,clear:R,length:S,key:T,keys:U},Ha={_driver:\"localStorageWrapper\",_initStorage:V,iterate:Y,getItem:X,setItem:ba,removeItem:aa,clear:W,length:_,key:Z,keys:$},Ia={},Ja={INDEXEDDB:\"asyncStorage\",LOCALSTORAGE:\"localStorageWrapper\",WEBSQL:\"webSQLStorage\"},Ka=[Ja.INDEXEDDB,Ja.WEBSQL,Ja.LOCALSTORAGE],La=[\"clear\",\"getItem\",\"iterate\",\"key\",\"keys\",\"length\",\"removeItem\",\"setItem\"],Ma={description:\"\",driver:Ka.slice(),name:\"localforage\",size:4980736,storeName:\"keyvaluepairs\",version:1},Na={};Na[Ja.INDEXEDDB]=f(),Na[Ja.WEBSQL]=g(),Na[Ja.LOCALSTORAGE]=h();var Oa=Array.isArray||function(a){return\"[object Array]\"===Object.prototype.toString.call(a)},Pa=function(){function a(b){d(this,a),this.INDEXEDDB=Ja.INDEXEDDB,this.LOCALSTORAGE=Ja.LOCALSTORAGE,this.WEBSQL=Ja.WEBSQL,this._defaultConfig=da({},Ma),this._config=da({},this._defaultConfig,b),this._driverSet=null,this._initDriver=null,this._ready=!1,this._dbInfo=null,this._wrapLibraryMethodsWithReady(),this.setDriver(this._config.driver).catch(function(){})}return a.prototype.config=function(a){if(\"object\"===(\"undefined\"==typeof a?\"undefined\":fa(a))){if(this._ready)return new Error(\"Can't call config() after localforage has been used.\");for(var b in a){if(\"storeName\"===b&&(a[b]=a[b].replace(/\\W/g,\"_\")),\"version\"===b&&\"number\"!=typeof a[b])return new Error(\"Database version must be a number.\");this._config[b]=a[b]}return!(\"driver\"in a&&a.driver)||this.setDriver(this._config.driver)}return\"string\"==typeof a?this._config[a]:this._config},a.prototype.defineDriver=function(a,b,c){var d=new ja(function(b,c){try{var d=a._driver,e=new Error(\"Custom driver not compliant; see https://mozilla.github.io/localForage/#definedriver\"),f=new Error(\"Custom driver name already in use: \"+a._driver);if(!a._driver)return void c(e);if(ea(a._driver))return void c(f);for(var g=La.concat(\"_initStorage\"),h=0;h<g.length;h++){var i=g[h];if(!i||!a[i]||\"function\"!=typeof a[i])return void c(e)}var j=ja.resolve(!0);\"_support\"in a&&(j=a._support&&\"function\"==typeof a._support?a._support():ja.resolve(!!a._support)),j.then(function(c){Na[d]=c,Ia[d]=a,b()},c)}catch(a){c(a)}});return k(d,b,c),d},a.prototype.driver=function(){return this._driver||null},a.prototype.getDriver=function(a,b,c){var d=this,e=ja.resolve().then(function(){if(!ea(a)){if(Ia[a])return Ia[a];throw new Error(\"Driver not found.\")}switch(a){case d.INDEXEDDB:return ma;case d.LOCALSTORAGE:return Ha;case d.WEBSQL:return Ga}});return k(e,b,c),e},a.prototype.getSerializer=function(a){var b=ja.resolve(Fa);return k(b,a),b},a.prototype.ready=function(a){var b=this,c=b._driverSet.then(function(){return null===b._ready&&(b._ready=b._initDriver()),b._ready});return k(c,a,a),c},a.prototype.setDriver=function(a,b,c){function d(){g._config.driver=g.driver()}function e(a){return g._extend(a),d(),g._ready=g._initStorage(g._config),g._ready}function f(a){return function(){function b(){for(;c<a.length;){var f=a[c];return c++,g._dbInfo=null,g._ready=null,g.getDriver(f).then(e).catch(b)}d();var h=new Error(\"No available storage method found.\");return g._driverSet=ja.reject(h),g._driverSet}var c=0;return b()}}var g=this;Oa(a)||(a=[a]);var h=this._getSupportedDrivers(a),i=null!==this._driverSet?this._driverSet.catch(function(){return ja.resolve()}):ja.resolve();return this._driverSet=i.then(function(){var a=h[0];return g._dbInfo=null,g._ready=null,g.getDriver(a).then(function(a){g._driver=a._driver,d(),g._wrapLibraryMethodsWithReady(),g._initDriver=f(h)})}).catch(function(){d();var a=new Error(\"No available storage method found.\");return g._driverSet=ja.reject(a),g._driverSet}),k(this._driverSet,b,c),this._driverSet},a.prototype.supports=function(a){return!!Na[a]},a.prototype._extend=function(a){da(this,a)},a.prototype._getSupportedDrivers=function(a){for(var b=[],c=0,d=a.length;c<d;c++){var e=a[c];this.supports(e)&&b.push(e)}return b},a.prototype._wrapLibraryMethodsWithReady=function(){for(var a=0;a<La.length;a++)ca(this,La[a])},a.prototype.createInstance=function(b){return new a(b)},a}(),Qa=new Pa;b.exports=Qa},{3:3}]},{},[4])(4)});",
            "type": "application/javascript",
            "title": "$:/plugins/hoelzro/full-text-search/localforage.min.js",
            "module-type": "library"
        },
        "$:/plugins/hoelzro/full-text-search/fts-action-generate-index.js": {
            "title": "$:/plugins/hoelzro/full-text-search/fts-action-generate-index.js",
            "text": "\"use strict\";\n/*\\\ntitle: $:/plugins/hoelzro/full-text-search/fts-action-generate-index.js\ntype: application/javascript\nmodule-type: widget\n\n\\*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nexports.__esModule = true;\nvar widgetModule = require('$:/core/modules/widgets/widget.js');\nvar Widget = widgetModule.widget;\nvar sharedIndex = require('$:/plugins/hoelzro/full-text-search/shared-index.js');\nvar cache = require('$:/plugins/hoelzro/full-text-search/cache.js');\nvar generateQueryExpander = require('$:/plugins/hoelzro/full-text-search/query-expander.js').generateQueryExpander;\nvar FTSActionGenerateIndex;\n(function (FTSActionGenerateIndex) {\n    var RELATED_TERMS_TIDDLER = '$:/plugins/hoelzro/full-text-search/RelatedTerms.json';\n    var USE_CACHE_TIDDLER = '$:/plugins/hoelzro/full-text-search/use-cache';\n    var STATE_TIDDLER = '$:/temp/FTS-state';\n    var UPDATE_FREQUENCY = 10;\n    var FTSActionGenerateIndexWidget = /** @class */ (function (_super) {\n        __extends(FTSActionGenerateIndexWidget, _super);\n        function FTSActionGenerateIndexWidget(parseTreeNode, options) {\n            var _this = _super.call(this) || this;\n            _this.initialise(parseTreeNode, options);\n            return _this;\n        }\n        FTSActionGenerateIndexWidget.prototype.render = function (parent, nextSibling) {\n            this.computeAttributes();\n            this.execute();\n        };\n        FTSActionGenerateIndexWidget.prototype.execute = function () {\n        };\n        FTSActionGenerateIndexWidget.prototype.refresh = function (changedTiddlers) {\n            return this.refreshChildren(changedTiddlers);\n        };\n        FTSActionGenerateIndexWidget.prototype.asyncInvokeAction = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                var shouldSuppressCache, rebuilding, filter, tiddlers, isFresh, cacheData, _a, cacheAge, titles, i, title, tiddler, modified, i, title, tiddler, relatedTerms, lunr_1, expandQuery, age, stateTiddler, fields, self, lastUpdate;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            shouldSuppressCache = this.wiki.getTiddlerText(USE_CACHE_TIDDLER) == 'no';\n                            rebuilding = this.getAttribute('rebuild') === 'true';\n                            filter = '[!is[system]]';\n                            if (!(rebuilding || shouldSuppressCache)) return [3 /*break*/, 1];\n                            _a = null;\n                            return [3 /*break*/, 3];\n                        case 1: return [4 /*yield*/, cache.load()];\n                        case 2:\n                            _a = _b.sent();\n                            _b.label = 3;\n                        case 3:\n                            cacheData = _a;\n                            if (!cacheData) return [3 /*break*/, 5];\n                            return [4 /*yield*/, cache.getAge()];\n                        case 4:\n                            cacheAge = _b.sent();\n                            filter += ' +[nsort[modified]]';\n                            titles = this.wiki.filterTiddlers(filter);\n                            tiddlers = [];\n                            for (i = titles.length - 1; i >= 0; i--) {\n                                title = titles[i];\n                                tiddler = this.wiki.getTiddler(title);\n                                if (!('modified' in tiddler.fields)) {\n                                    break;\n                                }\n                                modified = $tw.utils.stringifyDate(tiddler.fields.modified);\n                                if (modified <= cacheAge) {\n                                    break;\n                                }\n                                tiddlers.push(title);\n                            }\n                            for (i = 0; i < titles.length; i++) {\n                                title = titles[i];\n                                tiddler = this.wiki.getTiddler(title);\n                                if ('modified' in tiddler.fields) {\n                                    break;\n                                }\n                                tiddlers.push(title);\n                            }\n                            relatedTerms = $tw.wiki.getTiddlerDataCached(RELATED_TERMS_TIDDLER, []);\n                            relatedTerms = relatedTerms.map($tw.utils.parseStringArray);\n                            lunr_1 = require('$:/plugins/hoelzro/full-text-search/lunr.min.js');\n                            expandQuery = generateQueryExpander(lunr_1, relatedTerms);\n                            sharedIndex.load(cacheData);\n                            isFresh = false;\n                            return [3 /*break*/, 6];\n                        case 5:\n                            tiddlers = this.wiki.filterTiddlers(filter);\n                            isFresh = true;\n                            _b.label = 6;\n                        case 6:\n                            age = this.wiki.filterTiddlers(filter + ' +[nsort[modified]last[]get[modified]]')[0];\n                            age = age == null ? '0' : age;\n                            stateTiddler = this.wiki.getTiddler(STATE_TIDDLER);\n                            if (!(tiddlers.length > 0)) return [3 /*break*/, 8];\n                            fields = {\n                                text: 'initializing',\n                                progressCurrent: 0,\n                                progressTotal: tiddlers.length\n                            };\n                            this.wiki.addTiddler(new $tw.Tiddler(stateTiddler, fields, this.wiki.getModificationFields()));\n                            self = this;\n                            lastUpdate = 0;\n                            return [4 /*yield*/, sharedIndex.buildIndex(this.wiki, tiddlers, isFresh, function (progressCurrent) {\n                                    return __awaiter(this, void 0, void 0, function () {\n                                        var stateTiddler, e_1, stateTiddler;\n                                        return __generator(this, function (_a) {\n                                            switch (_a.label) {\n                                                case 0:\n                                                    if ((progressCurrent - lastUpdate) >= UPDATE_FREQUENCY) {\n                                                        stateTiddler = self.wiki.getTiddler(STATE_TIDDLER);\n                                                        self.wiki.addTiddler(new $tw.Tiddler(stateTiddler, { progressCurrent: progressCurrent }, self.wiki.getModificationFields()));\n                                                        lastUpdate = progressCurrent;\n                                                    }\n                                                    if (!(progressCurrent == tiddlers.length)) return [3 /*break*/, 6];\n                                                    _a.label = 1;\n                                                case 1:\n                                                    _a.trys.push([1, 4, , 5]);\n                                                    if (!!shouldSuppressCache) return [3 /*break*/, 3];\n                                                    return [4 /*yield*/, cache.save(age, sharedIndex.getIndex().toJSON())];\n                                                case 2:\n                                                    _a.sent();\n                                                    _a.label = 3;\n                                                case 3: return [3 /*break*/, 5];\n                                                case 4:\n                                                    e_1 = _a.sent();\n                                                    return [3 /*break*/, 5];\n                                                case 5:\n                                                    stateTiddler = self.wiki.getTiddler(STATE_TIDDLER);\n                                                    self.wiki.addTiddler(new $tw.Tiddler(stateTiddler, { text: 'initialized', progressCurrent: progressCurrent }, self.wiki.getModificationFields()));\n                                                    _a.label = 6;\n                                                case 6: return [2 /*return*/];\n                                            }\n                                        });\n                                    });\n                                })];\n                        case 7:\n                            _b.sent();\n                            return [3 /*break*/, 9];\n                        case 8:\n                            this.wiki.addTiddler(new $tw.Tiddler(stateTiddler, { text: 'initialized', progressCurrent: 1, progressTotal: 1 }, this.wiki.getModificationFields()));\n                            _b.label = 9;\n                        case 9: return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        FTSActionGenerateIndexWidget.prototype.invokeAction = function (triggeringWidget, event) {\n            this.asyncInvokeAction().then(function () {\n            }, function (err) {\n                console.log(err);\n            });\n        };\n        return FTSActionGenerateIndexWidget;\n    }(Widget));\n    exports['fts-action-generate-index'] = FTSActionGenerateIndexWidget;\n})(FTSActionGenerateIndex || (FTSActionGenerateIndex = {}));\n// vim:sts=4:sw=4\n",
            "type": "application/javascript",
            "module-type": "widget"
        },
        "$:/plugins/hoelzro/full-text-search/ftsearch.js": {
            "title": "$:/plugins/hoelzro/full-text-search/ftsearch.js",
            "text": "\"use strict\";\n/*\\\ntitle: $:/plugins/hoelzro/full-text-search/ftsearch.js\ntype: application/javascript\nmodule-type: filteroperator\n\n\\*/\nvar FTSearch;\n(function (FTSearch) {\n    var FUZZY_SEARCH_TIDDLER = '$:/plugins/hoelzro/full-text-search/EnableFuzzySearching';\n    var lunr = require('$:/plugins/hoelzro/full-text-search/lunr.min.js');\n    var getIndex = require('$:/plugins/hoelzro/full-text-search/shared-index.js').getIndex;\n    function ftsearch(source, operator, options) {\n        var sourceLookup = Object.create(null);\n        source(function (tiddler, title) {\n            sourceLookup[title] = tiddler;\n        });\n        var index = getIndex();\n        if (!index) {\n            return [];\n        }\n        return function (callback) {\n            var results;\n            try {\n                var fuzzySearchesEnabled = options.wiki.getTiddlerText(FUZZY_SEARCH_TIDDLER, '') == 'yes';\n                if (!fuzzySearchesEnabled) {\n                    var qp = new lunr.QueryParser(operator.operand, new lunr.Query(['title', 'tags', 'text']));\n                    var query = qp.parse();\n                    for (var _i = 0, _a = query.clauses; _i < _a.length; _i++) {\n                        var clause = _a[_i];\n                        if (!clause.usePipeline) {\n                            // we're using a wildcard, but the index isn't prepared for\n                            // fuzzy searches - so pass information on this down the pipeline\n                            return callback(null, null, \"It looks like you're trying to perform a wildcard search; you'll need to enable wildcard/fuzzy searching in the FTS settings\");\n                        }\n                        if ('editDistance' in clause) {\n                            // we're using a fuzzy search, but the index isn't prepared for\n                            // fuzzy searches - so pass information on this down the pipeline\n                            return callback(null, null, \"It looks like you're trying to perform a fuzzy search; you'll need to enable wildcard/fuzzy searching in the FTS settings\");\n                        }\n                    }\n                }\n                results = index.search(operator.operand);\n            }\n            catch (e) {\n                if (e instanceof lunr.QueryParseError) {\n                    results = [];\n                }\n                else {\n                    throw e;\n                }\n            }\n            for (var _b = 0, results_1 = results; _b < results_1.length; _b++) {\n                var match = results_1[_b];\n                if (match.ref in sourceLookup) {\n                    callback(sourceLookup[match.ref], match.ref);\n                }\n            }\n        };\n    }\n    FTSearch.ftsearch = ftsearch;\n    ;\n})(FTSearch || (FTSearch = {}));\nmodule.exports = FTSearch;\n// vim:sts=4:sw=4\n",
            "type": "application/javascript",
            "module-type": "filteroperator"
        },
        "$:/plugins/hoelzro/full-text-search/ftsfeedback.js": {
            "title": "$:/plugins/hoelzro/full-text-search/ftsfeedback.js",
            "text": "\"use strict\";\n/*\\\ntitle: $:/plugins/hoelzro/full-text-search/ftsfeedback.js\ntype: application/javascript\nmodule-type: filteroperator\n\n\\*/\nvar FTSFeedback;\n(function (FTSFeedback) {\n    function ftsfeedback(source, operator, options) {\n        return function (callback) {\n            var targetTiddler = operator.operand;\n            var listOfFeedback = [];\n            source(function (tiddler, title, feedback) {\n                if (tiddler == null && title == null) {\n                    listOfFeedback.push(feedback);\n                }\n                else {\n                    callback(tiddler, title);\n                }\n            });\n            options.wiki.setTiddlerData(targetTiddler, listOfFeedback);\n        };\n    }\n    FTSFeedback.ftsfeedback = ftsfeedback;\n})(FTSFeedback || (FTSFeedback = {}));\nmodule.exports = FTSFeedback;\n",
            "type": "application/javascript",
            "module-type": "filteroperator"
        },
        "$:/plugins/hoelzro/full-text-search/history": {
            "title": "$:/plugins/hoelzro/full-text-search/history",
            "type": "text/vnd.tiddlywiki",
            "text": "! Release History\n\n!! 1.1.0 (2018-11-24)\n\n!!! Bug Fixes\n\n  * The plugin no longer indexes draft tiddlers\n  * Refresh query results when embedding ftsearch directly ([[GH #24|https://github.com/hoelzro/tw-full-text-search/issues/24]])\n  * Fixed a bug where wikis with `__proto__` in them would fail to load from cache\n  * Fix some query relevance issues\n  * Fix a bug where indexing didn't work on non-Node installations on Chrome\n\n!!! User-facing changes\n\n  * ~TiddlyWiki 5.1.15 is now required!\n  * Added the ability to automatically index your wiki on startup (~TiddlyWiki 5.1.16 is required for this)\n  * Added lots of examples\n  * Improved indexing for wildcards/fuzzy searches, but these are now hidden behind a configuration flag due the overhead incurred\n  * Alert the user if changing their FTS settings requires an index rebuild\n\n!!! Developer changes\n\n  * Updated to lunr 2.3.5\n  * Tests now use Jasmine 3\n\n!! 1.0.3 (2018-10-07)\n\n!!! User-facing changes\n\n  * Fixed advanced search result listing (GH #8)\n\n!!! Developer changes\n\n  * Allow wikis to disable the cache, primarily for the demo wiki that lives on hoelz.ro (GH #11)\n\n!! 1.0.2 (2018-08-02)\n\n!!! User-facing changes\n\n  * Upgraded to lunr.js 2.3.1, which includes new features like additional query operators.\n\n!! 1.0.1 (2018-06-29)\n\n!!! Bug Fixes\n\n  * Fixed a bug where incomplete lunr.js queries would throw red boxes in the user's face.  Thanks to Diego Mesa for reporting!\n\n!! 1.0.0 (2017-11-29)\n\n!!! User-facing changes\n\n  * Enabled index creation using web workers, resulting in a 10x speedup\n  * Fixed a bug causing images and other non-text data to get indexed\n  * Fixed a bug causing tags to be improperly indexed\n\n!!! Developer changes\n\n  * Upgraded the FTS plugin to lunr.js 2.1.4, plus some modifications of my own to enable mutable indexes\n  * Added tests\n  * Added an experimental feature called \"query expansion\" - I don't know if it'll stay around or how well it works, so there's no UI around it at the moment\n\n!! 0.0.4 (2017-06-11)\n\nFix bug where deleted content from a tiddler would still affect search results if a\npartial index is loaded from the web storage cache.\n\n!! 0.0.3 (2017-06-06)\n\nFix bug with web storage index serialization/deserialization.\n\n!! 0.0.2 (2017-06-02)\n\nAdded stashing away current index in web storage to avoid repeated index creation/cut down on index creation time.\n\n!! 0.0.1 (2017-02-27)\n\nBasic full-text search functionality.\n"
        },
        "$:/plugins/hoelzro/full-text-search/hooks.js": {
            "title": "$:/plugins/hoelzro/full-text-search/hooks.js",
            "text": "\"use strict\";\n/*\\\ntitle: $:/plugins/hoelzro/full-text-search/hooks.js\ntype: text/vnd.tiddlywiki\nmodule-type: startup\n\n\\*/\nvar SaveTiddlerHook;\n(function (SaveTiddlerHook) {\n    var RELATED_TERMS_TIDDLER = '$:/plugins/hoelzro/full-text-search/RelatedTerms.json';\n    var FUZZY_SEARCH_TIDDLER = '$:/plugins/hoelzro/full-text-search/EnableFuzzySearching';\n    var STATE_TIDDLER = '$:/temp/FTS-state';\n    function startup() {\n        var _a = require('$:/plugins/hoelzro/full-text-search/shared-index.js'), updateTiddler = _a.updateTiddler, getIndex = _a.getIndex, clearIndex = _a.clearIndex;\n        var cache = require('$:/plugins/hoelzro/full-text-search/cache.js');\n        var logger = new $tw.utils.Logger('full-text-search');\n        $tw.wiki.addEventListener('change', function (changes) {\n            var index = getIndex();\n            var isIndexDirty = false;\n            for (var title in changes) {\n                if (title == RELATED_TERMS_TIDDLER || title == FUZZY_SEARCH_TIDDLER) {\n                    clearIndex();\n                    var stateTiddler = $tw.wiki.getTiddler(STATE_TIDDLER);\n                    if (stateTiddler && stateTiddler.fields.text != 'uninitialized') {\n                        logger.alert('A configuration change occurred that has invalidated your FTS index; please rebuild the index from the control panel in order to use full text search');\n                    }\n                    $tw.wiki.addTiddler(new $tw.Tiddler(stateTiddler, { text: 'uninitialized' }, $tw.wiki.getModificationFields()));\n                    cache.invalidate();\n                }\n                if (!index) {\n                    continue;\n                }\n                if ($tw.wiki.isSystemTiddler(title)) {\n                    continue;\n                }\n                var change = changes[title];\n                if (change.modified) {\n                    var tiddler = $tw.wiki.getTiddler(title);\n                    if (tiddler !== undefined) {\n                        var type = tiddler.fields.type || 'text/vnd.tiddlywiki';\n                        if (!type.startsWith('text/')) {\n                            continue;\n                        }\n                        if ('draft.of' in tiddler.fields) {\n                            continue;\n                        }\n                        isIndexDirty = true;\n                        updateTiddler(index, tiddler);\n                    }\n                }\n                else { // change.deleted\n                    isIndexDirty = true;\n                    index.remove({ title: title });\n                }\n            }\n            // Since actual changes are happening to lunr data structures outside of\n            // TiddlyWiki, we need to tell TiddlyWiki to rerender the page and any\n            // tiddlers whose contents may have changed due to the change in the index\n            if (isIndexDirty) {\n                var stateTiddler = $tw.wiki.getTiddler(STATE_TIDDLER);\n                $tw.wiki.addTiddler(stateTiddler);\n            }\n        });\n    }\n    SaveTiddlerHook.startup = startup;\n})(SaveTiddlerHook || (SaveTiddlerHook = {}));\nmodule.exports = SaveTiddlerHook;\n// vim:sts=4:sw=4\n",
            "type": "text/vnd.tiddlywiki",
            "module-type": "startup"
        },
        "$:/plugins/hoelzro/full-text-search/index-worker.js": {
            "title": "$:/plugins/hoelzro/full-text-search/index-worker.js",
            "text": "\"use strict\";\n/*\\\ntitle: $:/plugins/hoelzro/full-text-search/index-worker.js\ntype: application/javascript\nmodule-type: library\n\n\\*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\n(function () {\n    return __awaiter(this, void 0, void 0, function () {\n        function getNextMessage() {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, new Promise(function (resolve, reject) {\n                            onmessage = function (msg) {\n                                onmessage = function () { };\n                                resolve(msg.data);\n                            };\n                        })];\n                });\n            });\n        }\n        function requireFromPage(name, sandbox) {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    postMessage({\n                        type: 'require',\n                        name: name\n                    });\n                    return [2 /*return*/, getNextMessage().then(function (msg) {\n                            var mod = { exports: {} };\n                            self['module'] = mod;\n                            self['exports'] = mod.exports;\n                            if (sandbox != null) {\n                                for (var k in sandbox) {\n                                    if (sandbox.hasOwnProperty(k)) {\n                                        self[k] = sandbox[k];\n                                    }\n                                }\n                            }\n                            importScripts(msg);\n                            if (sandbox != null) {\n                                for (var k in sandbox) {\n                                    if (sandbox.hasOwnProperty(k)) {\n                                        delete self[k];\n                                    }\n                                }\n                            }\n                            delete self['module'];\n                            delete self['exports'];\n                            return mod.exports;\n                        })];\n                });\n            });\n        }\n        function getRelatedTerms() {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            postMessage({\n                                type: 'getRelatedTerms'\n                            });\n                            return [4 /*yield*/, getNextMessage()];\n                        case 1: return [2 /*return*/, _a.sent()];\n                    }\n                });\n            });\n        }\n        function getFuzzySetting() {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            postMessage({\n                                type: 'getFuzzySetting'\n                            });\n                            return [4 /*yield*/, getNextMessage()];\n                        case 1: return [2 /*return*/, _a.sent()];\n                    }\n                });\n            });\n        }\n        function readTiddlers() {\n            return __asyncGenerator(this, arguments, function readTiddlers_1() {\n                var msg;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            postMessage({ type: 'sendTiddlers' });\n                            return [4 /*yield*/, __await(getNextMessage())];\n                        case 1:\n                            msg = _a.sent();\n                            _a.label = 2;\n                        case 2:\n                            if (!(msg != null)) return [3 /*break*/, 6];\n                            return [4 /*yield*/, __await(JSON.parse(msg))];\n                        case 3: return [4 /*yield*/, _a.sent()];\n                        case 4:\n                            _a.sent();\n                            return [4 /*yield*/, __await(getNextMessage())];\n                        case 5:\n                            msg = _a.sent();\n                            return [3 /*break*/, 2];\n                        case 6: return [2 /*return*/];\n                    }\n                });\n            });\n        }\n        var e_1, _a, lunr, lunrMutable, generateQueryExpander, relatedTerms, fuzzySetting, expandQuery, builder, stemmer, count, previousUpdate, _b, _c, tiddlerFields, fields, now, e_1_1;\n        return __generator(this, function (_d) {\n            switch (_d.label) {\n                case 0: return [4 /*yield*/, requireFromPage('$:/plugins/hoelzro/full-text-search/lunr.min.js')];\n                case 1:\n                    lunr = _d.sent();\n                    return [4 /*yield*/, requireFromPage('$:/plugins/hoelzro/full-text-search/lunr-mutable.js', {\n                            require: function (modName) {\n                                if (modName != '$:/plugins/hoelzro/full-text-search/lunr.min.js') {\n                                    throw new Error(\"Invalid module name for lunr-mutable!\");\n                                }\n                                return lunr;\n                            }\n                        })];\n                case 2:\n                    lunrMutable = _d.sent();\n                    return [4 /*yield*/, requireFromPage('$:/plugins/hoelzro/full-text-search/query-expander.js')];\n                case 3:\n                    generateQueryExpander = (_d.sent()).generateQueryExpander;\n                    return [4 /*yield*/, getRelatedTerms()];\n                case 4:\n                    relatedTerms = _d.sent();\n                    return [4 /*yield*/, getFuzzySetting()];\n                case 5:\n                    fuzzySetting = _d.sent();\n                    expandQuery = generateQueryExpander(lunr, relatedTerms);\n                    builder = new lunrMutable.Builder();\n                    if (fuzzySetting == 'yes') {\n                        stemmer = function (unstemmedToken) {\n                            var stemmedToken = lunr.stemmer(unstemmedToken.clone());\n                            return [unstemmedToken, stemmedToken];\n                        };\n                        lunr.Pipeline.registerFunction(stemmer, 'stemmedAndUnstemmed');\n                    }\n                    else {\n                        stemmer = lunr.stemmer;\n                    }\n                    builder.pipeline.add(lunr.trimmer, lunr.stopWordFilter, expandQuery, stemmer);\n                    builder.searchPipeline.add(lunr.stemmer);\n                    count = 0;\n                    previousUpdate = new Date();\n                    // XXX configurable fields?\n                    builder.field('title');\n                    builder.field('tags');\n                    builder.field('text');\n                    builder.ref('title');\n                    _d.label = 6;\n                case 6:\n                    _d.trys.push([6, 11, 12, 17]);\n                    _b = __asyncValues(readTiddlers());\n                    _d.label = 7;\n                case 7: return [4 /*yield*/, _b.next()];\n                case 8:\n                    if (!(_c = _d.sent(), !_c.done)) return [3 /*break*/, 10];\n                    tiddlerFields = _c.value;\n                    fields = {\n                        title: tiddlerFields.title\n                    };\n                    if ('text' in tiddlerFields) {\n                        fields.text = tiddlerFields.text;\n                    }\n                    if ('tags' in tiddlerFields) {\n                        fields.tags = tiddlerFields.tags.join(' ');\n                    }\n                    builder.add(fields);\n                    count++;\n                    now = new Date();\n                    if ((now.getTime() - previousUpdate.getTime()) > 200) {\n                        previousUpdate = now;\n                        postMessage({ type: 'progress', count: count });\n                    }\n                    _d.label = 9;\n                case 9: return [3 /*break*/, 7];\n                case 10: return [3 /*break*/, 17];\n                case 11:\n                    e_1_1 = _d.sent();\n                    e_1 = { error: e_1_1 };\n                    return [3 /*break*/, 17];\n                case 12:\n                    _d.trys.push([12, , 15, 16]);\n                    if (!(_c && !_c.done && (_a = _b[\"return\"]))) return [3 /*break*/, 14];\n                    return [4 /*yield*/, _a.call(_b)];\n                case 13:\n                    _d.sent();\n                    _d.label = 14;\n                case 14: return [3 /*break*/, 16];\n                case 15:\n                    if (e_1) throw e_1.error;\n                    return [7 /*endfinally*/];\n                case 16: return [7 /*endfinally*/];\n                case 17:\n                    postMessage({ type: 'index', index: JSON.stringify(builder.build()) });\n                    close();\n                    return [2 /*return*/];\n            }\n        });\n    });\n})()[\"catch\"](function (err) {\n    postMessage({ type: 'error', error: err.toString() });\n});\n// vim:sts=4:sw=4\n",
            "type": "application/javascript",
            "module-type": "library"
        },
        "$:/plugins/hoelzro/full-text-search/license": {
            "title": "$:/plugins/hoelzro/full-text-search/license",
            "type": "text/vnd.tiddlywiki",
            "text": "```\nCopyright 2017-2018 Rob Hoelz\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n```\n"
        },
        "$:/plugins/hoelzro/full-text-search/query-expander.js": {
            "title": "$:/plugins/hoelzro/full-text-search/query-expander.js",
            "text": "\"use strict\";\n/*\\\ntitle: $:/plugins/hoelzro/full-text-search/query-expander.js\ntype: application/javascript\nmodule-type: library\n\n\\*/\nvar QueryExpander;\n(function (QueryExpander) {\n    if (!('asyncIterator' in Symbol)) {\n        Symbol.asyncIterator = Symbol[\"for\"]('Symbol.asyncIterator');\n    }\n    function buildAliasTree(lunr, listOfAliases) {\n        var topTree = {};\n        for (var _i = 0, listOfAliases_1 = listOfAliases; _i < listOfAliases_1.length; _i++) {\n            var aliases = listOfAliases_1[_i];\n            for (var i = 0; i < aliases.length; i++) {\n                // XXX do you want to run the full pipeline? what if we tweak the tokenizer?\n                var iTokens = lunr.tokenizer(aliases[i]).map(function (token) { return token.toString(); });\n                for (var j = 0; j < aliases.length; j++) {\n                    if (i == j) {\n                        continue;\n                    }\n                    var jTokens = lunr.tokenizer(aliases[j]).map(function (token) { return token.toString(); });\n                    var tree = topTree;\n                    for (var _a = 0, jTokens_1 = jTokens; _a < jTokens_1.length; _a++) {\n                        var token = jTokens_1[_a];\n                        if (!(token in tree)) {\n                            tree[token] = {};\n                        }\n                        tree = tree[token];\n                    }\n                    if (!('.expansion' in tree)) {\n                        tree['.expansion'] = [];\n                    }\n                    for (var _b = 0, iTokens_1 = iTokens; _b < iTokens_1.length; _b++) {\n                        var token = iTokens_1[_b];\n                        tree['.expansion'].push(token);\n                    }\n                }\n            }\n        }\n        return topTree;\n    }\n    function generateQueryExpander(lunr, relatedTerms) {\n        var treeTop = buildAliasTree(lunr, relatedTerms);\n        var currentTree = treeTop;\n        var expandQuery = function expandQuery(token) {\n            if (token.metadata.index == 0) {\n                currentTree = treeTop;\n            }\n            var tokenStr = token.toString();\n            if (currentTree.hasOwnProperty(tokenStr)) {\n                currentTree = currentTree[tokenStr];\n                if ('.expansion' in currentTree) {\n                    var originalToken = token;\n                    var tokens = [originalToken];\n                    var _loop_1 = function (token_1) {\n                        tokens.push(originalToken.clone(function (str, meta) {\n                            return token_1;\n                        }));\n                    };\n                    for (var _i = 0, _a = currentTree['.expansion']; _i < _a.length; _i++) {\n                        var token_1 = _a[_i];\n                        _loop_1(token_1);\n                    }\n                    return tokens;\n                }\n            }\n            else {\n                currentTree = treeTop;\n            }\n            return token;\n        };\n        lunr.Pipeline.registerFunction(expandQuery, 'expandQuery');\n        return expandQuery;\n    }\n    QueryExpander.generateQueryExpander = generateQueryExpander;\n})(QueryExpander || (QueryExpander = {}));\nmodule.exports = QueryExpander;\n// vim:sts=4:sw=4\n",
            "type": "application/javascript",
            "module-type": "library"
        },
        "$:/plugins/hoelzro/full-text-search/readme": {
            "title": "$:/plugins/hoelzro/full-text-search/readme",
            "type": "text/vnd.tiddlywiki",
            "text": "! Purpose\n\nProvides an alternative search result list that orders results by search relevance and ignores differences in word forms (ex. //tag// vs //tags//).\n\nOn my personal wiki, I have the problem that there are terms I use across a lot of tiddlers, and sometimes I'll use different forms (such as the aforementioned //tag// vs //tags//).  I wanted a plugin to allow me to find the tiddler I'm looking for quickly and didn't require me to worry about how I declined a noun or inflected a verb - so I wrote this plugin, which provides an alternative search list powered by [[lunr.js|https://lunrjs.com/]].\n\nI use it pretty much every day, but there's definitely room for improvement.  Please [[let me know|https://github.com/hoelzro/tw-full-text-search/issues]] if there are any bugs!\n\n! Demo\n\nPlease check out the [[examples|https://hoelz.ro/files/fts.html#Query Examples]] on the demo wiki.\n\n! Usage\n\nEach time you start a new ~TiddlyWiki session, you'll need to build the FTS index.  You can do this from a tab in the [[$:/ControlPanel]].  Older versions of the index are retained in web storage, so it should be pretty quick after the first time!  After you build the index, you can just search as you would normally.\n\n! Source Code/Reporting Bugs\n\nIf you want to help out, you can report bugs or check out the source for this plugin (or its dependency, the progress bar plugin) on ~GitHub:\n\nhttps://github.com/hoelzro/tw-full-text-search/\n\nhttps://github.com/hoelzro/tw-progress-bar\n\nRequires [[$:/plugins/hoelzro/progress-bar]] to display progress when generating the index.\n"
        },
        "$:/plugins/hoelzro/full-text-search/search-results": {
            "title": "$:/plugins/hoelzro/full-text-search/search-results",
            "type": "text/vnd.tiddlywiki",
            "tags": "$:/tags/SearchResults",
            "caption": "Full Text Results",
            "text": "\\define searchResults()\n<$set name=\"resultCount\" value=\"\"\"<$count filter=\"[ftsearch{$(searchTiddler)$}ftsfeedback<ftsFeedback>]\"/>\"\"\">\n{{$:/language/Search/Matches}}\n</$set>\n\n<$list filter=\"[ftsearch{$(searchTiddler)$}ftsfeedback<ftsFeedback>]\" template=\"$:/core/ui/ListItemTemplate\"/>\n\\end\n\n<$set name=\"state\" value=\"$:/temp/FTS-state\">\n<$reveal type=\"match\" state=<<state>> text=\"initialized\">\n<$set name=\"ftsFeedback\" value=<<qualify \"$:/temp/fts-feedback\">> >\n<<searchResults>>\n\n<$list variable=\"index\" filter=\"[title<ftsFeedback>indexes[]]\">\n\n<$set name=\"message\" tiddler=<<ftsFeedback>> index=<<index>> >\n<strong style=\"white-space: normal\"><<message>></strong>\n</$set>\n</$list>\n</$set>\n\n</$reveal>\n\n<$reveal type=\"match\" state=<<state>> text=\"uninitialized\">\nSearch index not initialized; please <$button>\n  Click here to generate the index\n  <$fts-action-generate-index />\n</$button>\n\n</$reveal>\n<$reveal type=\"match\" state=<<state>> text=\"initializing\">\nGenerating index...\n\n<$hoelzro-progressbar current={{$:/temp/FTS-state!!progressCurrent}} total={{$:/temp/FTS-state!!progressTotal}} />\n</$reveal>\n</$set>\n"
        },
        "$:/plugins/hoelzro/full-text-search/shared-index.js": {
            "title": "$:/plugins/hoelzro/full-text-search/shared-index.js",
            "text": "\"use strict\";\n/*\\\ntitle: $:/plugins/hoelzro/full-text-search/shared-index.js\ntype: application/javascript\nmodule-type: library\n\n\\*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar SharedIndex;\n(function (SharedIndex) {\n    var RELATED_TERMS_TIDDLER = '$:/plugins/hoelzro/full-text-search/RelatedTerms.json';\n    var FUZZY_SEARCH_TIDDLER = '$:/plugins/hoelzro/full-text-search/EnableFuzzySearching';\n    var lunr = require('$:/plugins/hoelzro/full-text-search/lunr.min.js');\n    var lunrMutable = require('$:/plugins/hoelzro/full-text-search/lunr-mutable.js');\n    // XXX import?\n    var generateQueryExpander = require('$:/plugins/hoelzro/full-text-search/query-expander.js').generateQueryExpander;\n    lunr.utils.warn = function () { };\n    var index = null;\n    function tick() {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (resolve) {\n                        $tw.utils.nextTick(resolve);\n                    })];\n            });\n        });\n    }\n    function buildIndexIncremental(wiki, tiddlers, rebuilding, progressCallback) {\n        return __awaiter(this, void 0, void 0, function () {\n            var builder, relatedTerms, expandQuery, stemmer, i, _i, tiddlers_1, title, tiddler, type;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        builder = null;\n                        if (rebuilding || !index) {\n                            relatedTerms = $tw.wiki.getTiddlerDataCached(RELATED_TERMS_TIDDLER, []);\n                            relatedTerms = relatedTerms.map($tw.utils.parseStringArray);\n                            expandQuery = generateQueryExpander(lunr, relatedTerms);\n                            builder = new lunrMutable.Builder();\n                            stemmer = void 0;\n                            if (wiki.getTiddlerText(FUZZY_SEARCH_TIDDLER, '') == 'yes') {\n                                stemmer = function (unstemmedToken) {\n                                    var stemmedToken = lunr.stemmer(unstemmedToken.clone());\n                                    return [unstemmedToken, stemmedToken];\n                                };\n                                lunr.Pipeline.registerFunction(stemmer, 'stemmedAndUnstemmed');\n                            }\n                            else {\n                                stemmer = lunr.stemmer;\n                            }\n                            builder.pipeline.add(lunr.trimmer, lunr.stopWordFilter, expandQuery, stemmer);\n                            builder.searchPipeline.add(lunr.stemmer);\n                            // XXX configurable fields?\n                            builder.field('title');\n                            builder.field('tags');\n                            builder.field('text');\n                            builder.ref('title');\n                        }\n                        else {\n                            builder = index.builder;\n                        }\n                        i = 0;\n                        _i = 0, tiddlers_1 = tiddlers;\n                        _a.label = 1;\n                    case 1:\n                        if (!(_i < tiddlers_1.length)) return [3 /*break*/, 5];\n                        title = tiddlers_1[_i];\n                        tiddler = wiki.getTiddler(title);\n                        i++;\n                        if (tiddler === undefined) { // avoid drafts that were open when we started\n                            return [3 /*break*/, 4];\n                        }\n                        type = tiddler.fields.type || 'text/vnd.tiddlywiki';\n                        if (!type.startsWith('text/')) {\n                            return [3 /*break*/, 4];\n                        }\n                        if ('draft.of' in tiddler.fields) {\n                            return [3 /*break*/, 4];\n                        }\n                        updateTiddler(builder, tiddler);\n                        return [4 /*yield*/, progressCallback(i)];\n                    case 2:\n                        _a.sent();\n                        return [4 /*yield*/, tick()];\n                    case 3:\n                        _a.sent();\n                        _a.label = 4;\n                    case 4:\n                        _i++;\n                        return [3 /*break*/, 1];\n                    case 5:\n                        index = builder.build();\n                        return [4 /*yield*/, progressCallback(tiddlers.length)];\n                    case 6:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    }\n    function buildIndexWorker(wiki, tiddlers, progressCallback) {\n        return __awaiter(this, void 0, void 0, function () {\n            var workerSource, worker, relatedTerms, expandQuery, stemmer, workerFinished;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        workerSource = wiki.getTiddlerText('$:/plugins/hoelzro/full-text-search/index-worker.js');\n                        worker = new Worker(URL.createObjectURL(new Blob([workerSource])));\n                        relatedTerms = $tw.wiki.getTiddlerDataCached(RELATED_TERMS_TIDDLER, []);\n                        relatedTerms = relatedTerms.map($tw.utils.parseStringArray);\n                        expandQuery = generateQueryExpander(lunr, relatedTerms);\n                        stemmer = function (unstemmedToken) {\n                            var stemmedToken = lunr.stemmer(unstemmedToken.clone());\n                            return [unstemmedToken, stemmedToken];\n                        };\n                        lunr.Pipeline.registerFunction(stemmer, 'stemmedAndUnstemmed');\n                        workerFinished = new Promise(function (resolve, reject) {\n                            worker.onmessage = function (msg) {\n                                var payload = msg.data;\n                                if (payload.type == 'require') {\n                                    var moduleName = payload.name;\n                                    var moduleSource = wiki.getTiddlerText(moduleName);\n                                    worker.postMessage(URL.createObjectURL(new Blob([moduleSource])));\n                                }\n                                else if (payload.type == 'index') {\n                                    index = lunrMutable.Index.load(JSON.parse(payload.index));\n                                    resolve();\n                                }\n                                else if (payload.type == 'sendTiddlers') {\n                                    for (var _i = 0, tiddlers_2 = tiddlers; _i < tiddlers_2.length; _i++) {\n                                        var title = tiddlers_2[_i];\n                                        var tiddler = wiki.getTiddler(title);\n                                        if (tiddler === undefined) { // avoid drafts that were open when we started\n                                            continue;\n                                        }\n                                        var type = tiddler.fields.type || 'text/vnd.tiddlywiki';\n                                        if (!type.startsWith('text/')) {\n                                            continue;\n                                        }\n                                        worker.postMessage(JSON.stringify(tiddler.fields));\n                                    }\n                                    worker.postMessage(null);\n                                }\n                                else if (payload.type == 'progress') {\n                                    progressCallback(payload.count);\n                                }\n                                else if (payload.type == 'getRelatedTerms') {\n                                    worker.postMessage(relatedTerms);\n                                }\n                                else if (payload.type == 'getFuzzySetting') {\n                                    var fuzzySetting = wiki.getTiddlerText(FUZZY_SEARCH_TIDDLER, '');\n                                    worker.postMessage(fuzzySetting);\n                                }\n                                else if (payload.type == 'error') {\n                                    reject(payload.error);\n                                }\n                            };\n                        });\n                        return [4 /*yield*/, workerFinished];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, progressCallback(tiddlers.length)];\n                    case 2:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    }\n    function buildIndex(wiki, tiddlers, isFresh, progressCallback) {\n        return __awaiter(this, void 0, void 0, function () {\n            var e_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!($tw.browser && isFresh)) return [3 /*break*/, 4];\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, buildIndexWorker(wiki, tiddlers, progressCallback)];\n                    case 2: return [2 /*return*/, _a.sent()];\n                    case 3:\n                        e_1 = _a.sent();\n                        console.log(e_1);\n                        console.log('falling back to incremental indexing...');\n                        return [3 /*break*/, 4];\n                    case 4: return [4 /*yield*/, buildIndexIncremental(wiki, tiddlers, isFresh, progressCallback)];\n                    case 5: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    }\n    SharedIndex.buildIndex = buildIndex;\n    function updateTiddler(builder, tiddler) {\n        var fields = {\n            title: tiddler.fields.title\n        };\n        if ('text' in tiddler.fields) {\n            fields.text = tiddler.fields.text;\n        }\n        if ('tags' in tiddler.fields) {\n            fields.tags = tiddler.fields.tags.join(' ');\n        }\n        builder.remove(fields);\n        builder.add(fields);\n    }\n    SharedIndex.updateTiddler = updateTiddler;\n    function getIndex() {\n        return index;\n    }\n    SharedIndex.getIndex = getIndex;\n    ;\n    function clearIndex() {\n        index = null;\n    }\n    SharedIndex.clearIndex = clearIndex;\n    function load(data) {\n        index = lunrMutable.Index.load(data);\n    }\n    SharedIndex.load = load;\n})(SharedIndex || (SharedIndex = {}));\nmodule.exports = SharedIndex;\n// vim:sts=4:sw=4\n",
            "type": "application/javascript",
            "module-type": "library"
        },
        "$:/temp/FTS-state": {
            "title": "$:/temp/FTS-state",
            "type": "text/vnd.tiddlywiki",
            "text": "uninitialized"
        }
    }
}



$:/plugins/hoelzro/full-text-search/EnableFuzzySearching

yes



$:/plugins/hoelzro/progress-bar

{
    "tiddlers": {
        "$:/plugins/hoelzro/progress-bar/history": {
            "title": "$:/plugins/hoelzro/progress-bar/history",
            "type": "text/vnd.tiddlywiki",
            "text": "! Release History\n\n!! 0.0.1\n\nBasic progressbar widget.\n"
        },
        "$:/plugins/hoelzro/progress-bar/license": {
            "title": "$:/plugins/hoelzro/progress-bar/license",
            "type": "text/vnd.tiddlywiki",
            "text": "```\nCopyright 2017 Rob Hoelz\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n```\n"
        },
        "$:/plugins/hoelzro/progress-bar/progress-bar.js": {
            "title": "$:/plugins/hoelzro/progress-bar/progress-bar.js",
            "text": "/*\\\ntitle: $:/plugins/hoelzro/progress-bar/progress-bar.js\ntype: application/javascript\nmodule-type: widget\n\n\\*/\n(function() {\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\nvar Widget = require('$:/core/modules/widgets/widget.js').widget;\n\nvar ProgressBarWidget = function ProgressBarWidget(parseTreeNode, options) {\n    this.initialise(parseTreeNode, options);\n};\n\nProgressBarWidget.prototype = new Widget();\n\nProgressBarWidget.prototype.render = function render(parent, nextSibling) {\n    this.parentDomNode = parent;\n    this.computeAttributes();\n    this.execute();\n\n    var node = this.document.createElement('div');\n    node.style.border = 'thin solid black';\n    var filledIn = this.document.createElement('div');\n    filledIn.style.height = '10px';\n    filledIn.style.backgroundColor = 'green';\n    filledIn.style.width = Math.round(100 * this.current / this.total) + '%';\n    node.appendChild(filledIn);\n    parent.insertBefore(node, nextSibling);\n    this.renderChildren(node, null);\n    this.domNodes.push(node);\n};\n\nProgressBarWidget.prototype.execute = function execute() {\n    this.current = this.getAttribute('current');\n    this.total = this.getAttribute('total');\n    this.makeChildWidgets();\n};\n\nProgressBarWidget.prototype.refresh = function refresh(changedTiddlers) {\n    var changedAttributes = this.computeAttributes();\n    if(changedAttributes.current || changedAttributes.total) {\n        this.refreshSelf();\n        return true;\n    }\n    return this.refreshChildren(changedTiddlers);\n};\n\nexports['hoelzro-progressbar'] = ProgressBarWidget;\n\n})();\n",
            "type": "application/javascript",
            "module-type": "widget"
        },
        "$:/plugins/hoelzro/progress-bar/readme": {
            "title": "$:/plugins/hoelzro/progress-bar/readme",
            "type": "text/vnd.tiddlywiki",
            "text": "This plugin provides a simple progress bar widget.\n\n! Parameters\n\n* `current` - the current progress of the progressbar.\n* `total` - the total value that represents completion for this progressbar.\n\n! Example\n\n```\n<$hoelzro-progressbar current={{!!current}} total={{!!total}} />\n```\n\n! Potential Future Enhancements\n\nThe coloration and size are currently hardcoded, and the progressbar\ndoesn't support animation.  Contributions adding these are most welcome!\n"
        }
    }
}



$:/positivesigner/base-install

<$vars cur_title=<<currentTiddler>> >
Optional card groups:

<$list variable=cur_entry filter="[prefix[$:/positivesigner/]is[tag]!suffix[/base-install]!has[draft-of]sort[]]">

<<cur_entry>><$list
variable=missing_tag filter="[<cur_title>!tag<cur_entry>]">
- add tag to this base-install card
</$list><!--missing_tag-->
</$list><!--cur_entry-->

---
Base-Install card group:

<$list variable=filter_text filter="[<cur_title>split[Draft of ']join[]split[']join[]]">
<$list variable=cur_card filter="[tag<filter_text>!match<cur_title>sort[]]">
<$list variable=filter_card_group filter="[<cur_card>!prefix[$:/positivesigner/]] [<cur_card>prefix[$:/positivesigner/]!is[tag]]">

<$link to=<<cur_card>> />
</$list><!--filter_card_group-->
</$list><!--cur_card-->
</$list><!--filter_text-->
</$vars><!--cur_card-->



$:/positivesigner/base-install/currentCard

\define currentCard()
[[$(currentTiddler)$]get[draft.of]else[$(currentTiddler)$]]
\end





$:/positivesigner/base-install/keyboard action SaveAllChanges

\define ExportSaveAll(ur_filename, ur_stamp, ur_save_wiki_extension, ur_save_export_html)
<$action-setfield $tiddler="$:/state/sidebar" text="no"/>
<$action-setfield $tiddler="$:/state/popup/DivPopTitle" text=""/>
<$action-setfield $tiddler="$:/state/tab/sidebar--595412856" text="$:/core/ui/SideBar/More"/>
<$action-sendmessage $message="tm-save-wiki" filename="WikiMove_$ur_filename$-stamp-$ur_stamp$$ur_save_wiki_extension$"
/>
<$list variable=save_export_html filter="[[$ur_save_export_html$]match[1]]">
<$list variable=save_as_html_path filter="[[$ur_filename$]split[-fslash-src-fslash-]join[-fslash-]addprefix[WikiMove_]addsuffix[-stamp-$ur_stamp$.html]]">
<$action-sendmessage $message="tm-download-file"
$param="$:/core/templates/exporters/StaticRiver" filename=<<save_as_html_path>>
exportFilter="""[all[tiddlers]tag[INDEX]sort[title]][all[tiddlers]!tag[EXT]!tag[INDEX]!tag[META]!tag[MCR]!prefix[Draft of]!is[image]!is[tag]!is[system]sort[title]]"""/>
</$list><!--save_as_html_path-->
</$list><!--save_export_html-->
<$action-sendmessage $message="tm-download-file"
$param="$:/positivesigner/base-install/template ExportAllCode" filename="WikiMove_$ur_filename$-stamp-$ur_stamp$.card.txt" />
\end
<$list variable=save_export_html filter="[{$:/info/url/full}suffix[.htm]count[]] [[$:/positivesigner/base-install/parm SkipSaveExportHTML]is[tiddler]count[]multiply[-1]] +[sum[]]">
<$list variable=save_wiki_extension filter="[{$:/info/url/full}split[.]last[]addprefix[.]]">
<$list variable=save_as_file_name filter="[{$:/info/url/full}split[file:///]join[]split[:]join[-colon-]split[.html]join[]split[.htm]join[]split[%20]join[ ]split[/]join[-fslash-]split[%]join[-percent-]]">
<$macrocall $name="ExportSaveAll" ur_filename=<<save_as_file_name>> ur_stamp=<<now format:"YYYYm0MMd0DDam0hhm0mms0ss">> ur_save_wiki_extension=<<save_wiki_extension>> ur_save_export_html=<<save_export_html>> />
</$list><!--save_as_file_name-->
</$list><!--save_wiki_extension-->
</$list><!--save_export_html-->




$:/positivesigner/base-install/Remove Modules

\define useraction.review_positivesigner_modules()
<$vars positivesigner_prefix="$:/positivesigner/">

<$button>
<$list variable=cur_card filter="[prefix<positivesigner_prefix>]">
<$action-deletetiddler $tiddler=<<cur_card>> />
</$list><!--cur_card-->
<$list variable=cur_tag filter=<<assistant.list_prefixed_tags "positivesigner_prefix">> >
<$list variable=cur_card filter="[tag<cur_tag>!prefix[$:]]">
<$action-deletetiddler $tiddler=<<cur_card>> />
</$list><!--cur_card-->
</$list><!--cur_tag-->
Delete positivesigner modules
</$button>

<$list variable=cur_card filter="[prefix<positivesigner_prefix>]">

<$link to=<<cur_card>> />
</$list><!--cur_card-->

<$list variable=cur_tag filter=<<assistant.list_prefixed_tags "positivesigner_prefix">> >
<$list variable=cur_card filter="[tag<cur_tag>!prefix[$:]]">

<$link to=<<cur_card>> />
</$list><!--cur_card-->
</$list><!--cur_tag-->

</$vars><!--positivesigner_prefix-->
\end

\define assistant.list_prefixed_tags(ur_prefix)
[tags[]prefix[$($ur_prefix$)$]each:value[]]
\end

<<useraction.review_positivesigner_modules>>




$:/positivesigner/base-install/template ExportAllCode

\define renderContent()
<$list variable=cur_tip_pk filter="[all[tiddlers]!has[draft.of]!is[image]has[tags]!prefix[undefined]] [!prefix[$]!has[draft.of]!is[image]!has[tags]!prefix[undefined]] +[sort[title]]">
<hr>
<h2><$link to=<<cur_tip_pk>> /></h2>
<$list variable=cur_tip_text filter="[<cur_tip_pk>get[text]]">
<$codeblock code=<<cur_tip_text>> />
</$list><!--cur_tip_text-->
</$list><!--cur_tip_pk-->
\end
<<renderContent>>




$:/positivesigner/div-pop

<$set name=cur_title filter=<<currentCard>> >
<$list variable=missing_tag filter="[prefix<cur_title>!tag<cur_title>]">
<$link to=<<missing_tag>> /> missing tag
</$list><!--missing_tag-->

<$list variable=filter_text filter="[<cur_title>split[Draft of ']join[]split[']join[]]">
<$list variable=cur_card filter="[tag<filter_text>!match<cur_title>!suffix[/base-install]sort[]]">

<$link to=<<cur_card>> />
</$list><!--cur_card-->
</$list><!--filter_text-->
</$set><!--cur_title-->



$:/positivesigner/div-pop/DivPop btn

<$list variable=cur_card filter="[all[current]]">
<$button class=<<tv-config-toolbar-class>> >
<$action-setfield $tiddler="$:/state/sidebar" text="yes"/>
<$action-setfield $tiddler="$:/state/popup/DivPopTitle" text=<<cur_card>>/>
<$action-sendmessage $message="tm-close-tiddler" $param="pop_right"/>
<$list filter="[<tv-config-toolbar-icons>match[yes]]">
{{$:/positivesigner/div-pop/DivPop.svg}}
</$list>
<$list filter="[<tv-config-toolbar-text>match[yes]]">
<span class="tc-btn-text"><$text text="Popup over Sidebar"/></span>
</$list>
</$button>
</$list>



$:/positivesigner/div-pop/DivPop glbl

<$list variable=cur_divpop_card filter="[{$:/state/popup/DivPopTitle}is[tiddler]]">
<div style="
position: fixed;
top: 0px;
right: 0px;
width: 350px;
border: 3px solid;
background: white;
bottom: 0%;
">
<div style="overflow-y: scroll; height: 100%;">
<$button>
<$action-setfield $tiddler="$:/state/sidebar" text="no"/>
<$action-setfield $tiddler="$:/state/popup/DivPopTitle" text=""/>
close
</$button>
&nbsp;&nbsp;&nbsp;<$reveal type="match" state="$:/state/popup/$ur_pk$" text="show"><$button set="$:/state/popup/$ur_pk$" setTo="hide">show</$button>&nbsp;&nbsp;&nbsp;<$link to=<<cur_divpop_card>> ><<cur_divpop_card>>
</$link>
<$list variable=cur_text filter="[<cur_divpop_card>get[text]]">
<$codeblock code=<<cur_text>> /></$list>
</$reveal>
<$reveal type="nomatch" state="$:/state/popup/$ur_pk$" text="show"><$button set="$:/state/popup/$ur_pk$" setTo="show">code</$button>&nbsp;&nbsp;&nbsp;<$link to=<<cur_divpop_card>> ><<cur_divpop_card>>
</$link>
<$tiddler tiddler=<<cur_divpop_card>> >
<$transclude mode="block" />
</$tiddler>
</$reveal>
</div>
</div>
</$list>




$:/positivesigner/full-text-search

<$set name=cur_title filter=<<currentCard>> >
<$list variable=missing_tag filter="[prefix<cur_title>!tag<cur_title>]">
<$link to=<<missing_tag>> /> missing tag
</$list><!--missing_tag-->

<$list variable=filter_text filter="[<cur_title>split[Draft of ']join[]split[']join[]]">
<$list variable=cur_card filter="[tag<filter_text>!match<cur_title>!suffix[/base-install]sort[]]">

<$link to=<<cur_card>> />
</$list><!--cur_card-->
</$list><!--filter_text-->
</$set><!--cur_title-->



$:/positivesigner/full-text-search/glbl_search_box

\define glbl_text_search()
<div class="tc-sidebar-lists">

<$set name="searchTiddler" value="$:/temp/search">
<div class="tc-search">
<$edit-text tiddler="$:/temp/search" type="search" tag="input" focus={{$:/config/Search/AutoFocus}} focusPopup=<<qualify "$:/state/popup/search-dropdown">> class="tc-popup-handle"/>
<$reveal state="$:/temp/search" type="nomatch" text="">
<$button tooltip={{$:/language/Buttons/AdvancedSearch/Hint}} aria-label={{$:/language/Buttons/AdvancedSearch/Caption}} class="tc-btn-invisible">
<$action-setfield $tiddler="$:/temp/advancedsearch" text={{$:/temp/search}}/>
<$action-setfield $tiddler="$:/temp/search" text=""/>
<$action-navigate $to="$:/AdvancedSearch"/>
{{$:/core/images/advanced-search-button}}
</$button>
<$button class="tc-btn-invisible">
<$action-setfield $tiddler="$:/temp/search" text="" />
{{$:/core/images/close-button}}
</$button>
<$button popup=<<qualify "$:/state/popup/search-dropdown">> class="tc-btn-invisible">
{{$:/core/images/down-arrow}}
<$list filter="[{$:/temp/search}minlength{$:/config/Search/MinLength}limit[1]]" variable="listItem">
<$set name="resultCount" value="""<$count filter="[!is[system]search{$(searchTiddler)$}]"/>""">
{{$:/language/Search/Matches}}
</$set>
</$list>
</$button>
</$reveal>
<$reveal state="$:/temp/search" type="match" text="">
<$button to="$:/AdvancedSearch" tooltip={{$:/language/Buttons/AdvancedSearch/Hint}} aria-label={{$:/language/Buttons/AdvancedSearch/Caption}} class="tc-btn-invisible">
{{$:/core/images/advanced-search-button}}
</$button>
</$reveal>
</div>

<$reveal tag="div" class="tc-block-dropdown-wrapper" state="$:/temp/search" type="nomatch" text="">

<$reveal tag="div" class="tc-block-dropdown tc-search-drop-down tc-popup-handle" state=<<qualify "$:/state/popup/search-dropdown">> type="nomatch" text="" default="">

<$list filter="[{$:/temp/search}minlength{$:/config/Search/MinLength}limit[1]]" emptyMessage="""<div class="tc-search-results">{{$:/language/Search/Search/TooShort}}</div>""" variable="listItem">

{{$:/core/ui/SearchResults}}

</$list>

</$reveal>

</$reveal>

</$set>

</div>
\end




$:/positivesigner/gcmpr

<$set name=cur_title filter=<<currentCard>> >
<$list variable=missing_tag filter="[prefix<cur_title>!tag<cur_title>]">
<$link to=<<missing_tag>> /> missing tag
</$list><!--missing_tag-->

<$list variable=filter_text filter="[<cur_title>split[Draft of ']join[]split[']join[]]">
<$list variable=cur_card filter="[tag<filter_text>!match<cur_title>!suffix[/base-install]sort[]]">

<$link to=<<cur_card>> />
</$list><!--cur_card-->
</$list><!--filter_text-->
</$set><!--cur_title-->



$:/positivesigner/gcmpr/btn gcmpr card

<<gcmpr_btn_cmp_current>> 




$:/positivesigner/gcmpr/mcr gcmpr_compare_card

\define gcmpr_compare_card(ur_ttb_card)
<$list variable=ttb_card filter="[[$ur_ttb_card$]!match[]]">
<$list variable=compare_card filter="[<ttb_card>addprefix[$:/state/popup/compare-card/]]">
<$link to=<<ttb_card>> />
<<gcmpr_ref_edit_source_text>>
<<gcmpr_ref_copy_over_ttb_card>>
<br>
<$link to=<<compare_card>> />
<<gcmpr_ref_replace_comment_endings>>
<<gcmpr_ref_disp_diff_text>>
<$edit-text autoHeight=no tiddler=<<compare_card>> tag=textarea default="" />
<<gcmpr_ref_disp_textedit_link>>
</$list><!--compare_card-->
</$list><!--ttb_card-->
<!--gcmpr_compare_card-->
\end

\define gcmpr_ref_edit_source_text(ttb_card, compare_card)
<$vars enr_text="text" >
<$list variable=source_text filter="[<ttb_card>get<enr_text>else[]]">
<$button>
<$action-setfield $tiddler=<<compare_card>> text=<<source_text>> />
Copy Source
</$button>
</$list><!--source_text-->
</$vars><!--enr_text-->
<!--gcmpr_ref_edit_source_text-->
\end

\define gcmpr_ref_copy_over_ttb_card(ttb_card, compare_card)
<$vars enr_text="text" >
<$list variable=compare_text filter="[<compare_card>get<enr_text>else[]]">
<$button>
<$action-setfield $tiddler=<<ttb_card>> text=<<compare_text>> />
Overwrite Source
</$button>
</$list><!--compare_text-->
</$vars><!--enr_text-->
<!--gcmpr_ref_copy_over_ttb_card-->
\end

\define gcmpr_ref_replace_comment_endings(ttb_card, compare_card)
<$button>
<$vars comment_flag="--" lit_exclm="!" lit_lt="<" lit_gt=">" enr_text="text" >
<$wikify name=lit_lf text="&#10;">
<$list variable=comment_open_text filter="[<lit_lt>addsuffix<lit_exclm>addsuffix<comment_flag>]">
<$list variable=comment_close_text filter="[<comment_flag>addsuffix<lit_gt>]">
<$list variable=comment_close_replace filter="[<comment_flag>addsuffix<lit_exclm>addsuffix<lit_gt>]">
<$list variable=replace_text filter="[<compare_card>get<enr_text>split<comment_close_text>join<comment_close_replace>addprefix<lit_lf>addprefix<comment_open_text>addsuffix<lit_lf>addsuffix<comment_close_text>]">
<$action-setfield $tiddler=<<compare_card>> text=<<replace_text>> />
</$list><!--replace_text-->
</$list><!--comment_close_replace-->
</$list><!--comment_close_text-->
</$list><!--comment_open_text-->
</$wikify>
</$vars><!--comment_flag, lit_exclm, lit_lt, lit_gt-->
Replace comment endings
</$button><br>
<!--gcmpr_ref_replace_comment_endings-->
\end

\define gcmpr_ref_disp_diff_text()
<$list variable=val_ttb_card filter="[<ttb_card>get[text]!match[]]">
<$list variable=val_compare_card filter="[<compare_card>get[text]!match[]]">
<$diff-text source=<<val_ttb_card>> dest=<<val_compare_card>> />
</$list><!--val_compare_card-->
</$list><!--val_ttb_card-->
<!--gcmpr_ref_disp_diff_text-->
\end

\define gcmpr_ref_disp_textedit_link()
<$list variable=cur_url filter="[{$:/info/url/full}]">
<$list variable=new_link filter="[<cur_url>addsuffix[#]addsuffix[$:/positivesigner/gcmpr/textarea]split[$:]join[%24%3A]]">
<a href=<<new_link>> target="_blank" >text editor</a>
</$list>
</$list>
<!--gcmpr_ref_disp_textedit_link-->
\end

\define gcmpr_btn_cmp_current()
<$list variable=cur_card filter="[all[current]]">
<$list variable=dest_card filter="[<cur_card>addprefix[$:/state/popup/gcmpr/]]">
<$vars lit_lt="<" lit_gt=">" lit_s=" " lit_qs='"' macro_name="gcmpr_compare_card" enr_text="text" >
<$list variable=macro_call_text filter="[<lit_lt>addsuffix<lit_lt>addsuffix<macro_name>addsuffix<lit_s>addsuffix<lit_qs>addsuffix<cur_card>addsuffix<lit_qs>addsuffix<lit_gt>addsuffix<lit_gt>]">
<$button class=<<tv-config-toolbar-class>> >
<$action-setfield $tiddler=<<dest_card>> text=<<macro_call_text>> />
<$action-navigate $to=<<dest_card>> />
Compare to Textbox
</$button>
</$list><!--macro_call_text-->
</$vars><!--lit_lt-->
</$list><!--dest_card-->
</$list><!--cur_card-->
<!--gcmpr_btn_cmp_current-->
\end

\define gcmpr_textarea_new()
<$vars enr_text="text" enr_new_filename="new_filename" enr_rows="rows" enr_cols="cols" enr_disp_btn_incr_decr="disp_btn_incr_decr" lit_state_popup_prefix="$:/state/popup/gcmpr_textarea/" lit_default_rows="20" lit_default_cols="160" cur_card=<<currentTiddler>> >
<$list variable=temp_card filter="[<cur_card>addprefix<lit_state_popup_prefix>]">
New file name:
@@margin-left:5px;
<$edit-text tiddler=<<temp_card>> field=new_filename placeholder="" autoHeight=yes tag=input/>
@@
<$list variable=val_disp_btn_incr_decr filter="[<temp_card>get<enr_disp_btn_incr_decr>!match[]else[]]">
<$list variable=val_rows filter="[<temp_card>get<enr_rows>!match[]!match[0]else<lit_default_rows>]">
<$list variable=val_cols filter="[<temp_card>get<enr_cols>!match[]!match[0]else<lit_default_cols>]">
<$list variable=val_new_filename filter="[<temp_card>get<enr_new_filename>!match[]]">
<$list variable=new_card filter="[<val_new_filename>addprefix<lit_state_popup_prefix>]">
<$list variable=new_temp_card filter="[<new_card>addprefix<lit_state_popup_prefix>]">
<$list variable=filter_newcard_not_exists filter="[<new_card>!is[tiddler]]">
<$button>
<$list variable=cur_card_text filter="[<cur_card>get<enr_text>]">
<$action-setfield $tiddler=<<new_card>> $field=<<enr_text>> $value=<<cur_card_text>> />
</$list><!--cur_card_text-->
<$action-setfield $tiddler=<<new_temp_card>> $field=<<enr_new_filename>> $value=<<val_new_filename>> />
<$action-setfield $tiddler=<<new_temp_card>> $field=<<enr_rows>> $value=<<val_rows>> />
<$action-setfield $tiddler=<<new_temp_card>> $field=<<enr_cols>> $value=<<val_cols>> />
<$action-setfield $tiddler=<<new_temp_card>> $field=<<enr_disp_btn_incr_decr>> $value=<<val_disp_btn_incr_decr>> />
<$action-navigate $to=<<new_card>> />
New card
</$button>
</$list><!--filter_newcard_not_exists-->
</$list><!--new_temp_card-->
</$list><!--new_card-->
</$list><!--val_new_filename-->

<br>
<$list variable=filter_disp_buttons filter="[<val_disp_btn_incr_decr>!match[]]">
@@margin-right:20px;
<$button>
<$action-setfield $tiddler=<<temp_card>> $field=<<enr_disp_btn_incr_decr>> $value="" />
Show Resize buttons
</$button>
@@
</$list><!--filter_disp_buttons-->
Rows: <<val_rows>>
<$list variable=filter_disp_buttons filter="[<val_disp_btn_incr_decr>match[]]">
<$button>
<$list variable=val_new_rows filter="[<val_rows>add[10]]">
<$action-setfield $tiddler=<<temp_card>> $field=<<enr_rows>> $value=<<val_new_rows>> 
/>
</$list><!--val_new_rows-->
+
</$button>
<$list variable=filter_zero_rows filter="[<val_rows>!match[0]]">
<$button>
<$list variable=val_new_rows filter="[<val_rows>subtract[10]]">
<$action-setfield $tiddler=<<temp_card>> $field=<<enr_rows>> $value=<<val_new_rows>> />
</$list><!--val_new_rows-->
-
</$button>
</$list><!--filter_zero_rows-->
</$list><!--filter_disp_buttons-->
Cols: <<val_cols>>
<$list variable=filter_disp_buttons filter="[<val_disp_btn_incr_decr>match[]]">
<$button>
<$list variable=val_new_cols filter="[<val_cols>add[10]]">
<$action-setfield $tiddler=<<temp_card>> $field=<<enr_cols>> $value=<<val_new_cols>> />
</$list><!--val_new_cols-->
+
</$button>
<$list variable=filter_zero_cols filter="[<val_cols>!match[0]]">
<$button>
<$list variable=val_new_cols filter="[<val_cols>subtract[10]]">
<$action-setfield $tiddler=<<temp_card>> $field=<<enr_cols>> $value=<<val_new_cols>> />
</$list><!--val_new_cols-->
-
</$button>
@@margin-left:20px;
<$button>
<$action-setfield $tiddler=<<temp_card>> $field=<<enr_disp_btn_incr_decr>> $value="hide" />
Hide resize buttons
</$button>
@@
</$list><!--filter_disp_buttons-->
</$list><!--filter_zero_cols-->
<br>
<textarea rows=<<val_rows>> cols=<<val_cols>> />
</$list><!--val_cols-->
</$list><!--val_rows-->
</$list><!--val_disp_btn_incr_decr-->
</$list><!--temp_card-->
</$vars><!--enr_new_filename-->
\end

\define glbl_chk(ur_field)
<br><$checkbox tiddler=<<currentTiddler>> field="$ur_field$" unchecked="no" checked="yes"></$checkbox><span style="margin-right:5px;" />
\end




$:/positivesigner/gcmpr/textarea

<<gcmpr_textarea_new>>



$:/positivesigner/home-button

<$set name=cur_title filter=<<currentCard>> >
<$list variable=missing_tag filter="[prefix<cur_title>!tag<cur_title>]">
<$link to=<<missing_tag>> /> missing tag
</$list><!--missing_tag-->

<$list variable=filter_text filter="[<cur_title>split[Draft of ']join[]split[']join[]]">
<$list variable=cur_card filter="[tag<filter_text>!match<cur_title>!suffix[/base-install]sort[]]">

<$link to=<<cur_card>> />
</$list><!--cur_card-->
</$list><!--filter_text-->
</$set><!--cur_title-->



$:/positivesigner/home-button/keyboard action HomeTiddlers

<$action-sendmessage $message="tm-home"/>




$:/positivesigner/home-button/template Home Button

<$list variable=on_twcard filter="[<tv-config-toolbar-icons>!match[no]]">
<div style="float:right;padding-left:30px;">
{{$:/core/ui/TopBar/menu}}
</div>

<div style="float:right"><$button set="$:/state/sidebar" setTo="no" tooltip={{$:/language/Buttons/Home/Hint}} aria-label={{$:/language/Buttons/Home/Caption}} class=<<tv-config-toolbar-class>>>
<span class="tc-dirty-indicator">
<$list filter="[<tv-config-toolbar-icons>match[yes]]">
{{$:/core/images/home-button}}
</$list>
<$list filter="[<tv-config-toolbar-text>match[yes]]">
<span class="tc-btn-text"><$text text={{$:/language/Buttons/Home/Caption}}/></span>
</$list>
</span>
<$action-sendmessage $message="tm-home"/>
</$button></div>
</$list><!--on_twcard-->



$:/positivesigner/preview-button

<$set name=cur_title filter=<<currentCard>> >
<$list variable=missing_tag filter="[prefix<cur_title>!tag<cur_title>]">
<$link to=<<missing_tag>> /> missing tag
</$list><!--missing_tag-->

<$list variable=filter_text filter="[<cur_title>split[Draft of ']join[]split[']join[]]">
<$list variable=cur_card filter="[tag<filter_text>!match<cur_title>!suffix[/base-install]sort[]]">

<$link to=<<cur_card>> />
</$list><!--cur_card-->
</$list><!--filter_text-->
</$set><!--cur_title-->



$:/positivesigner/preview-button/keyboard action PreviewCard

<$list variable=cur_card filter="[[$:/state/showeditpreview]]">
<$list variable=cur_val filter="[<cur_card>get[text]match[yes]]">
<$action-setfield $tiddler=<<cur_card>> text="no"/>
</$list>
<$list variable=cur_val filter="[<cur_card>get[text]!match[yes]]">
<$action-setfield $tiddler=<<cur_card>> text="yes"/>
</$list>
</$list>




$:/positivesigner/text-ref

<$set name=cur_title filter=<<currentCard>> >
<$list variable=missing_tag filter="[prefix<cur_title>!tag<cur_title>]">
<$link to=<<missing_tag>> /> missing tag
</$list><!--missing_tag-->

<$list variable=filter_text filter="[<cur_title>split[Draft of ']join[]split[']join[]]">
<$list variable=cur_card filter="[tag<filter_text>!match<cur_title>!suffix[/base-install]sort[]]">

<$link to=<<cur_card>> />
</$list><!--cur_card-->
</$list><!--filter_text-->
</$set><!--cur_title-->



$:/positivesigner/text-ref/btn Delete Cards

<$vars has_parent_doctag="[split[\]first[]tag[DOC]]" has_has_parent="[split[\]count[]!match[1]]">
<$set name=fn_img_cards_selall filter="[prefix[$:/img/]]">
<$set name=fn_ext_cards_selall filter="[prefix[$:/ext/]]">
<$set name=fn_card_with_docparent_selall filter="[get[title]filter<has_has_parent>filter<has_parent_doctag>sort[]]">
<$set name=fn_compiled_cards_selall filter="[enlist<fn_img_cards_selall>append<fn_ext_cards_selall>append<fn_card_with_docparent_selall>]">


<$button>
<$list variable=cur_entry filter="[enlist<fn_compiled_cards_selall>]">
<$action-deletetiddler $tiddler=<<cur_entry>> />
</$list><!--cur_entry-->
Del <$list
variable=cur_count filter="[enlist<fn_img_cards_selall>count[]]"><<cur_count>></$list> IMG cards, <$list
variable=cur_count filter="[enlist<fn_ext_cards_selall>count[]]"><<cur_count>></$list> EXT cards, and <$list
variable=cur_count filter="[enlist<fn_card_with_docparent_selall>count[]]"><<cur_count>></$list> DOC sub-cards
</$button>

<$list variable=cur_entry filter="[enlist<fn_compiled_cards_selall>]">

<$link to=<<cur_entry>> />
</$list><!--cur_entry-->
</$set><!--fn_compiled_cards_selall-->
</$set><!--fn_card_with_docparent_selall-->
</$set><!--fn_ext_cards_selall-->
</$set><!--fn_img_cards_selall-->
</$vars><!--has_parent_doctag-->

---
<$button>
<$list variable=cur_entry filter="[!is[system]!has[tags]]">
<$action-deletetiddler $tiddler=<<cur_entry>> />
</$list><!--cur_entry-->
Del <$list
variable=cur_count filter="[!is[system]!has[tags]count[]]"><<cur_count>></$list> untagged cards
</$button>

<$list variable=cur_entry filter="[!is[system]!has[tags]]">

<$link to=<<cur_entry>> />
</$list><!--cur_entry-->




$:/positivesigner/text-ref/ext TW Return

\define TW_Return(ur_url, ur_link_title)
<div style="float:right"><a href="$ur_url$"> ($ur_link_title$)</a></div>
\end
<$list variable=found_index filter="[{$:/info/url/full}split[/]count[]subtract[1]]">
<$list variable=skip_html filter="[<tv-config-toolbar-icons>match[no]]">
<$list variable=return_url filter="[{$:/info/url/full}split[/]butfirst<found_index>first[]split[.html]join[.htm]addprefix[src/]]">
<$macrocall $name=TW_Return ur_url=<<return_url>> ur_link_title="TiddlyWiki view of website" />
</$list><!--found_html-->
</$list><!--skip_html-->
<$list variable=found_html filter="[<tv-config-toolbar-icons>!match[no]]">
<$list variable=return_url filter="[{$:/info/url/full}split[/]butfirst<found_index>first[]split[.html]join[.htm]split[.htm]join[.html]addprefix[../]]">
<$macrocall $name=TW_Return ur_url=<<return_url>> ur_link_title="Static HTML view of website" />
</$list>
</$list><!--found_html-->
</$list><!--found_index-->




$:/positivesigner/text-ref/Font Size

<$list variable=cur_entry filter="[all[tiddlers]!suffix[.js]!suffix[.css]!match[$:/core]!prefix[$:/config/]!prefix[$:/DefaultTiddlers]!prefix[$:/Import]!match[$:/isEncrypted]!prefix[$:/language/]!prefix[$:/theme]!prefix[$:/temp/]!prefix[$:/status/]!match[$:/StoryList]!match[$:/HistoryList]!match[$:/SiteTitle]!match[$:/SiteSubtitle]!prefix[$:/state/]count[]]">
Specific prefix filter: <<cur_entry>> cards
</$list>

<$list variable=cur_entry filter="[all[tiddlers]!is[system]] [prefix[$:/positivesigner]] +[count[]]">

Non-system plus system PositiveSigner filter: <<cur_entry>> cards
</$list>


<$button>
<$list variable=cur_card filter="[!is[system]!prefix[Draft of]]">
<$action-listops $tiddler=<<cur_card>> $tags="+[append[COPY]]"/>
</$list>
Append COPY tag to all non-system cards
</$button><br>

<$button>
<$list variable=cur_card filter="[tag[COPY]]">
<$action-listops $tiddler=<<cur_card>> $tags="+[remove[COPY]]"/>
</$list>
Remove COPY tag from all cards
</$button><br>


<$button>
{{keyboard action FontLarge}}
Big Font
</$button>

<$button>
{{keyboard action FontNormal}}
Normal Font
</$button>

[[Panel|$:/positivesigner/text-ref/Panel]]

!!Cards where has[tags] does not work

<$list variable=cur_card filter="[is[tiddler]]">
<$list variable=has_tags_test filter="[<cur_card>!has[tags]count[]] [<cur_card>has[tags]count[]] +[sum[]match[0]]">

<$link to=<<cur_card>> />
</$list><!--has_tags_test-->
</$list><!--cur_card-->


[[parm SkipSaveExportHTML|$:/positivesigner/base-install/parm SkipSaveExportHTML]]

[[btn Delete Cards|$:/positivesigner/text-ref/btn Delete Cards]]




$:/positivesigner/text-ref/keyboard action FontLarge

<$action-setfield $tiddler="$:/themes/tiddlywiki/vanilla/metrics/fontsize" text="24px"/>
<$action-setfield $tiddler="$:/themes/tiddlywiki/vanilla/metrics/lineheight" text="30px"/>
<$action-setfield $tiddler="$:/themes/tiddlywiki/vanilla/metrics/bodyfontsize" text="25px"/>
<$action-setfield $tiddler="$:/themes/tiddlywiki/vanilla/metrics/bodylineheight" text="34px"/>




$:/positivesigner/text-ref/keyboard action FontNormal

<$action-setfield $tiddler="$:/themes/tiddlywiki/vanilla/metrics/fontsize" text="14px"/>
<$action-setfield $tiddler="$:/themes/tiddlywiki/vanilla/metrics/lineheight" text="20px"/>
<$action-setfield $tiddler="$:/themes/tiddlywiki/vanilla/metrics/bodyfontsize" text="15px"/>
<$action-setfield $tiddler="$:/themes/tiddlywiki/vanilla/metrics/bodylineheight" text="24px"/>




$:/positivesigner/text-ref/mcr glbl_article_list

\define glbl_article_list()
<ol>
<$list variable=card_prefix filter="[<currentTiddler>addsuffix[\]]">
<$list variable=cur_card filter="[prefix<card_prefix>sort[]]">
<$list variable=disp_name filter="[<cur_card>split[\]butfirst[]join[\]]">
<li><$link to=<<cur_card>> ><<disp_name>></$link></li>
</$list><!--disp_name-->
</$list><!--cur_card-->
</$list><!--card_prefix-->
</ol>
\end
\define glbl_article_checklist()
<$vars cur_card=<<currentTiddler>> >
<<glbl_dt_ddd>>
<$wikify name=cur_date text="""<<now "YYYYm0MMd0DD">>""" >
<$list variable=diff_date filter="[<cur_card>get[match_date]else[]!match<cur_date>]">
<$button>
<$list variable=field_name filter="[<cur_card>fields[]prefix[chk_]]">
<$action-setfield $field=<<field_name>> $value="" />
</$list><!--field_name-->
<$action-setfield match_date=<<cur_date>> />
Clear all checkmarks
</$button>
</$list><!--diff_date-->
</$wikify><!--cur_date-->
<ol>
<$list variable=card_prefix filter="[<cur_card>addsuffix[\]]">
<$list variable=cur_entry filter="[prefix<card_prefix>sort[]]">
<$list variable=disp_name filter="[<cur_entry>split[\]last[]]">
<$list variable=chk_name filter="[<disp_name>addprefix[chk_]split[ ]join[_]lowercase[]]">
<li>
<$checkbox default="no" unchecked="no" checked="yes" tiddler=<<cur_card>> field=<<chk_name>> >
<$link to=<<cur_entry>> ><<disp_name>></$link>
</$checkbox>
</li>
</$list><!--chk_name-->
</$list><!--disp_name-->
</$list><!--cur_card-->
</$list><!--card_prefix-->
</ol>
</$vars>
\end




$:/positivesigner/text-ref/mcr glbl_code_split

\define glbl_code_block(ur_note_pk)
[[$ur_note_pk$]]
<$codeblock code={{$ur_note_pk$}} />
\end
\define glbl_code_linenum(ur_note_pk, ur_skip_count, ur_section_size, ur_disp_linenum)
<div style="clear:both">[[$ur_note_pk$]]</div>
<$list filter="[[$ur_skip_count$]!match[]else[0]]" variable=intSKIP_COUNT>
<$list filter="[[$ur_note_pk$]get[text]splitregexp[\n]butfirst<intSKIP_COUNT>count[]]" variable=intLINE_COUNT>
<$list filter="[[$ur_section_size$]!match[]!match[0]else<intLINE_COUNT>]" variable=intSECTION_SIZE>
<$list filter="[range<intSECTION_SIZE>]" variable=intCUR_LINE>
<$list filter="[<intCUR_LINE>subtract[1]]" variable=IntREMOVE_LINE>
<$list filter="[[$ur_note_pk$]get[text]splitregexp[\n]butfirst<intSKIP_COUNT>butfirst<IntREMOVE_LINE>first[]]" variable=strCUR_LINE>
<$list filter="[[$ur_disp_linenum$]!match[n]!match[0]]"><div style="float:left"><<intCUR_LINE>></div></$list>
<$codeblock code=<<strCUR_LINE>> />
</$list></$list></$list></$list></$list></$list>
\end
\define glbl_code_split_group(ur_note_pk, ur_skip_count)
<$list filter="[{$ur_note_pk$}splitregexp[\n]butfirst[$ur_skip_count$]first[100]]"><$list filter="[<currentTiddler>splitregexp[\u0026]join[&#x0026;]splitregexp[\u0027]join[&#x0027;]splitregexp[\u002C]join[&#x002C;]splitregexp[\u002D]join[&#x002D;]splitregexp[\u002F]join[&#x002F;]splitregexp[\u003A]join[&#x003A;]splitregexp[\u003C]join[&#x003C;]splitregexp[\u0040]join[&#x0040;]splitregexp[\u005B]join[&#x005B;]splitregexp[\u005C]join[&#x005C;]splitregexp[\u005E]join[&#x005E;]splitregexp[\u005F]join[&#x005F;]splitregexp[\u0060]join[&#x0060;]splitregexp[\u007B]join[&#x007B;]splitregexp[\u007E]join[&#x007E;]splitregexp[\u0009]join[__	__]splitregexp[\u0020]join[__ __]splitregexp[\u0022\u0022\u0022]join[&#x0022;&#x0022;&#x0022;]]"><<currentTiddler>>
</$list></$list>
\end
\define glbl_code_split_count(ur_note_pk, ur_rem_counter, ur_last_counter, ur_first_line_skip)
<$list filter="[{$ur_last_counter$}subtract{$ur_rem_counter$}multiply[100]add[$ur_first_line_skip$]]"><$macrocall $name=glbl_code_split_group ur_note_pk="$ur_note_pk$" ur_skip_count=<<currentTiddler>> /></$list>
\end
\define glbl_code_split_data()
<$macrocall $name=glbl_code_split_count ur_note_pk=<<source_note_pk>> ur_rem_counter=<<temp_remcounter_pk>> ur_last_counter=<<temp_lastcounter_pk>> ur_first_line_skip=<<first_line_skip>> />
\end
\define glbl_code_split_next_group_disp(ur_rem_counter)
<$list filter="[{$ur_rem_counter$}subtract[1]]">
<$action-setfield $tiddler=<<temp_remcounter_pk>> text=<<currentTiddler>> />
</$list>
\end
\define glbl_code_split_disp(ur_source_note_pk, ur_temp_note_pk, ur_temp_remcounter_pk, ur_first_line_skip)
Line Count: <$list filter="[{$ur_source_note_pk$}splitregexp[\n]butfirst[$ur_first_line_skip$]count[]]"></$list><br>
Rem to find: <$list filter="[{$ur_temp_remcounter_pk$}]"></$list><br>
Source data: [[$ur_source_note_pk$]]<br>
\end
\define glbl_code_split_combine()
$(currentTiddler)$$(str_html_out)$
\end
\define glbl_code_split_init(ur_note_pk, ur_first_line_skip)
<$list filter="[[$ur_first_line_skip$]!match[]then[$ur_first_line_skip$]else[0]]">
  <$vars source_note_pk="$ur_note_pk$" temp_note_pk="$:/state/popup/$ur_note_pk$/HtmlEscapedLinesOutput" temp_remcounter_pk="$:/state/popup/$ur_note_pk$/HtmlEscapedLinesRemCounter" temp_lastcounter_pk="$:/state/popup/$ur_note_pk$/HtmlEscapedLinesLastCounter" first_line_skip=<<currentTiddler>> >
    <$list filter="[{$ur_note_pk$}splitregexp[\n]butfirst<first_line_skip>count[]divide[100]add[1]floor[]]">
      <$button>
        <$action-setfield $tiddler=<<temp_note_pk>> text="" />
        <$action-setfield $tiddler=<<temp_remcounter_pk>> text=<<currentTiddler>> />
        <$action-setfield $tiddler=<<temp_lastcounter_pk>> text=<<currentTiddler>> />
        Reset destination edit field
        </$button>
      </$list><br>
	
    <$edit-text tiddler=<<temp_remcounter_pk>> autoHeight=yes tag=input />
    </$vars>
  </$list>
\end
\define glbl_code_split(ur_note_pk, ur_first_line_skip)
<$macrocall $name=glbl_code_split_init ur_note_pk="$ur_note_pk$" ur_first_line_skip="$ur_first_line_skip$" /><br>
<$list filter="[[$ur_first_line_skip$]!match[]then[$ur_first_line_skip$]else[0]]">
  <$vars source_note_pk="$ur_note_pk$" temp_note_pk="$:/state/popup/$ur_note_pk$/HtmlEscapedLinesOutput" temp_remcounter_pk="$:/state/popup/$ur_note_pk$/HtmlEscapedLinesRemCounter" temp_lastcounter_pk="$:/state/popup/$ur_note_pk$/HtmlEscapedLinesLastCounter" first_line_skip=<<currentTiddler>> >
    <$macrocall $name=glbl_code_split_disp ur_source_note_pk=<<source_note_pk>> ur_temp_note_pk=<<temp_note_pk>> ur_temp_remcounter_pk=<<temp_remcounter_pk>> ur_temp_lastcounter_pk=<<temp_lastcounter_pk>> ur_first_line_skip=<<first_line_skip>> />
    <$button>
      <$wikify name=str_html_out text=<<glbl_code_split_data>> >
        <$list filter="[<temp_note_pk>get[text]else[]]"><$vars combine_html_out=<<glbl_code_split_combine>> >
        <$action-setfield $tiddler=<<temp_note_pk>> text=<<combine_html_out>> />
         </$vars></$list>
        <$macrocall $name=glbl_code_split_next_group_disp ur_rem_counter=<<temp_remcounter_pk>> />
        </$wikify>
      
      Find next 100 lines
      </$button><br>

    <$edit-text tiddler=<<temp_note_pk>> autoHeight=no />
    </$vars>
  </$list>
\end
\define glbl_code_disp_group(ur_note_pk, ur_skip_count)
<$list filter="[{$ur_note_pk$}splitregexp[\n]butfirst[$ur_skip_count$]first[100]]"><$list filter="[<currentTiddler>splitregexp[\u0026]join[&#x0026;]splitregexp[\u00A0]join[&nbsp;]splitregexp[\u0009]join[&nbsp;&nbsp;&nbsp;&nbsp;]splitregexp[\u0020]join[&nbsp;]splitregexp[\u0027]join[&#x0027;]splitregexp[\u002C]join[&#x002C;]splitregexp[\u002D]join[&#x002D;]splitregexp[\u002F]join[&#x002F;]splitregexp[\u003A]join[&#x003A;]splitregexp[\u003C]join[&#x003C;]splitregexp[\u0040]join[&#x0040;]splitregexp[\u005B]join[&#x005B;]splitregexp[\u005C]join[&#x005C;]splitregexp[\u005E]join[&#x005E;]splitregexp[\u005F]join[&#x005F;]splitregexp[\u0060]join[&#x0060;]splitregexp[\u007B]join[&#x007B;]splitregexp[\u007E]join[&#x007E;]]"><<currentTiddler>><br></$list></$list>
\end
\define glbl_code_disp_count(ur_note_pk, ur_rem_counter, ur_last_counter, ur_first_line_skip)
<$list filter="[{$ur_last_counter$}subtract{$ur_rem_counter$}multiply[100]add[$ur_first_line_skip$]]"><$macrocall $name=glbl_code_disp_group ur_note_pk="$ur_note_pk$" ur_skip_count=<<currentTiddler>> /></$list>
\end
\define glbl_code_disp_data()
<$macrocall $name=glbl_code_disp_count ur_note_pk=<<source_note_pk>> ur_rem_counter=<<temp_remcounter_pk>> ur_last_counter=<<temp_lastcounter_pk>> ur_first_line_skip=<<first_line_skip>> />
\end
\define glbl_code_disp_next_group_disp(ur_rem_counter, ur_oper)
<$list filter="[{$ur_rem_counter$}$ur_oper$[1]]">
<$action-setfield $tiddler=<<temp_remcounter_pk>> text=<<currentTiddler>> />
</$list>
\end
\define glbl_code_disp_disp(ur_source_note_pk, ur_temp_remcounter_pk, ur_first_line_skip)
Line Count: <$list filter="[{$ur_source_note_pk$}splitregexp[\n]butfirst[$ur_first_line_skip$]count[]]"></$list><br>
Rem to browse: <$list filter="[{$ur_temp_remcounter_pk$}]"></$list><br>
\end
\define glbl_code_disp_init(ur_note_pk, ur_first_line_skip)
<$list filter="[[$ur_first_line_skip$]!match[]then[$ur_first_line_skip$]else[0]]">
  <$vars source_note_pk="$ur_note_pk$" temp_remcounter_pk="$:/state/popup/$ur_note_pk$/HtmlEscapedLinesRemCounter" temp_lastcounter_pk="$:/state/popup/$ur_note_pk$/HtmlEscapedLinesLastCounter" first_line_skip=<<currentTiddler>> >
    <$list filter="[{$ur_note_pk$}splitregexp[\n]butfirst<first_line_skip>count[]divide[100]floor[]]">
      <$button>
        <$action-setfield $tiddler=<<temp_remcounter_pk>> text=<<currentTiddler>> />
        <$action-setfield $tiddler=<<temp_lastcounter_pk>> text=<<currentTiddler>> />
        Reset destination edit field
        </$button>
      </$list><br>
	
    <$edit-text tiddler=<<temp_remcounter_pk>> autoHeight=yes tag=input />
    </$vars>
  </$list>
\end
\define glbl_code_disp(ur_note_pk, ur_first_line_skip)
<$macrocall $name=glbl_code_disp_init ur_note_pk="$ur_note_pk$" ur_first_line_skip="$ur_first_line_skip$" /><br>
[[$ur_note_pk$]]<br>
<$list filter="[[$ur_first_line_skip$]!match[]then[$ur_first_line_skip$]else[0]]">
  <$vars source_note_pk="$ur_note_pk$" temp_remcounter_pk="$:/state/popup/$ur_note_pk$/HtmlEscapedLinesRemCounter" temp_lastcounter_pk="$:/state/popup/$ur_note_pk$/HtmlEscapedLinesLastCounter" first_line_skip=<<currentTiddler>> >
    <$macrocall $name=glbl_code_disp_disp ur_source_note_pk=<<source_note_pk>> ur_temp_remcounter_pk=<<temp_remcounter_pk>> ur_temp_lastcounter_pk=<<temp_lastcounter_pk>> ur_first_line_skip=<<first_line_skip>> />
    <$button>
      <$macrocall $name=glbl_code_disp_next_group_disp ur_rem_counter=<<temp_remcounter_pk>> ur_oper="subtract" />
      
      Browse next 100 lines
      </$button><br>
    <$button>
      <$macrocall $name=glbl_code_disp_next_group_disp ur_rem_counter=<<temp_remcounter_pk>> ur_oper="add" />
      
      Browse prev 100 lines
      </$button><br>

    <<glbl_code_disp_data>>
    </$vars>
  </$list>
\end

<!--<$macrocall $name=glbl_code_disp ur_note_pk="WebNotes\Data" ur_first_line_skip=1 />-->

<!--<<glbl_code_disp "WebNotes\Data 1 >>-->

<!--Does not pass through the \u0009 tab or \u00A0 non-breaking space characters. Chrome highlight and copy puts spaces on the clipboard.-->

<!--[[WebNotes\Data]]-->

<!--<$macrocall $name=glbl_code_split ur_note_pk="WebNotes\Data" ur_first_line_skip=1 />-->

<!--<<glbl_code_block "UrNotePK">>-->

<!--<<glbl_code_linenum "UrNotePK" 0 15 n>>-->



$:/positivesigner/text-ref/mcr glbl_compare_lines

\define glbl_compare_lines_results_table(ur_note_pk, ur_second_pk, ur_row_count)
<table><tr>
<th>''Line''</th>
<th>Show text</th>
<th>First Side<br>Second Side</th>
</tr>
<$list filter="[range<intSECOND_COUNT>subtract[1]]" variable="intCUR_ENTRY">
<$list filter="[{$ur_note_pk$}splitregexp[\n]butfirst<intCUR_ENTRY>first[]]" variable="strFIRST_LINE">
<$list filter="[{$ur_second_pk$}splitregexp[\n]butfirst<intCUR_ENTRY>first[]!match<strFIRST_LINE>]" variable="strSECOND_LINE">
<tr>
<td rowspan=2>

!!<<intCUR_ENTRY>>
</td>
<td>
<$button>
<$action-setfield $tiddler="$:/state/CompareTextLine1" text=<<intCUR_ENTRY>>/>
<$action-setfield $tiddler="$:/state/CompareTextSection1" text="""<$edit-text tiddler="$:/state/CompareTextLine1" field=text default="" placeholder="[no text yet]" autoHeight=no tag=input/>
<$list filter="[{$:/state/CompareTextLine1}!match[]else[0]]" variable=intSTART_LINE><$list filter="[<intSTART_LINE>subtract[1]]" variable=intPREV_LINE>
<$list filter="[<intSTART_LINE>add[1]]" variable=intNEXT_LINE>
<$button>
<$action-setfield $tiddler="$:/state/CompareTextLine1" text=<<intPREV_LINE>>/>
<<intPREV_LINE>>
</$button>
<$button>
<$action-setfield $tiddler="$:/state/CompareTextLine1" text=<<intNEXT_LINE>>/>
<<intNEXT_LINE>>
</$button><br>[[$ur_note_pk$]]<br>
<$macrocall $name=glbl_code_disp_group ur_note_pk="$ur_note_pk$"  ur_skip_count=<<intSTART_LINE>> />
</$list></$list></$list>""" />
<$action-navigate $to="$:/state/CompareTextSection1"/>
<<intCUR_ENTRY>>
</$button>
</td>
<td><$codeblock code=<<strFIRST_LINE>> /></td>
</tr>
<tr>
<td>
<$button>
<$action-setfield $tiddler="$:/state/CompareTextLine2" text=<<intCUR_ENTRY>>/>
<$action-setfield $tiddler="$:/state/CompareTextSection2" text="""<$edit-text tiddler="$:/state/CompareTextLine2" field=text default="" placeholder="[no text yet]" autoHeight=no tag=input/>
<$list filter="[{$:/state/CompareTextLine2}!match[]else[0]]" variable=intSTART_LINE>
<$list filter="[<intSTART_LINE>subtract[1]]" variable=intPREV_LINE>
<$list filter="[<intSTART_LINE>add[1]]" variable=intNEXT_LINE>
<$button>
<$action-setfield $tiddler="$:/state/CompareTextLine2" text=<<intPREV_LINE>>/>
<<intPREV_LINE>>
</$button>
<$button>
<$action-setfield $tiddler="$:/state/CompareTextLine2" text=<<intNEXT_LINE>>/>
<<intNEXT_LINE>>
</$button><br>[[$ur_second_pk$]]<br>
<$macrocall $name=glbl_code_disp_group ur_note_pk="$ur_second_pk$"  ur_skip_count=<<intSTART_LINE>> />
</$list></$list></$list>""" />
<$action-navigate $to="$:/state/CompareTextSection2"/>
<<intCUR_ENTRY>>
</$button>
</td>
<td><$codeblock code=<<strSECOND_LINE>> /></td>
</tr>
</$list></$list></$list>
</table>
\end
\define glbl_compare_lines(ur_note_pk, ur_second_pk)
<$list filter="[{$ur_note_pk$}splitregexp[\n]count[]]" variable="intFIRST_COUNT">
<$list filter="[{$ur_second_pk$}splitregexp[\n]count[]]" variable="intSECOND_COUNT">
<$list filter="[{$ur_second_pk$}splitregexp[\n]count[]subtract<intFIRST_COUNT>]" variable="intSECOND_EXTRA">

[[$ur_note_pk$]] line count: <<intFIRST_COUNT>>

[[$ur_second_pk$]] line count: <<intSECOND_COUNT>>

''$ur_second_pk$'' excess line count: ''<<intSECOND_EXTRA>>''

<$macrocall $name=glbl_compare_lines_results_table ur_note_pk="$ur_note_pk$" ur_second_pk="$ur_second_pk$" ur_row_count=<<intSECOND_COUNT>> />
</$list>
</$list>
</$list>
\end

<!--
<$edit-text tiddler="$:/state/CompareText1" field=text default="" placeholder="[no text yet]" autoHeight=no tag=textarea/>
<$edit-text tiddler="$:/state/CompareText2" field=text default="" placeholder="[no text yet]" autoHeight=no tag=textarea/>

<<glbl_compare_lines "$:/state/CompareText1" "$:/state/CompareText2">>
-->



$:/positivesigner/text-ref/mcr glbl_dt_ddd

\define glbl_dt_ddd()
<div style="clear:right;float:right;background-color:aquamarine;"><<now "YYYYm0MMd0DD DDD pm0hh12\m0mm">></div>
<$list filter="[<currentTiddler>split[Draft of ']join[]split[ ]first[]split[m]join[]split[d]join[]]">
<$view field="title" format="date" template="[UTC]DDD" />
</$list>
\end




$:/positivesigner/text-ref/mcr glbl_ext

\define ext(ur_extnote_pk)
<$list variable=missing_entry filter="[[$:/ext/$ur_extnote_pk$]get[text]else[]match[]]">Missing: [$ur_extnote_pk$]
</$list><!--missing_entry-->
<$list variable=prefix_dir filter="[{$:/info/url/full}split[/src/]count[]match[2]then[../]else[]]">
<$list variable=found_entry filter="[[$:/ext/$ur_extnote_pk$]get[text]else[]addprefix<prefix_dir>]">
<a target="_blank" href=<<found_entry>> >$ur_extnote_pk$</a><div style="float:right">[[->|$:/ext/$ur_extnote_pk$]]</div>
</$list><!--found_entry-->
</$list><!--prefix_dir-->
\end




$:/positivesigner/text-ref/mcr glbl_img

\define imgh(ur_image_pk, ur_size:200)
<$link to="$:/img/$ur_image_pk$"><$image alt="$ur_image_pk$" height="$ur_size$px" source="$:/img/$ur_image_pk$" /></$link>
\end
\define imgw(ur_image_pk, ur_size:500)
<$link to="$:/img/$ur_image_pk$"><$image alt="$ur_image_pk$" width="$ur_size$px" source="$:/img/$ur_image_pk$" /></$link>
\end



$:/positivesigner/text-ref/Panel

* https://github.com/settings/tokens
>* If there is an existing personal access token,
>>* Click on the name -> Navigates page
>>* Click button Regenerate Token -> Navigates page
>>* Click button Copy to Clipboard
>* Otherwise create a new token
* https://github.com/settings/tokens/new
>* Note = name of end user and device
>>* Must be unique
>>* Each device should get a different token
>* checkbox "repo" = set
>* Click button Generate token -> Navigates page
>* Click button Copy to Clipboard
!!
* <$link to="$:/ControlPanel" />
>* [Saving tab, GitHub Saver sub-tab]
>* Paste into field "Password, OAUTH token, or personal access token"
>* Close the Control Panel card
!!
* Click button <$button>
<$action-setfield $tiddler="$:/state/sidebar" text="no"/>
<$action-setfield $tiddler="$:/state/popup/DivPopTitle" text=""/>
<$action-setfield $tiddler="$:/state/tab/sidebar--595412856" text="$:/core/ui/SideBar/More"/>
<$action-sendmessage $message="tm-save-wiki" />
Save Wiki
</$button>
>* Wait a few seconds for the "Saved wiki" notification
>* The token is saved in internal browser storage
>* If you get a "401" error, go back to step 1 to generate a new token




$:/positivesigner/text-ref/Recent Entries

[[Search All Fields|$:/positivesigner/text-ref/Search All Fields]]

[[Tags Count Audit|$:/positivesigner/text-ref/Tags Count Audit]]

[[View All Cards|$:/positivesigner/text-ref/View All Cards]]

[[View All Code|$:/positivesigner/text-ref/View All Code]]

[[Font Size|$:/positivesigner/text-ref/Font Size]]

[[$:/ext]]

[[$:/img]]

<<timeline limit:30 format:"YYYY-0MM-0DD">>



$:/positivesigner/text-ref/Rename EXT Prefixes

<$list variable=ext_prefix_count filter="[prefix[ext]count[]]">

<$button>
<$list variable=cur_card filter="[prefix[ext]]">
<$list variable=new_title filter="[<cur_card>split[ext ]join[]addprefix[$:/ext/]]">
<$action-sendmessage $message="tm-rename-tiddler" from=<<cur_card>> to=<<new_title>> />
<$action-listops $tiddler=<<new_title>> $tags="+[append[$:/ext]]"/>
</$list><!--new_title-->
</$list><!--cur_card-->
Rename (<<ext_prefix_count>>) EXT-prefixes
</$button>

<$list variable=ext_tag_count filter="[prefix[ext]has[tags]]">
Remove all EXT-prefix tags:
<$list variable=cur_card filter="[prefix[ext]has[tags]]">

<$link to=<<cur_card>>
</$list><!--cur_card-->
</$list><!--ext_tag_count-->
</$list><!--ext_prefix_count-->




$:/positivesigner/text-ref/Search All Fields

<$vars search_text_pk="$:/state/popup/SearchAllFields">
<$list variable=show_code_pk filter="[<search_text_pk>addsuffix[-checkShowCode]]">
<$list variable=skip_system_pk filter="[<search_text_pk>addsuffix[-checkSkipSystem]]">
<$edit-text tiddler=<<search_text_pk>> field=text default="" placeholder="[no text yet]" autoHeight=yes tag=input/>
<$checkbox default="no" unchecked="no" checked="yes" field="text" tiddler=<<show_code_pk>>> Show Code</$checkbox>
<$checkbox default="yes" unchecked="no" checked="yes" field="text" tiddler=<<skip_system_pk>>> Include System </$checkbox><br>
<br>

<$list variable=cur_search_text filter="[<search_text_pk>get[text]addsuffix[(?i)]!match[]]">
<$list variable=cur_showcode_text filter="[<show_code_pk>get[text]else[no]]">
<$list variable=cur_skipsystem_text filter="[<skip_system_pk>get[text]else[yes]match[yes]count[]]">

<!--Card titles-->
<$list variable=cur_pk filter="[regexp<cur_search_text>sort[]]">
<$list variable=found_skipsystem filter="[<cur_skipsystem_text>] [<cur_pk>!is[system]count[]] +[sum[]match[1]]">

<$link to=<<cur_pk>> />: title
</$list><!--found_skipsystem-->
</$list><!--cur_pk-->

<!--Card fields-->
<$list variable=cur_pk filter="[!regexp<cur_search_text>sort[]]">
<$list variable=found_skipsystem filter="[<cur_pk>is[system]count[]multiply<cur_skipsystem_text>match[0]]">
<$list variable=cur_field filter="[<cur_pk>fields[]]">
<$list variable=found_field filter="[<cur_pk>get<cur_field>regexp<cur_search_text>]">

<$link to=<<cur_pk>> />: <<cur_field>>
<$list variable=disp_code filter="[<cur_showcode_text>match[yes]]">
<$codeblock code=<<found_field>> />
</$list><!--disp_code-->
</$list><!--found_field-->
</$list><!--cur_field-->

</$list><!--found_skipsystem-->
</$list><!--cur_pk-->

</$list><!--cur_skipsystem_text-->
</$list><!--cur_showcode_text-->
</$list><!--cur_search_text-->
</$list><!--skip_system_pk-->
</$list><!--show_code_pk-->
</$vars><!--search_text_pk-->




$:/positivesigner/text-ref/Tags Count Audit

<$list variable=cur_card filter="[!tag[DOC]!tag[EXT]!tag[IMG]!tag[INDEX]!tag[META]has[tags]!prefix[$:]!prefix[Draft of]] [!has[tags]!prefix[$:]!prefix[Draft of]] +[sort[]]">
<$list variable=filter_tag_count filter="[<cur_card>tags[]first[]count[]match[0]]">
<$list variable=parent_title filter="[<cur_card>split[\]first[]]">
<$list variable=filter_parenttag_count filter="[<parent_title>tags[]count[]match[0]]">

<$link to=<<cur_card>> />
</$list><!--filter_parenttag_count-->
</$list><!--parent_title-->
</$list><!--filter_tag_count-->
</$list><!--cur_card-->

<$list filter="[prefix[Draft of]]"></$list>



$:/positivesigner/text-ref/View All Cards

<$list filter="[all[tiddlers]!tag[EXTLINK]!tag[IMG]!tag[INDEX]!tag[MCR]!tag[META]!has[draft.of]!is[image]!is[tag]!is[system]has[tags]!prefix[undefined]sort[title]]">
<hr>
<h2><$link to=<<currentTiddler>> /></h2>
{{||$:/core/ui/ViewTemplate/tags}}
<$transclude mode="block"/>
</$list>



$:/positivesigner/text-ref/View All Code

<$list variable=cur_card_pk filter="[!has[draft.of]!prefix[undefined]!prefix[$]] [prefix[$]!has[draft.of]has[tags]] +[sort[title]]">
<hr>
<h2><$link to=<<cur_card_pk>> /></h2>
<$list variable=cur_card_tags filter="[<cur_card_pk>tags[]]">
<<cur_card_tags>> 
</$list><!--cur_card_text-->
<$list variable=cur_card_text filter="[<cur_card_pk>get[text]]">
<$codeblock code=<<cur_card_text>> />
</$list><!--cur_card_text-->
</$list><!--cur_card_pk-->



$:/state/showeditpreview

yes



$:/themes/tiddlywiki/vanilla/options/sidebarlayout

fluid-fixed



$:/userguidecode/macro/Activity Details

\define btn_activity_details()
<$list variable=detail_card filter="[[$(activity_prefix)$]addprefix[$:/state/popup/activity_details/]]">
<!--<<activity_details "How to activity title">>-->
<$list variable=detail_macro_call filter="""[[<]addsuffix[<]addsuffix[activity_details]addsuffix[ ]addsuffix["]addsuffix[$(activity_prefix)$]addsuffix["]addsuffix[>]addsuffix[>]]""">
@@margin-left:20em;
<$button>
<$action-setfield $tiddler=<<detail_card>> $field=text $value=<<detail_macro_call>> />
<$action-navigate $to=<<detail_card>> />
Details --$(activity_prefix)$--
</$button>
@@
</$list><!--detail_macro_call-->
</$list><!--detail_card-->
\end
\define activity_details(ur_activity_prefix)
<$list variable=step_card filter="[prefix[$ur_activity_prefix$]]">
<$list variable=step_seq filter="[<step_card>split[\]last[]]">
<$list variable=step_text filter="[<step_card>get[text]]">
<$list variable=text_with_suffix filter="[<step_text>split<test_qs3>count[]remainder[2]match[0]then[]else<test_qs3>]">
[<$link to=<<step_card>> ><<step_seq>></$link>]<br>

<$transclude tiddler=<<step_card>> mode="block" /><br>
</$list><!--text_with_suffix-->
</$list><!--step_text-->
</$list><!--step_seq-->
</$list><!--step_card-->
\end




$:/userguidecode/macro/Activity Step Link and Primary Actions

\define activity_step_link()
<$list variable=step_refform_title filter="[[$(activity_step)$]split[\Form ]butfirst[]first[]split[\]butfirst[]]">
<$list variable=step_activity_prefix filter="[[$(activity_step)$]split[\Form ]first[]addsuffix[\Form ]]">

[<$link to="$(activity_step)$"><<step_refform_title>></$link>]

<$list variable=step_text filter="[[$(activity_step)$]get[text]split[
]prefix[- *]]">

<<step_text>>
</$list><!--step_text-->
</$list><!--step_activity_prefix-->
</$list><!--step_refform_title-->
\end




$:/userguidecode/view_template/Activity Step post-processing

<$list variable=cur_card filter="[<currentTiddler>]">
<$list variable=refform_title filter="[<cur_card>split[\Form ]butfirst[]first[]split[\]butfirst[]]">
<$list variable=activity_prefix filter="[<cur_card>split[\Form ]first[]addsuffix[\Form ]]">

<$list variable=include_next_activity_step filter="[prefix<activity_prefix>sort[]allafter<cur_card>count[]!match[0]]">

<<<
<$list variable=activity_step filter="[prefix<activity_prefix>sort[]allafter<cur_card>]">

<<activity_step_link>>
</$list><!--activity_step-->

<<<
</$list><!--include_next_activity_step-->
</$list><!--activity_prefix-->
</$list><!--refform_title-->
</$list><!--cur_card-->




$:/userguidecode/view_template/Activity Step pre-processing

<$list variable=cur_card filter="[<currentTiddler>]">
<$list variable=refform_title filter="[<cur_card>split[\Form ]butfirst[]first[]split[\]butfirst[]]">
<$list variable=activity_prefix filter="[<cur_card>split[\Form ]first[]]">
<$list variable=include_prev_activity_step filter="[prefix<activity_prefix>sort[]allbefore<cur_card>count[]!match[0]]">
<<btn_activity_details>>

<blockquote class="tc-quote"><p>
<$list variable=activity_step filter="[prefix<activity_prefix>sort[]allbefore<cur_card>]">
<<activity_step_link>>
</$list><!--activity_step-->
</p></blockquote>
</$list><!--include_prev_activity_step-->

<$list variable=userform_link filter="[<refform_title>addprefix[User Forms\]]">
[<$link to=<<userform_link>> ><<refform_title>></$link>]
</$list><!--userform_link-->

</$list><!--activity_prefix-->
</$list><!--refform_title-->
</$list><!--cur_card-->




$:/userguidecode/view_template/Activity Summary

<$list variable=cur_card filter="[<currentTiddler>]">
<$list variable=activity_prefix filter="[<cur_card>prefix[Activities\]split[\]butfirst[]first[]!match[]]">

<<btn_activity_details>>
<$list variable=activity_step filter="[prefix<activity_prefix>sort[]]">

<$macrocall $name=activity_step_link ur_activity_prefix=<<activity_prefix>> />
</$list><!--activity_step-->

</$list><!--activity_prefix-->
</$list><!--cur_card-->




$:/userguidecode/view_template/UserForm Summary

<$list variable=cur_card filter="[<currentTiddler>]">
<$list variable=userform_suffix filter="[<cur_card>prefix[User Forms\]split[\]butfirst[]first[]!match[]]">

<<<
<$list variable=activity_entry filter="[suffix<userform_suffix>!match<cur_card>sort[]]">
<$list variable=activity_prefix filter="[<activity_entry>split[\]first[]]">

<$link to=<<activity_entry>> ><<activity_prefix>></$link> <$list
variable=activity_prevcount filter="[suffix<userform_suffix>!match<cur_card>prefix<activity_prefix>sort[]allbefore<activity_entry>count[]add[1]!match[1]]">
(<<activity_prevcount>>)
</$list><!--activity_prevcount-->

</$list><!--activity_prefix-->
</$list><!--activity_entry-->

<<<
</$list><!--userform_suffix-->
</$list><!--cur_card-->




Activities

<<glbl_article_list>>



Activities\How create a wire payment



Automation Scirpting

{{ext TW Return}}

<<list-links filter:"[tag[DOC]sort[sort_ord]sort[title]] [tag[DOC]!has[sort_ord]sort[title]]">>

[[___|$:/positivesigner/text-ref/Recent Entries]]



Documentation History

<<glbl_article_list>>



Documentation History\2021m04d20 TJS

Initial document



How create a wire payment\Form e1\Purchase Orders form

"""
- * [New record]
- Vendor = @UrVendorNum
- Save
- Note: PO # = @UrPoNum
- Click button Lines -> Opens form
"""




How create a wire payment\Form e2\Purchase Order Lines form

"""
- * [New record]
- [Header section]
- Item = @UrPoLineItem
- U/M = @UrPoLineUM
- Quantity = 1

- [Costs tab]
- Plan Cost = 10.00
- Material cost = 10.00
- Save record

- [Main tab]
- Status = Ordered -> Opens dialog
- Dialog: [Change PO Line/Release Status] will be performed.
- Click OK -> Runs some update
- Save record

- [Costs tab]
- Note: Received qty = 0 and Vouchered qty = 0




How create a wire payment\Form e3\Purchase Order Receiving form

"""
- [Header section]
- Filter: PO Number = @UrPoNum
- - (Click out of the PO Number box to filter the grid)

- [grid, record where PO = @UrPoNum]
- Note: Receive Qty = 1
- checkbox Select = set

- [Header section]
- * Click button Receive -> Opens dialog
- Dialog: "1 Pending PO Receiving Transaction(s) were posted."
- Click button OK -> Closes dialog, refreshes grid
- Note: The grid has no lines

- PO Line/Release Status = Filled
- Note: The record shows again, with Received qty = 1




How create a wire payment\Form e4\Generate A/P Transactions form

"""
- Filter: Vendor = @UrPoVendor

- [Header section]
- Material = @UrPoLineCost

- [PO Selection tab's grid]
- Find row where PO = @UrPoNum
- Note: To Vch/Adj quantity = 1
- checkbox Selected = set
- * Click button Generate -&gt; Opens dialog
- Diolog: "[Generate] will be performed"
- Click button OK -&gt; Changes dialog
- Dialog:
"""

```
    1 Voucher(s) were created.
    
    Voucher that has [Voucher: @UrVoucherNum] was created.
```
"""
- Click button OK -&gt; Closes dialog, refreshes collection
- Note: Material grid does not show PO UrPoNum

[Purchase Order Lines form]
- Note: Received qty = 1 and Vouchered qty = 1




How create a wire payment\Form e5\Voucher Listing form

"""
- * Filter: PO = @UrPoNum
- Note: Extended Cost = 10.00 and Invoice Amount = 0.00



How create a wire payment\Form e6\A/P Vouchers and Adjustments form

"""
- * Filter: PO = @UrPoNum
- Note: This is an Unposted A/P transaction




How create a wire payment\Form e7\A/P Voucher Posting form

"""
- * Note: radio-option Print = set
- Vendor range = 500
- * Click button Process -> Opens dialog
- Dialog: [A/P Voucher Posting] will be printed.
- Click OK -> Opens dialog, opens browser, refreshes grid
- Dialog: "Report Submitted"
- Click button OK -> Closes dialog

[PDF output]
- Note: Total = 10.00

[A/P Voucher Posting form]
- Note: There is a record in the grid where Vendor = @UrPoVendor
- * radio-option Commit = set
- * Click button Process -> Opens dialog, opens browser
- If dialog "Voucher Register(s) exist with dates outside the current period.",
- - Click button OK -> changes dialog

- If dialog "You do not have 'Enter out of Date Range' authorization",
- - Add that group to your user permissions
- - Re-do the Print option.

- Dialog: "[Post] will be performed"
- Click OK -> Changes dialog
- Dialog: "1 A/P Transaction(s) were posted"
- Click OK -> Closes dialog, refreshes grid
- Note: There are no records in the grid

[Voucher Listing form]
- Filter: PO = @UrPoNum
- Note: Invoice Amount = 10.00

[A/P Vouchers and Adjustments form]
- Filter: PO = @UrPoNum
- Note: There is no record




How create a wire payment\Form e8\A/P Posted Transaction Detail form

"""
- * Filter: PO = @UrPoNum
- Note: This is a Posted A/P transaction
- Note: Check Date = [blank]




How create a wire payment\Form e9\A/P Payments form

"""
- * [New record]
- Vendor = @UrPoVendor
- Payment Type = Wire Transfer
- Amount = @UrPoLineAmount
- Note: @UrCheckNum = Check Number
- Note: @UrBankCode = Bank Code
- Save record
- Click button Quick -> Opens form
"""




How create a wire payment\Form ec10\A/P Quick Payment Application form

"""
- [Header section]
- Note: Applied = 0.00, Remaining = 10.00
- Note: Voucher grid has one record for PO = @UrPoNum

- [Voucher grid]
- If there are no records, use the Void A/P Posted Payments form to void a recent EFT payment (usually one check number before the check you just created)
- If you cannot void a payment, run the Manual Check process steps to create a new Purchase Order, receive it, Generate A/P Transactions, and post them

- [Voucher grid, record where PO = @UrPoNum]
- checkbox Selected = set
- * Click button Apply -> Opens dialog
- Dialog:
"""

    ```
    0 A/P Payment Distributions(s) were changed.

    1 A/P Payment Distributions(s) were created.

    0 A/P Payment Distributions(s) were deleted.

```

"""
- Click OK -> Closes dialog
- If dialog "Do you want to save your changes to A/P Quick Payment Applications?",
- - Click Yes

- Note: Applied = 10.00, Remaining = 0.00
- Close Form

[A/P Payments form]
- Refresh collection
- [Voucher grid]
- Note: There is a record with PO = @UrPoNum
- Note: This grid shows the A/P Payment Distributions form’s records (Table = aptrxd_mst)
"""




How create a wire payment\Form ec11\A/P Wire Posting form

"""
- * Note: radio-option A/P Wire Posting Report = set
- Vendor = @UrPoVendor
- * Click button Process -> Opens dialog, refreshes grid, opens browser
- Dialog: "Report Submitted"
- Click OK -> Closes dialog

[PDF Output]
- Note: Total Wire Amount = 10.00
- Note: Amt Paid = 10.00

[A/P Wire Posting form]
- [Header section]
- * radio-option Final Register and Post = set
- * Click button Process -> Opens dialog
- Dialog: [A/P Wire Posting] will be performed.
- Click OK -> Changes dialog
- Dialog: 1 A/P Payment(s) were posted.
- Click OK -> Opens dialog, opens browser
- Dialog: Report Submitted
- Click OK -> Closes dialog

[PDF Output]
- Note: Grand Total = 10.00

[A/P Wire Posting form]
- [Header section]
- * radio-option Print Remittance Advice = set
- checkbox Use Profile = clear
- * Click button Process -> Opens dialog
- Dialog: [Remittance Advice] will be performed.
- Click OK -> Changes dialog
- Dialog: Report Submitted
- Click OK -> Changes dialog
- Dialog: Did Remittance Advice print successfully?
- Click Yes -> Closes dialog

[Background Task History form]
- Wait for report to complete

[Report Output Files form]
- Open PDF file




Research Notes

<<glbl_article_list>>



Research Notes\Pay a vendor

Paying a vendor uses the [[Activities\How create a wire payment]].



User Forms

<<glbl_article_list>>



User Forms\A/P Payments form

!!Dependencies

Table = appmt_mst

!!Overview

The A/P Payments form is used to store the Check information used in the A/P Check Printing / Posting form, A/P EFT Posting form, and A/P Wire Posting form.




User Forms\A/P Posted Transaction Detail form

!!Dependencies

Table = aptrxp_mst

!!Overview

The A/P Posted Transaction Detail form is used to store the Voucher and Cost information used in the A/P Check Printing / Posting form, A/P EFT Posting form, and A/P Wire Posting form.



User Forms\A/P Quick Payment Application form

!!Dependencies

Table = appmt_mst

!!Overview

The A/P Quick Payment Application form is used to create A/P Payment Distribution records used in the A/P Check Printing / Posting form, A/P EFT Posting form, and A/P Wire Posting form.




User Forms\A/P Voucher Posting form

!!Dependencies

Table = aptrx_mst

!!Overview

The A/P Voucher Posting form is used to store the Item, Quantity and Cost information used in the A/P Check Printing / Posting form, A/P EFT Posting form, and A/P Wire Posting form.



User Forms\A/P Vouchers and Adjustments form

!!Dependencies

Table = aptrx_mst

!!Overview

The A/P Vouchers and Adjustments form is used to store the Voucher and Cost information used in the A/P Check Printing / Posting form, A/P EFT Posting form, and A/P Wire Posting form.



User Forms\A/P Wire Posting form

!!Dependencies

Table = appmt_mst

!!Overview

The A/P Wire Posting form is used to store the Check information needed for the A/P Check Printing / Posting form, A/P EFT Posting form, and A/P Wire Posting form.



User Forms\Generate A/P Transactions form

!!Dependencies

Tables = vendor_mst, poitem_mst

!!Overview

The Generate A/P Transactions form is used create Vouchers and A/P Vouchers used in the A/P Check Printing / Posting form, A/P EFT Posting form, and A/P Wire Posting form.



User Forms\Purchase Order Lines form

!!Dependencies

Table = poitem_mst

!!Overview

The Purchase Order Lines form is used to store the Item, Quantity and Cost information used in the A/P Check Printing / Posting form, A/P EFT Posting form, and A/P Wire Posting form.



User Forms\Purchase Order Receiving form

!!Dependencies

Table = poitem_mst

!!Overview

The Purchase Order Receiving form is used to receive a quantity on a Purchase Order Line used in the A/P Check Printing / Posting form, A/P EFT Posting form, and A/P Wire Posting form.



User Forms\Purchase Orders form

!!Dependencies

Table = po_mst

!!Overview

The Purchase Orders form is used to store the Header information for Purchase Order Lines used in the A/P Check Printing / Posting form, A/P EFT Posting form, and A/P Wire Posting form.




User Forms\Voucher Listing form

!!Dependencies

Table = vchitem_mst

!!Overview

The Voucher Listing form is used to store the Voucher, Item, Quantity and Cost information used in the A/P Check Printing / Posting form, A/P EFT Posting form, and A/P Wire Posting form.

