  'Visual Basic.Net Compiler version 0.0.0.5943 (Mono 4.0.1)

Imports System
Imports System.Collections.Generic
Imports System.Text.RegularExpressions

Namespace Dcoder
  Public Module Program
    Public Sub Main(args() As string)
      Dim strRET = "Hi"
      For Each strENTRY As String In SubDir_List("/")
          For Each strE2 As String In SubDir_List("/" & strENTRY)
          For Each strE3 As String In SubDir_List("/" & strENTRY)
              strRET &= vbLf & strENTRY & "/" & strE2 & "/" & strE3
          Next strE3
          Next strE2
      Next strENTRY
      
      strRET &= vbLf & "Done"
      Console.WriteLine(strRET)
    End Sub 'Main

    Public Function t1(ur_root_dir As String) As String
        Return "no"
    End Function

    Public Function SubDir_List(ur_root_dir As String) As System.Collections.Generic.List(Of String)
      Dim lstRET = New System.Collections.Generic.List(Of String)
      SubDir_List = lstRET
      Try
      Dim proc = New System.Diagnostics.Process
      Dim stg = new System.Diagnostics.ProcessStartInfo
      proc.StartInfo = stg
      stg.FileName = "ls"
      stg.Arguments = ur_root_dir

      'stg.FileName = "find"
      'stg.Arguments = ". -name '*' -print"

      stg.UseShellExecute = false
      stg.RedirectStandardOutput= true
      stg.RedirectStandardError = true
      stg.CreateNoWindow = true
      proc.Start()
      Dim strCL_OUT = proc.StandardOutput.ReadToEnd()
      'strRET = "[Output: " & vbLf & strCL_OUT & "]"
      'strRET &= vbLf & "(err: " & vbLf & proc.StandardError.ReadToEnd() & ")"
      For Each strENTRY As String In strCL_OUT.Split(CHR(10))
          If strENTRY <> "" Then
              lstRET.Add(strENTRY)
          End If
      Next strENTRY
      Catch ex As System.Exception
      End Try
    End Function 'SubDir_List
  End Module
End Namespace