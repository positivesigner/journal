

$:/config/AutoSave

no



$:/config/MissingLinks

no



$:/config/Navigation/openLinkFromOutsideRiver

bottom



$:/config/Navigation/Permalinkview/CopyToClipboard

no



$:/config/RelinkOnRename

no



$:/config/ShortcutInfo/font-large



$:/config/ShortcutInfo/font-normal



$:/config/ShortcutInfo/home-tiddlers



$:/config/ShortcutInfo/save-all-changes



$:/config/shortcuts/font-large

ctrl-shift-Quote



$:/config/shortcuts/font-normal

ctrl-shift-Comma



$:/config/shortcuts/home-tiddlers

alt-H



$:/config/shortcuts/save-all-changes

alt-S



$:/config/TextEditor/EnableToolbar

no



$:/config/WikiParserRules/Inline/wikilink

disable



$:/DefaultTiddlers

[all[tiddlers]tag[INDEX]sort[title]]



$:/language/DefaultNewTiddlerTitle

New Card



$:/themes/tiddlywiki/vanilla/metrics/bodyfontsize

15px



$:/themes/tiddlywiki/vanilla/metrics/bodylineheight

24px



$:/themes/tiddlywiki/vanilla/metrics/fontsize

14px



$:/themes/tiddlywiki/vanilla/metrics/lineheight

20px



$:/themes/tiddlywiki/vanilla/options/sidebarlayout

fluid-fixed



btn Delete Cards

<$button>
<$list filter="[tag[ARTICLE]] [tag[IMG]]"><$action-deletetiddler $tiddler=<<currentTiddler>> /></$list>
Del ARTICLE and IMG cards
</$button>



DivPop btn

\define divpop_current(ur_ref)
<$button class=<<tv-config-toolbar-class>> >
<$action-setfield $tiddler="$:/state/sidebar" text="yes"/>
<$action-setfield $tiddler="$:/state/popup/DivPopTitle" text="$ur_ref$"/>
<$action-sendmessage $message="tm-close-tiddler" $param="pop_right"/>
<$list filter="[<tv-config-toolbar-icons>match[yes]]">
{{DivPop.svg}}
</$list>
<$list filter="[<tv-config-toolbar-text>match[yes]]">
<span class="tc-btn-text"><$text text="Popup over Sidebar"/></span>
</$list>
</$button>
\end

<$list filter="[all[current]]">
<$macrocall $name=divpop_current ur_ref=<<currentTiddler>> /> 
</$list>



DivPop glbl

<$list variable=cur_divpop_card filter="[{$:/state/popup/DivPopTitle}is[tiddler]]">
<div style="
position: fixed;
top: 0px;
right: 0px;
width: 350px;
border: 3px solid;
background: white;
bottom: 0%;
">
<div style="overflow-y: scroll; height: 100%;">
<$button>
<$action-setfield $tiddler="$:/state/sidebar" text="no"/>
<$action-setfield $tiddler="$:/state/popup/DivPopTitle" text=""/>
close
</$button>
&nbsp;&nbsp;&nbsp;<$reveal type="match" state="$:/state/popup/$ur_pk$" text="show"><$button set="$:/state/popup/$ur_pk$" setTo="hide">show</$button>&nbsp;&nbsp;&nbsp;<$link to=<<cur_divpop_card>> ><<cur_divpop_card>>
</$link>
<$list variable=cur_text filter="[<cur_divpop_card>get[text]]">
<$codeblock code=<<cur_text>> /></$list>
</$reveal>
<$reveal type="nomatch" state="$:/state/popup/$ur_pk$" text="show"><$button set="$:/state/popup/$ur_pk$" setTo="show">code</$button>&nbsp;&nbsp;&nbsp;<$link to=<<cur_divpop_card>> ><<cur_divpop_card>>
</$link>
<$tiddler tiddler=<<cur_divpop_card>> >
<$transclude mode="block" />
</$tiddler>
</$reveal>
</div>
</div>
</$list>




DivPop.svg

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   inkscape:version="1.0 (4035a4fb49, 2020-05-01)"
   sodipodi:docname="PopupSidebar.svg"
   id="svg52"
   version="1.1"
   height="22pt"
   width="22pt"
   viewBox="0 0 128 128"
   class="tc-image-close-button tc-image-button">
  <metadata
     id="metadata58">
    <rdf:RDF>
      <cc:Work
         rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
        <dc:title></dc:title>
      </cc:Work>
    </rdf:RDF>
  </metadata>
  <defs
     id="defs56">
    <inkscape:perspective
       id="perspective60"
       inkscape:persp3d-origin="64 : 36.371105 : 1"
       inkscape:vp_z="128 : 43.054765 : 1"
       inkscape:vp_y="0 : 313.29655 : 0"
       inkscape:vp_x="0 : 43.054765 : 1"
       sodipodi:type="inkscape:persp3d" />
  </defs>
  <sodipodi:namedview
     inkscape:current-layer="svg52"
     inkscape:window-maximized="0"
     inkscape:window-y="27"
     inkscape:window-x="61"
     inkscape:cy="12.415296"
     inkscape:cx="21.019608"
     inkscape:zoom="8"
     showgrid="false"
     id="namedview54"
     inkscape:window-height="480"
     inkscape:window-width="820"
     inkscape:pageshadow="2"
     inkscape:pageopacity="0"
     guidetolerance="10"
     gridtolerance="10"
     objecttolerance="10"
     borderopacity="1"
     bordercolor="#666666"
     pagecolor="#ffffff" />
  <g
     id="g50"
     fill-rule="evenodd" />
  <rect
     y="13.090909"
     x="10.909091"
     height="104.72727"
     width="111.27273"
     id="rect85"
     style="fill:#cccccc;stroke-width:4.36364" />
  <rect
     y="19.636366"
     x="19.09091"
     height="89.454567"
     width="95.454552"
     id="rect92"
     style="fill:#ffffff;stroke-width:4.36364" />
  <rect
     y="58.909092"
     x="50.727272"
     height="10.909091"
     width="42.545452"
     id="rect94"
     style="fill:#cccccc;stroke-width:4.36364" />
  <path
     id="path96"
     d="m 61.090909,34.363636 c 32.181818,24.545458 32.181818,24.545458 32.181818,24.545458 v 0"
     style="fill:#cccccc;stroke:#cccccc;stroke-width:4.36364px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" />
  <path
     id="path98"
     d="M 64.909091,95.999999 C 93.272727,69.818185 93.272727,69.818185 93.272727,69.818185"
     style="fill:#b3b3b3;stroke:#cccccc;stroke-width:4.36364px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" />
  <rect
     y="16.90909"
     x="86.727272"
     height="94.909088"
     width="8.181818"
     id="rect100"
     style="fill:#cccccc;stroke-width:4.36364" />
</svg>




empty.htm Actions

<<gtree_disp_tree_cards "empty.htm">>




empty.htm Text

<<gtree_disp_tree_text "empty.htm">>



empty.htm Tree

<<gtree_disp_tree_links "empty.htm">>



ext TW Return

\define TW_Return(ur_url, ur_link_title)
<div style="float:right"><a href="$ur_url$"> ($ur_link_title$)</a></div>
\end
<$list filter="[<tv-config-toolbar-icons>match[no]]">
<$list filter="[{$:/info/url/full}split[/]count[]subtract[1]]" variable=found_index>
<$list filter="[{$:/info/url/full}split[/]butfirst<found_index>first[]split[.html]join[.htm]]">
<$macrocall $name=TW_Return ur_url=<<currentTiddler>> ur_link_title="TiddlyWiki view of website" />
</$list>
</$list>
</$list>
<$list filter="[<tv-config-toolbar-icons>!match[no]]">
<$list filter="[{$:/info/url/full}split[/]count[]subtract[1]]" variable=found_index>
<$list filter="[{$:/info/url/full}split[/]butfirst<found_index>first[]split[.html]join[.htm]split[.htm]join[.html]]">
<$macrocall $name=TW_Return ur_url=<<currentTiddler>> ur_link_title="Static HTML view of website" />
</$list>
</$list>
</$list>




fix -z1 and -e1

\define disp_lnz_subcards()
<$list variable=cur_zfield_name filter="[<cur_card>fields[]prefix[ln-z]]">

<$link to=<<cur_card>> />
<<cur_zfield_name>><br>

</$list><!--cur_zfield_name-->
\end
\define disp_ln_lvl3_subcards()
<$list variable=cur_field_name filter="[<cur_card>fields[]prefix[ln-]]">
<$list variable=split_field filter="[<cur_field_name>split[-]count[]!match[2]]">

-''''-''''-''''- <$link to=<<cur_card>> />
<<cur_field_name>><br>

</$list><!--split_field-->
</$list><!--cur_field_name-->
\end
\define each_card_has_linepath()
<$list variable=cur_card filter="[has[line-path]]">
<<disp_lnz_subcards>>
<<disp_ln_lvl3_subcards>>
</$list><!--cur_card-->
\end
<<each_card_has_linepath>>




Font Size

<$button>
{{keyboard action FontLarge}}
Big Font
</$button>

<$button>
{{keyboard action FontNormal}}
Normal Font
</$button>

<$button>
<$action-setfield $tiddler="$:/state/sidebar" text="no"/>
<$action-setfield $tiddler="$:/state/popup/DivPopTitle" text=""/>
<$action-setfield $tiddler="$:/state/tab/sidebar--595412856" text="$:/core/ui/SideBar/More"/>
<$action-sendmessage $message="tm-save-wiki" />
Save Wiki to GitHub
</$button>

<$list filter="[<currentTiddler>!prefix[Draft of]]" variable=strCARD_PK>
<$button>
<$list filter="[list[$:/StoryList]] -[<strCARD_PK>]" variable=strCLOSE_PK>
<$action-sendmessage $message="tm-close-tiddler" $param=<<strCLOSE_PK>>/>
</$list>
Close all other open Cards
</$button>
</$list>



<$vars new_card_entry_pk="$:/state/popup/NewTempCardPK">
<$edit-text tiddler=<<new_card_entry_pk>> field=text default="New Card Title" placeholder="[no text yet]" autoHeight=yes tag=input/><br>
<$link to=<<new_card_entry_pk>> /> = -<$transclude tiddler=<<new_card_entry_pk>> />-<br>

<$list variable=new_card filter="[<new_card_entry_pk>get[text]!match[]]">
<$vars compare_entry_pk="$:/state/popup/CompareTempCardPK">

<$list variable=new_pk filter="[<new_card>addprefix[$:/state/popup/]]">
<$button>
<$action-sendmessage $message="tm-new-tiddler" title=<<new_pk>> tags="OneTag [[Another Tag]]" text=<<now "Today is DDth, MMM YYYY">>/>
Create Card ''<<new_card>>'' and Edit
</$button><br>

<$button>
<$wikify name=open_brackets text="&#91;&#91;">
<$wikify name=close_brackets text="&#93;&#93;">
<$list variable=orig_card_exists filter="[<new_card>is[tiddler]count[]match[1]split[1]join[empty card]else[card not created]]">
<$list variable=orig_card_content filter="[<new_card>get[text]else<orig_card_exists>addprefix[```
]addprefix[

]addprefix<close_brackets>addprefix<new_card>addprefix<open_brackets>]">
<$action-setfield $tiddler=<<new_pk>> text=<<orig_card_content>> />
</$list><!--orig_card_content-->
</$list><!--orig_card_exists-->
</$wikify><!--close_brackets-->
</$wikify><!--open_brackets-->
<$action-navigate $to=<<new_pk>>/>
Create Card ''<<new_card>>'' and Show
</$button><br>

<$link to=<<new_pk>> /><br>

<$button>
<$action-sendmessage $message="tm-close-tiddler" $param=<<new_pk>> />
Close Card: ''<<new_card>>''
</$button><br>

<$list filter="[<currentTiddler>!prefix[Draft of]]" variable=strCARD_PK>
<$button>
<$list filter="[list[$:/StoryList]] -[<strCARD_PK>]" variable=strCLOSE_PK>
<$action-sendmessage $message="tm-close-tiddler" $param=<<strCLOSE_PK>>/>
</$list>
Close all other open Cards
</$button>
</$list><br>

<$button>
<$action-sendmessage $message="tm-delete-tiddler" $param=<<new_pk>> />
Delete Card: ''<<new_card>>'' with confirmation
</$button><br>

<$button>
<$action-sendmessage $message="tm-close-tiddler" $param=<<new_pk>> />
<$action-deletetiddler $tiddler=<<new_pk>> />
Delete Card: ''<<new_card>>'' without confirmation
</$button><br>

<$edit-text tiddler=<<compare_entry_pk>> field=text default="Compare Card Title" placeholder="[no text yet]" autoHeight=yes tag=input/><br>
<$list variable=compare_pk filter="[<compare_entry_pk>get[text]]">
<$link to=<<compare_pk>> />
<$list variable=compare_text filter="[<compare_pk>get[text]]">
<$list variable=new_card_text filter="[<new_pk>get[text]]">
<$diff-text source=<<new_card_text>> dest=<<compare_text>> />
</$list><!--new_card_text-->
</$list><!--compare_text-->
</$list><!--compare_pk-->

</$list><!--new_pk-->
</$vars><!--compare_entry_pk-->
</$list><!--new_card-->
</$vars><!--new_card_entry_pk-->


!!Cards tagged with only $ prefixed tags

<$list variable=cur_card filter="[is[tiddler]has[tags]!prefix[$:/state/]]">
<$list variable=has_non_dprefixed_tag filter="[<cur_card>tags[]!prefix[$]count[]match[0]]">

<$link to=<<cur_card>> />
</$list><!--has_non_dprefixed_tag-->
</$list><!--cur_card-->


!!Cards where has[tags] does not work

<$list variable=cur_card filter="[is[tiddler]]">
<$list variable=has_tags_test filter="[<cur_card>!has[tags]count[]] [<cur_card>has[tags]count[]] +[sum[]match[0]]">

<$link to=<<cur_card>> />
</$list><!--has_tags_test-->
</$list><!--cur_card-->

!!Cards with no tags

<$list variable=cur_card filter="[is[tiddler]!has[tags]!prefix[Draft of]!prefix[$:/state/]!prefix[$:/library/]!prefix[$:/boot/]!prefix[$:/temp/]!match[$:/core]!match[$:/Import]!match[$:/isEncrypted]!match[$:/SiteSubtitle]!match[$:/SiteTitle]!prefix[$:/status/]!match[$:/StoryList]!match[$:/HistoryList]!match[$:/theme]!match[$:/themes/tiddlywiki/snowwhite]!match[$:/themes/tiddlywiki/vanilla]]">
<$list variable=has_parent_card filter="[<cur_card>split[\]count[]match[1]]">

<$link to=<<cur_card>> />
</$list><!--has_parent_card-->

<$list variable=has_parent_card filter="[<cur_card>split[\]count[]!match[1]]">
<$list variable=parent_card_exists filter="[<cur_card>split[\]first[]!is[tiddler]]">

<$link to=<<cur_card>> />
</$list><!--parent_card_exists-->
</$list><!--has_parent_card-->
</$list><!--cur_card-->



<$button>
<$list variable=cur_card filter="[is[tiddler]!prefix[$:/state/]!prefix[Draft of]has[tags]]">
<$action-listops $tiddler=<<cur_card>> $tags="+[append[COPY]]"/>
</$list>
<$list variable=cur_card filter="[is[tiddler]!prefix[$:/state/]!prefix[Draft of]!has[tags]]">
<$list variable=has_parent_card filter="[<cur_card>split[\]count[]!match[1]]">
<$list variable=parent_card_exists filter="[<cur_card>split[\]first[]is[tiddler]]">
<$action-listops $tiddler=<<cur_card>> $tags="+[append[COPY]]"/>
</$list><!--parent_card_exists-->
</$list><!--has_parent_card-->
</$list><!--cur_card-->
Append COPY tag to all cards that already have tags
</$button><br>

<$button>
<$list variable=cur_card filter="[tag[COPY]]">
<$action-listops $tiddler=<<cur_card>> $tags="+[remove[COPY]]"/>
</$list>
Remove COPY tag from all cards
</$button><br>


[[parm SkipSaveExportHTML]]

[[btn Delete Cards]]




keyboard action FontLarge

<$action-setfield $tiddler="$:/themes/tiddlywiki/vanilla/metrics/fontsize" text="24px"/>
<$action-setfield $tiddler="$:/themes/tiddlywiki/vanilla/metrics/lineheight" text="30px"/>
<$action-setfield $tiddler="$:/themes/tiddlywiki/vanilla/metrics/bodyfontsize" text="25px"/>
<$action-setfield $tiddler="$:/themes/tiddlywiki/vanilla/metrics/bodylineheight" text="34px"/>




keyboard action FontNormal

<$action-setfield $tiddler="$:/themes/tiddlywiki/vanilla/metrics/fontsize" text="14px"/>
<$action-setfield $tiddler="$:/themes/tiddlywiki/vanilla/metrics/lineheight" text="20px"/>
<$action-setfield $tiddler="$:/themes/tiddlywiki/vanilla/metrics/bodyfontsize" text="15px"/>
<$action-setfield $tiddler="$:/themes/tiddlywiki/vanilla/metrics/bodylineheight" text="24px"/>




keyboard action HomeTiddlers

<$action-sendmessage $message="tm-home"/>




keyboard action Preview

<$list filter="[[$:/state/showeditpreview]get[text]!match[yes]]"><$action-setfield $tiddler="$:/state/showeditpreview" text="yes"/></$list>
<$list filter="[[$:/state/showeditpreview]get[text]match[yes]]"><$action-setfield $tiddler="$:/state/showeditpreview" text="no"/></$list>





keyboard action SaveAllChanges

\define ExportSaveAll(ur_filename, ur_stamp, ur_save_wiki_extension, ur_save_export_html)
<$action-setfield $tiddler="$:/state/sidebar" text="no"/>
<$action-setfield $tiddler="$:/state/popup/DivPopTitle" text=""/>
<$action-setfield $tiddler="$:/state/tab/sidebar--595412856" text="$:/core/ui/SideBar/More"/>
<$action-sendmessage $message="tm-save-wiki" filename="WikiMove_$ur_filename$-stamp-$ur_stamp$$ur_save_wiki_extension$"
/>
<$list vairable=save_export_html filter="[[$ur_save_export_html$]match[1]]">
<$action-sendmessage $message="tm-download-file"
$param="$:/core/templates/exporters/StaticRiver" filename="WikiMove_$ur_filename$-stamp-$ur_stamp$.html"
exportFilter="""[all[tiddlers]tag[INDEX]sort[title]][all[tiddlers]!tag[EXT]!tag[INDEX]!tag[META]!tag[MCR]!prefix[Draft of]!is[image]!is[tag]!is[system]sort[title]]"""/>
</$list><!--save_export_html-->
<$action-sendmessage $message="tm-download-file"
$param="template ExportAllCode" filename="WikiMove_$ur_filename$-stamp-$ur_stamp$.card.txt" />
\end
<$list variable=save_export_html filter="[{$:/info/url/full}suffix[.htm]count[]] [[parm SkipSaveExportHTML]is[tiddler]count[]multiply[-1]] +[sum[]]">
<$list variable=save_wiki_extension filter="[{$:/info/url/full}split[.]last[]addprefix[.]]">
<$list variable=save_as_file_name filter="[{$:/info/url/full}split[file:///]join[]split[:]join[-colon-]split[.html]join[]split[.htm]join[]split[%20]join[ ]split[/]join[-fslash-]split[%]join[-percent-]]">
<$macrocall $name="ExportSaveAll" ur_filename=<<save_as_file_name>> ur_stamp=<<now format:"YYYYm0MMd0DDam0hhm0mms0ss">> ur_save_wiki_extension=<<save_wiki_extension>> ur_save_export_html=<<save_export_html>> />
</$list><!--save_as_file_name-->
</$list><!--save_export_html-->




mcr glbl_article_list

\define glbl_article_list()
<ol>
<$list filter="[<currentTiddler>addsuffix[\]]">
<$list filter="[all[tiddlers]prefix<currentTiddler>sort[]]">
<li><$link to=<<currentTiddler>> /></li>
</$list>
</$list>
</ol>
\end



mcr glbl_code_split

\define glbl_code_block(ur_note_pk)
[[$ur_note_pk$]]
<$codeblock code={{$ur_note_pk$}} />
\end
\define glbl_code_linenum(ur_note_pk, ur_skip_count, ur_section_size, ur_disp_linenum)
<div style="clear:both">[[$ur_note_pk$]]</div>
<$list filter="[[$ur_skip_count$]!match[]else[0]]" variable=intSKIP_COUNT>
<$list filter="[[$ur_note_pk$]get[text]splitregexp[\n]butfirst<intSKIP_COUNT>count[]]" variable=intLINE_COUNT>
<$list filter="[[$ur_section_size$]!match[]!match[0]else<intLINE_COUNT>]" variable=intSECTION_SIZE>
<$list filter="[range<intSECTION_SIZE>]" variable=intCUR_LINE>
<$list filter="[<intCUR_LINE>subtract[1]]" variable=IntREMOVE_LINE>
<$list filter="[[$ur_note_pk$]get[text]splitregexp[\n]butfirst<intSKIP_COUNT>butfirst<IntREMOVE_LINE>first[]]" variable=strCUR_LINE>
<$list filter="[[$ur_disp_linenum$]!match[n]!match[0]]"><div style="float:left"><<intCUR_LINE>></div></$list>
<$codeblock code=<<strCUR_LINE>> />
</$list></$list></$list></$list></$list></$list>
\end
\define glbl_code_split_group(ur_note_pk, ur_skip_count)
<$list filter="[{$ur_note_pk$}splitregexp[\n]butfirst[$ur_skip_count$]first[100]]"><$list filter="[<currentTiddler>splitregexp[\u0026]join[&#x0026;]splitregexp[\u0027]join[&#x0027;]splitregexp[\u002C]join[&#x002C;]splitregexp[\u002D]join[&#x002D;]splitregexp[\u002F]join[&#x002F;]splitregexp[\u003A]join[&#x003A;]splitregexp[\u003C]join[&#x003C;]splitregexp[\u0040]join[&#x0040;]splitregexp[\u005B]join[&#x005B;]splitregexp[\u005C]join[&#x005C;]splitregexp[\u005E]join[&#x005E;]splitregexp[\u005F]join[&#x005F;]splitregexp[\u0060]join[&#x0060;]splitregexp[\u007B]join[&#x007B;]splitregexp[\u007E]join[&#x007E;]splitregexp[\u0009]join[__	__]splitregexp[\u0020]join[__ __]splitregexp[\u0022\u0022\u0022]join[&#x0022;&#x0022;&#x0022;]]"><<currentTiddler>>
</$list></$list>
\end
\define glbl_code_split_count(ur_note_pk, ur_rem_counter, ur_last_counter, ur_first_line_skip)
<$list filter="[{$ur_last_counter$}subtract{$ur_rem_counter$}multiply[100]add[$ur_first_line_skip$]]"><$macrocall $name=glbl_code_split_group ur_note_pk="$ur_note_pk$" ur_skip_count=<<currentTiddler>> /></$list>
\end
\define glbl_code_split_data()
<$macrocall $name=glbl_code_split_count ur_note_pk=<<source_note_pk>> ur_rem_counter=<<temp_remcounter_pk>> ur_last_counter=<<temp_lastcounter_pk>> ur_first_line_skip=<<first_line_skip>> />
\end
\define glbl_code_split_next_group_disp(ur_rem_counter)
<$list filter="[{$ur_rem_counter$}subtract[1]]">
<$action-setfield $tiddler=<<temp_remcounter_pk>> text=<<currentTiddler>> />
</$list>
\end
\define glbl_code_split_disp(ur_source_note_pk, ur_temp_note_pk, ur_temp_remcounter_pk, ur_first_line_skip)
Line Count: <$list filter="[{$ur_source_note_pk$}splitregexp[\n]butfirst[$ur_first_line_skip$]count[]]"></$list><br>
Rem to find: <$list filter="[{$ur_temp_remcounter_pk$}]"></$list><br>
Source data: [[$ur_source_note_pk$]]<br>
\end
\define glbl_code_split_combine()
$(currentTiddler)$$(str_html_out)$
\end
\define glbl_code_split_init(ur_note_pk, ur_first_line_skip)
<$list filter="[[$ur_first_line_skip$]!match[]then[$ur_first_line_skip$]else[0]]">
  <$vars source_note_pk="$ur_note_pk$" temp_note_pk="$:/state/popup/$ur_note_pk$/HtmlEscapedLinesOutput" temp_remcounter_pk="$:/state/popup/$ur_note_pk$/HtmlEscapedLinesRemCounter" temp_lastcounter_pk="$:/state/popup/$ur_note_pk$/HtmlEscapedLinesLastCounter" first_line_skip=<<currentTiddler>> >
    <$list filter="[{$ur_note_pk$}splitregexp[\n]butfirst<first_line_skip>count[]divide[100]add[1]floor[]]">
      <$button>
        <$action-setfield $tiddler=<<temp_note_pk>> text="" />
        <$action-setfield $tiddler=<<temp_remcounter_pk>> text=<<currentTiddler>> />
        <$action-setfield $tiddler=<<temp_lastcounter_pk>> text=<<currentTiddler>> />
        Reset destination edit field
        </$button>
      </$list><br>
	
    <$edit-text tiddler=<<temp_remcounter_pk>> autoHeight=yes tag=input />
    </$vars>
  </$list>
\end
\define glbl_code_split(ur_note_pk, ur_first_line_skip)
<$macrocall $name=glbl_code_split_init ur_note_pk="$ur_note_pk$" ur_first_line_skip="$ur_first_line_skip$" /><br>
<$list filter="[[$ur_first_line_skip$]!match[]then[$ur_first_line_skip$]else[0]]">
  <$vars source_note_pk="$ur_note_pk$" temp_note_pk="$:/state/popup/$ur_note_pk$/HtmlEscapedLinesOutput" temp_remcounter_pk="$:/state/popup/$ur_note_pk$/HtmlEscapedLinesRemCounter" temp_lastcounter_pk="$:/state/popup/$ur_note_pk$/HtmlEscapedLinesLastCounter" first_line_skip=<<currentTiddler>> >
    <$macrocall $name=glbl_code_split_disp ur_source_note_pk=<<source_note_pk>> ur_temp_note_pk=<<temp_note_pk>> ur_temp_remcounter_pk=<<temp_remcounter_pk>> ur_temp_lastcounter_pk=<<temp_lastcounter_pk>> ur_first_line_skip=<<first_line_skip>> />
    <$button>
      <$wikify name=str_html_out text=<<glbl_code_split_data>> >
        <$list filter="[<temp_note_pk>get[text]else[]]"><$vars combine_html_out=<<glbl_code_split_combine>> >
        <$action-setfield $tiddler=<<temp_note_pk>> text=<<combine_html_out>> />
         </$vars></$list>
        <$macrocall $name=glbl_code_split_next_group_disp ur_rem_counter=<<temp_remcounter_pk>> />
        </$wikify>
      
      Find next 100 lines
      </$button><br>

    <$edit-text tiddler=<<temp_note_pk>> autoHeight=no />
    </$vars>
  </$list>
\end
\define glbl_code_disp_group(ur_note_pk, ur_skip_count)
<$list filter="[{$ur_note_pk$}splitregexp[\n]butfirst[$ur_skip_count$]first[100]]"><$list filter="[<currentTiddler>splitregexp[\u0026]join[&#x0026;]splitregexp[\u00A0]join[&nbsp;]splitregexp[\u0009]join[&nbsp;&nbsp;&nbsp;&nbsp;]splitregexp[\u0020]join[&nbsp;]splitregexp[\u0027]join[&#x0027;]splitregexp[\u002C]join[&#x002C;]splitregexp[\u002D]join[&#x002D;]splitregexp[\u002F]join[&#x002F;]splitregexp[\u003A]join[&#x003A;]splitregexp[\u003C]join[&#x003C;]splitregexp[\u0040]join[&#x0040;]splitregexp[\u005B]join[&#x005B;]splitregexp[\u005C]join[&#x005C;]splitregexp[\u005E]join[&#x005E;]splitregexp[\u005F]join[&#x005F;]splitregexp[\u0060]join[&#x0060;]splitregexp[\u007B]join[&#x007B;]splitregexp[\u007E]join[&#x007E;]]"><<currentTiddler>><br></$list></$list>
\end
\define glbl_code_disp_count(ur_note_pk, ur_rem_counter, ur_last_counter, ur_first_line_skip)
<$list filter="[{$ur_last_counter$}subtract{$ur_rem_counter$}multiply[100]add[$ur_first_line_skip$]]"><$macrocall $name=glbl_code_disp_group ur_note_pk="$ur_note_pk$" ur_skip_count=<<currentTiddler>> /></$list>
\end
\define glbl_code_disp_data()
<$macrocall $name=glbl_code_disp_count ur_note_pk=<<source_note_pk>> ur_rem_counter=<<temp_remcounter_pk>> ur_last_counter=<<temp_lastcounter_pk>> ur_first_line_skip=<<first_line_skip>> />
\end
\define glbl_code_disp_next_group_disp(ur_rem_counter, ur_oper)
<$list filter="[{$ur_rem_counter$}$ur_oper$[1]]">
<$action-setfield $tiddler=<<temp_remcounter_pk>> text=<<currentTiddler>> />
</$list>
\end
\define glbl_code_disp_disp(ur_source_note_pk, ur_temp_remcounter_pk, ur_first_line_skip)
Line Count: <$list filter="[{$ur_source_note_pk$}splitregexp[\n]butfirst[$ur_first_line_skip$]count[]]"></$list><br>
Rem to browse: <$list filter="[{$ur_temp_remcounter_pk$}]"></$list><br>
\end
\define glbl_code_disp_init(ur_note_pk, ur_first_line_skip)
<$list filter="[[$ur_first_line_skip$]!match[]then[$ur_first_line_skip$]else[0]]">
  <$vars source_note_pk="$ur_note_pk$" temp_remcounter_pk="$:/state/popup/$ur_note_pk$/HtmlEscapedLinesRemCounter" temp_lastcounter_pk="$:/state/popup/$ur_note_pk$/HtmlEscapedLinesLastCounter" first_line_skip=<<currentTiddler>> >
    <$list filter="[{$ur_note_pk$}splitregexp[\n]butfirst<first_line_skip>count[]divide[100]floor[]]">
      <$button>
        <$action-setfield $tiddler=<<temp_remcounter_pk>> text=<<currentTiddler>> />
        <$action-setfield $tiddler=<<temp_lastcounter_pk>> text=<<currentTiddler>> />
        Reset destination edit field
        </$button>
      </$list><br>
	
    <$edit-text tiddler=<<temp_remcounter_pk>> autoHeight=yes tag=input />
    </$vars>
  </$list>
\end
\define glbl_code_disp(ur_note_pk, ur_first_line_skip)
<$macrocall $name=glbl_code_disp_init ur_note_pk="$ur_note_pk$" ur_first_line_skip="$ur_first_line_skip$" /><br>
[[$ur_note_pk$]]<br>
<$list filter="[[$ur_first_line_skip$]!match[]then[$ur_first_line_skip$]else[0]]">
  <$vars source_note_pk="$ur_note_pk$" temp_remcounter_pk="$:/state/popup/$ur_note_pk$/HtmlEscapedLinesRemCounter" temp_lastcounter_pk="$:/state/popup/$ur_note_pk$/HtmlEscapedLinesLastCounter" first_line_skip=<<currentTiddler>> >
    <$macrocall $name=glbl_code_disp_disp ur_source_note_pk=<<source_note_pk>> ur_temp_remcounter_pk=<<temp_remcounter_pk>> ur_temp_lastcounter_pk=<<temp_lastcounter_pk>> ur_first_line_skip=<<first_line_skip>> />
    <$button>
      <$macrocall $name=glbl_code_disp_next_group_disp ur_rem_counter=<<temp_remcounter_pk>> ur_oper="subtract" />
      
      Browse next 100 lines
      </$button><br>
    <$button>
      <$macrocall $name=glbl_code_disp_next_group_disp ur_rem_counter=<<temp_remcounter_pk>> ur_oper="add" />
      
      Browse prev 100 lines
      </$button><br>

    <<glbl_code_disp_data>>
    </$vars>
  </$list>
\end

<!--<$macrocall $name=glbl_code_disp ur_note_pk="WebNotes\Data" ur_first_line_skip=1 />-->

<!--<<glbl_code_disp "WebNotes\Data 1 >>-->

<!--Does not pass through the \u0009 tab or \u00A0 non-breaking space characters. Chrome highlight and copy puts spaces on the clipboard.-->

<!--[[WebNotes\Data]]-->

<!--<$macrocall $name=glbl_code_split ur_note_pk="WebNotes\Data" ur_first_line_skip=1 />-->

<!--<<glbl_code_block "UrNotePK">>-->

<!--<<glbl_code_linenum "UrNotePK" 0 15 n>>-->



mcr glbl_compare_lines

\define glbl_compare_lines_results_table(ur_note_pk, ur_second_pk, ur_row_count)
<table><tr>
<th>''Line''</th>
<th>Show text</th>
<th>First Side<br>Second Side</th>
</tr>
<$list filter="[range<intSECOND_COUNT>subtract[1]]" variable="intCUR_ENTRY">
<$list filter="[{$ur_note_pk$}splitregexp[\n]butfirst<intCUR_ENTRY>first[]]" variable="strFIRST_LINE">
<$list filter="[{$ur_second_pk$}splitregexp[\n]butfirst<intCUR_ENTRY>first[]!match<strFIRST_LINE>]" variable="strSECOND_LINE">
<tr>
<td rowspan=2>

!!<<intCUR_ENTRY>>
</td>
<td>
<$button>
<$action-setfield $tiddler="$:/state/CompareTextLine1" text=<<intCUR_ENTRY>>/>
<$action-setfield $tiddler="$:/state/CompareTextSection1" text="""<$edit-text tiddler="$:/state/CompareTextLine1" field=text default="" placeholder="[no text yet]" autoHeight=no tag=input/>
<$list filter="[{$:/state/CompareTextLine1}!match[]else[0]]" variable=intSTART_LINE><$list filter="[<intSTART_LINE>subtract[1]]" variable=intPREV_LINE>
<$list filter="[<intSTART_LINE>add[1]]" variable=intNEXT_LINE>
<$button>
<$action-setfield $tiddler="$:/state/CompareTextLine1" text=<<intPREV_LINE>>/>
<<intPREV_LINE>>
</$button>
<$button>
<$action-setfield $tiddler="$:/state/CompareTextLine1" text=<<intNEXT_LINE>>/>
<<intNEXT_LINE>>
</$button><br>[[$ur_note_pk$]]<br>
<$macrocall $name=glbl_code_disp_group ur_note_pk="$ur_note_pk$"  ur_skip_count=<<intSTART_LINE>> />
</$list></$list></$list>""" />
<$action-navigate $to="$:/state/CompareTextSection1"/>
<<intCUR_ENTRY>>
</$button>
</td>
<td><$codeblock code=<<strFIRST_LINE>> /></td>
</tr>
<tr>
<td>
<$button>
<$action-setfield $tiddler="$:/state/CompareTextLine2" text=<<intCUR_ENTRY>>/>
<$action-setfield $tiddler="$:/state/CompareTextSection2" text="""<$edit-text tiddler="$:/state/CompareTextLine2" field=text default="" placeholder="[no text yet]" autoHeight=no tag=input/>
<$list filter="[{$:/state/CompareTextLine2}!match[]else[0]]" variable=intSTART_LINE>
<$list filter="[<intSTART_LINE>subtract[1]]" variable=intPREV_LINE>
<$list filter="[<intSTART_LINE>add[1]]" variable=intNEXT_LINE>
<$button>
<$action-setfield $tiddler="$:/state/CompareTextLine2" text=<<intPREV_LINE>>/>
<<intPREV_LINE>>
</$button>
<$button>
<$action-setfield $tiddler="$:/state/CompareTextLine2" text=<<intNEXT_LINE>>/>
<<intNEXT_LINE>>
</$button><br>[[$ur_second_pk$]]<br>
<$macrocall $name=glbl_code_disp_group ur_note_pk="$ur_second_pk$"  ur_skip_count=<<intSTART_LINE>> />
</$list></$list></$list>""" />
<$action-navigate $to="$:/state/CompareTextSection2"/>
<<intCUR_ENTRY>>
</$button>
</td>
<td><$codeblock code=<<strSECOND_LINE>> /></td>
</tr>
</$list></$list></$list>
</table>
\end
\define glbl_compare_lines(ur_note_pk, ur_second_pk)
<$list filter="[{$ur_note_pk$}splitregexp[\n]count[]]" variable="intFIRST_COUNT">
<$list filter="[{$ur_second_pk$}splitregexp[\n]count[]]" variable="intSECOND_COUNT">
<$list filter="[{$ur_second_pk$}splitregexp[\n]count[]subtract<intFIRST_COUNT>]" variable="intSECOND_EXTRA">

[[$ur_note_pk$]] line count: <<intFIRST_COUNT>>

[[$ur_second_pk$]] line count: <<intSECOND_COUNT>>

''$ur_second_pk$'' excess line count: ''<<intSECOND_EXTRA>>''

<$macrocall $name=glbl_compare_lines_results_table ur_note_pk="$ur_note_pk$" ur_second_pk="$ur_second_pk$" ur_row_count=<<intSECOND_COUNT>> />
</$list>
</$list>
</$list>
\end

<!--
<$edit-text tiddler="$:/state/CompareText1" field=text default="" placeholder="[no text yet]" autoHeight=no tag=textarea/>
<$edit-text tiddler="$:/state/CompareText2" field=text default="" placeholder="[no text yet]" autoHeight=no tag=textarea/>

<<glbl_compare_lines "$:/state/CompareText1" "$:/state/CompareText2">>
-->



mcr glbl_ext

\define ext(ur_extnote_pk)
<$list filter="[[ext $ur_extnote_pk$]get[text]count[]match[0]]">Missing: [$ur_extnote_pk$]</$list>
{{ext $ur_extnote_pk$}}<div style="float:right">[[->|ext $ur_extnote_pk$]]</div>
\end




mcr glbl_image

\define glbl_image_high(ur_image_pk, ur_size:200)
<$link to="$ur_image_pk$">[img height=$ur_size$px [$ur_image_pk$]]</$link>
\end
\define glbl_image_wide(ur_image_pk, ur_size:500)
<$link to="$ur_image_pk$">[img width=$ur_size$px [$ur_image_pk$]]</$link>
\end



mcr gtree_disp_field

\define gtree_disp_tree_cards(ur_ttb_card)
<$list variable=ttb_card filter="[[$ur_ttb_card$]!match[]]" >
<$list variable=ttb_prefix filter="[<ttb_card>addsuffix[\]]" >
<$vars disp_link="card">
<<gtree_ref_disp_root_tree>>
</$vars><!--disp_link-->
</$list><!--ttb_prefix-->
</$list><!--ttb_card-->
<!--gtree_disp_tree_cards-->
\end

\define gtree_disp_tree_links(ur_ttb_card)
<$list variable=ttb_card filter="[[$ur_ttb_card$]!match[]]" >
<$list variable=ttb_prefix filter="[<ttb_card>addsuffix[\]]" >
<$vars disp_link="yes">
<<gtree_ref_disp_root_tree>>
</$vars><!--disp_link-->
</$list><!--ttb_prefix-->
</$list><!--ttb_card-->
<!--gtree_disp_tree_links-->
\end

\define gtree_disp_tree_text(ur_ttb_card)
<$list variable=ttb_card filter="[[$ur_ttb_card$]!match[]]" >
<$list variable=ttb_prefix filter="[<ttb_card>addsuffix[\]]" >
<$vars disp_link="no">
<<gtree_ref_disp_root_tree>>
</$vars><!--disp_link-->
</$list><!--ttb_prefix-->
</$list><!--ttb_card-->
<!--gtree_disp_tree_text-->
\end

\define gtree_ref_disp_root_tree(ttb_card, ttb_prefix, disp_link)
<$list variable=found_line_path filter="[prefix<ttb_prefix>get[line-path]sort[]]">
<$list variable=filter_root_path filter="[<found_line_path>split[-]count[]match[1]]">
<$vars
  cur_root_path=<<found_line_path>>
  cur_level_seq=1 >
<<gtree_ref_recurse_code_level>>
</$vars><!--cur_root_path, cur_level_seq-->
</$list><!--filter_root_path-->
</$list><!--found_line_path-->
<!--gtree_ref_disp_root_tree-->
\end

\define gtree_ref_recurse_code_level(ttb_card, ttb_prefix, disp_link, cur_root_path, cur_level_seq)
<$list variable=filter_level_max filter="[<cur_level_seq>!match[10]]">
<$list variable=cur_line_card filter="[prefix<ttb_prefix>line-path<cur_root_path>sort[]]">
<<gtree_ref_disp_card_entry>>
<<gtree_ref_each_line_branch>>
</$list><!--cur_line_card-->
</$list><!--filter_level_max-->
<!--gtree_ref_recurse_code_level-->
\end

\define gtree_ref_disp_card_entry(ttb_card, ttb_prefix, disp_link, cur_root_path, cur_level_seq, cur_line_card)
<$list variable=disp_card_link filter="[<disp_link>lowercase[]match[card]]">
<$list variable=indent_count filter="[<cur_level_seq>multiply[2]]">
<$list variable=indent_arrows filter="[[->]pad<indent_count>,[->]]">
<<indent_arrows>> <$link to=<<cur_line_card>> /><br>
</$list><!--indent_arrows-->
</$list><!--indent_count-->
</$list><!--disp_card_link-->
<!--gtree_ref_disp_card_entry-->
\end

\define gtree_ref_each_line_branch(ttb_card, ttb_prefix, disp_link, cur_root_path, cur_level_seq, cur_line_card)
<$list variable=cur_line_branch filter="[<cur_line_card>fields[]prefix[ln-]sort[]]">
<$list variable=filter_skip_e0 filter="[<cur_line_branch>!match[ln-e0]]">
<<gtree_ref_disp_link_entry>>
<<gtree_ref_disp_doc_contents>>
</$list><!--filter_skip_e0-->
<<gtree_ref_disp_next_line_branch>>
</$list><!--cur_line_branch-->
<!--gtree_ref_each_line_branch-->
\end

\define gtree_ref_disp_link_entry(ttb_card, ttb_prefix, disp_link, cur_root_path, cur_level_seq, cur_line_card, cur_line_branch)
<$list variable=disp_branch_link filter="[<disp_link>lowercase[]match[yes]]">
<$list variable=indent_count filter="[<cur_level_seq>multiply[2]]">
<$list variable=indent_arrows filter="[[->]pad<indent_count>,[->]]">
<<indent_arrows>> <$link to=<<cur_line_card>> ><<cur_line_branch>></$link>
</$list><!--indent_arrows-->
</$list><!--indent_count-->
</$list><!--disp_branch_link-->
<!--gtree_ref_disp_link_entry-->
\end

\define gtree_ref_disp_doc_contents(ttb_card, ttb_prefix, disp_link, cur_root_path, cur_level_seq, cur_line_card, cur_line_branch)
<$list variable=disp_doc_contents filter="[<disp_link>lowercase[]!match[card]]">
<$vars cur_field=<<cur_line_branch>> >
<<gtree_ref_disp_field>><br>
</$vars><!--cur_field-->
</$list><!--disp_doc_contents-->
<!--gtree_ref_disp_doc_contents-->
\end

\define gtree_ref_disp_next_line_branch(ttb_card, ttb_prefix, disp_link, cur_root_path, cur_level_seq, cur_line_card, cur_line_branch)
<$list variable=next_line_branch filter="[<cur_line_branch>addprefix<cur_root_path>sort[]]">
<$list variable=next_level filter="[<cur_level_seq>add[1]]">
<$vars cur_root_path=<<next_line_branch>> cur_level_seq=<<next_level>> >
<<gtree_ref_recurse_code_level>>
</$vars><!--cur_root_path, cur_level_seq-->
</$list><!--next_level-->
</$list><!--next_line_branch-->
<!--gtree_ref_disp_next_line_branch-->
\end

\define gtree_ref_disp_field(ttb_card, cur_field)
<$list variable=line_num filter="[<cur_field>removeprefix[ln-]]">
<$list variable=cur_entry filter="[<ttb_card>get<line_num>]"
><$text text=<<cur_entry>> />
</$list><!--cur_entry-->
</$list><!--line_num-->
<!--gtree_ref_disp_field-->
\end

\define gtree_disp_next_level()
<$list variable=cur_card filter="[is[current]]">
<$list variable=ttb_prefix filter="[<cur_card>split[\]first[]addsuffix[\]]">
<<gtree_ref_disp_parent_link>><br>
<$list variable=cur_line_path filter="[<cur_card>get[line-path]]">
<$list variable=cur_prefix filter="[<cur_card>fields[]prefix[ln-]removeprefix[ln-]splitbefore[e]splitbefore[f]splitbefore[y]splitbefore[z]addprefix[ln-]sort[]]">
<$list variable=cur_field filter="[<cur_card>fields[]prefix<cur_prefix>sort[]]">
<<gtree_ref_disp_field>><br>
</$list><!--cur_field-->
<$list variable=cur_line_branch filter="[<cur_card>fields[]prefix<cur_prefix>sort[]]">
<$list variable=next_line_branch filter="[<cur_line_branch>addprefix<cur_line_path>]">
<$list variable=next_card filter="[line-path<next_line_branch>sort[]]">

* <$link to=<<next_card>> />
</$list><!--next_card-->
</$list><!--next_line_branch-->
</$list><!--cur_line_branch-->
</$list><!--cur_prefix-->
</$list><!--cur_line_path-->
</$list><!--ttb_prefix-->
<<glbl_disp_subtree "card">>
<<glbl_disp_subtree "yes">>
</$list><!--cur_card-->
<!--gtree_disp_next_level-->
\end

\define gtree_ref_disp_parent_link(ttb_prefix)
<$list variable=cur_line_path filter="[is[current]get[line-path]]">
<$list variable=parent_line_path filter="[<cur_line_path>split[ln-]butlast[]join[ln-]]">
<$list variable=parent_branch filter="[<cur_line_path>split[ln-]last[]addprefix[ln-]]">
<$list variable=parent_card filter="[prefix<ttb_prefix>line-path<parent_line_path>has:field<parent_branch>]">
<$link to=<<parent_card>> /><br>
</$list><!--parent_card-->
</$list><!--parent_branch-->
</$list><!--parent_line_path-->
</$list><!--cur_line_path-->
<!--gtree_ref_disp_parent_link-->
\end

\define glbl_disp_subtree(ur_disp_link)
<hr>
<$list variable=found_line_num filter="[<currentTiddler>fields[]prefix[ln-]]">
<$list variable=found_line_path filter="[<currentTiddler>get[line-path]addsuffix<found_line_num>]">
<$macrocall $name=gtree_ref_recurse_code_level ur_root_path=<<found_line_path>> ur_level=1 ur_disp_link="$ur_disp_link$" />
</$list><!--found_line_path-->
</$list><!--found_line_num-->
\end




New Card

<$list variable=cur_card filter="[is[current]]">

</$list><$o cur_card/>



parm SkipSaveExportHTML



Recent Entries

[[Search All Fields]]

[[View All Cards]]

[[View All Code]]

[[Font Size]]

<<timeline limit:30 format:"YYYY-0MM-0DD">>



Sample Code Actions

<<gtree_disp_tree_cards "Sample Code">>




Sample Code Text

<<gtree_disp_tree_text "Sample Code">>



Sample Code Tree

<<gtree_disp_tree_links "Sample Code">>



Search All Fields

<$vars search_text_pk="$:/state/popup/SearchAllFields">
<$list variable=show_code_pk filter="[<search_text_pk>addsuffix[-checkShowCode]]">
<$list variable=skip_system_pk filter="[<search_text_pk>addsuffix[-checkSkipSystem]]">
<$edit-text tiddler=<<search_text_pk>> field=text default="" placeholder="[no text yet]" autoHeight=yes tag=input/>
<$checkbox default="no" unchecked="no" checked="yes" field="text" tiddler=<<show_code_pk>>> Show Code</$checkbox>
<$checkbox default="yes" unchecked="no" checked="yes" field="text" tiddler=<<skip_system_pk>>> Skip System </$checkbox><br>
<br>

<$list variable=cur_search_text filter="[<search_text_pk>get[text]addsuffix[(?i)]!match[]]">
<$list variable=cur_showcode_text filter="[<show_code_pk>get[text]else[no]]">
<$list variable=cur_skipsystem_text filter="[<skip_system_pk>get[text]else[yes]match[yes]count[]]">

<!--Card titles-->
<$list variable=cur_pk filter="[regexp<cur_search_text>sort[]]">
<$list variable=found_skipsystem filter="[<cur_skipsystem_text>] [<cur_pk>!is[system]count[]] +[sum[]match[1]]">

<$link to=<<cur_pk>> />: title
</$list><!--found_skipsystem-->
</$list><!--cur_pk-->

<!--Card fields-->
<$list variable=cur_pk filter="[!regexp<cur_search_text>sort[]]">
<$list variable=found_skipsystem filter="[<cur_pk>is[system]count[]multiply<cur_skipsystem_text>match[0]]">
<$list variable=cur_field filter="[<cur_pk>fields[]]">
<$list variable=found_field filter="[<cur_pk>get<cur_field>regexp<cur_search_text>]">

<$link to=<<cur_pk>> />: <<cur_field>>
<$list variable=disp_code filter="[<cur_showcode_text>match[yes]]">
<$codeblock code=<<found_field>> />
</$list><!--disp_code-->
</$list><!--found_field-->
</$list><!--cur_field-->

</$list><!--found_skipsystem-->
</$list><!--cur_pk-->

</$list><!--cur_skipsystem_text-->
</$list><!--cur_showcode_text-->
</$list><!--cur_search_text-->
</$list><!--skip_system_pk-->
</$list><!--show_code_pk-->
</$vars><!--search_text_pk-->



Split Code

\define ttb_store_vars()
<$list variable=ttb_card filter="[[$:/state/popup/SplitCodeSearch]]">
<<user_filter_card>>
<<user_filter_vars>>
</$list>[[|-ttb_card]]
\end
\define user_filter_card()
<$edit-text tiddler=<<ttb_card>> field=prefix_text placeholder="[no text yet]" autoHeight=yes tag=input/>
<$list variable=prefix_text filter="[<ttb_card>get[prefix_text]else[]]">
<$button>
<$action-setfield $tiddler=<<ttb_card>> filter_prefix=<<prefix_text>> />
<$action-deletefield $tiddler=<<ttb_card>> $field=selected_card />
List cards
</$button>
</$list>[[|-prefix_text]]
\end
\define user_filter_vars()
<$list variable=card_prefix filter="[<ttb_card>get[filter_prefix]addprefix[(?i)^]]">
<$list variable=card_first filter="[regexp<card_prefix>sort[]first[]else[]]">

<<user_select_card>>
<<user_selected_vars>>
</$list>[[|-card_first]]
</$list>[[|-card_prefix]]
\end
\define user_select_card()
<$select tiddler=<<ttb_card>> field=selected_card default=<<card_first>> >
<$list variable=cur_card filter="[regexp<card_prefix>sort[]]">
<option value=<<cur_card>>><<cur_card>></option>
</$list>[[|-cur_card]]
</$select>
<span style="margin-left:20px;" /><$checkbox default="0" unchecked="1" checked="0" tiddler=<<ttb_card>> field="include_last_line" ><span style="margin-left:5px;" />Include Last Line</$checkbox>
\end
\define user_selected_vars()
<$list variable=source_card filter="[<ttb_card>get[selected_card]else<card_first>]">
<$list variable=include_last_line filter="[<ttb_card>get[include_last_line]else[0]]">
<<text_parse_vars>>
</$list>[[|-include_last_line]]
</$list>[[|-source_card]]
\end
\define text_parse_vars()
<$wikify name=lit_cr text="&#13;">
<$wikify name=lit_lf text="&#10;">
<<selcard_summary>>
</$wikify>[[|-lit_lf]]
</$wikify>[[|-lit_cr]]
\end
\define selcard_summary()
<$link to=<<source_card>> />

<$list variable=cur_field filter="[<source_card>fields[]!match[created]!match[modified]!match[tags]!match[text]!match[title]count[]]">
Found fields: <<cur_field>>
</$list>

<$list variable=doc_text filter="[<source_card>get[text]split<lit_cr>join[]]">
<$list variable=line_count filter="[<doc_text>split<lit_lf>count[]subtract[1]!match[0]subtract[1]!match[0]subtract<include_last_line>!match[0]]">
Found lines: <<line_count>>

<<user_button_overwrite>>
</$list>[[|-line_count]]
</$list>[[|-doc_text]]
\end
\define user_button_overwrite()
<$button>
<<clear_current_fields>>
<<list_line_labels>>
Overwrite text fields
</$button>
\end
\define clear_current_fields()
<$list variable=cur_field filter="[<source_card>fields[]!match[text]!match[created]!match[modified]!match[tags]!match[text]!match[title]]">
<$action-deletefield $tiddler=<<source_card>> $field=<<cur_field>> />
</$list>
\end
\define list_line_labels()
<$list variable=linctr filter="[range<line_count>]">
<$list variable=line_num_e filter="[<linctr>split[]last[3]join[]]">
<$list variable=line_num_f filter="[<linctr>split[]butlast[3]last[3]join[]else[]]">
<$list variable=line_title_e_prefix filter="[<line_num_e>split[]count[]split[1]join[e]split[2]join[ec]split[3]join[ed]]">
<$list variable=line_title_f_prefix filter="[<line_num_f>split[]!match[]count[]!match[0]split[1]join[f]split[2]join[fc]split[3]join[fd]else[]]">
<$list variable=line_title_e_suffix filter="[<line_title_f_prefix>match[]then<line_title_e_prefix>else[e]]">
<$list variable=line_title filter="[<line_title_f_prefix>addsuffix<line_num_f>addsuffix<line_title_e_suffix>addsuffix<line_num_e>]">
<<assign_line_field>>
</$list>[[|-line_title]]
</$list>[[|-line_title_e_suffix]]
</$list>[[|-line_title_f_prefix]]
</$list>[[|-line_title_e_prefix]]
</$list>[[|-line_num_f]]
</$list>[[|-line_num_e]]
</$list>[[|-linctr]]
\end
\define assign_line_field()
<$list variable=cur_line filter="[<doc_text>split<lit_lf>butfirst<linctr>first[]]">
<$action-setfield $tiddler=<<source_card>> $field=<<line_title>> $value=<<cur_line>>/>
</$list>[[|-cur_line]]
\end
<<ttb_store_vars>>



template e1 tree

<$list filter="[is[current]has:field[e1]]">
<<glbl_article_list>>
</$list>



template ExportAllCode

\define renderContent()
<$list variable=cur_tip_pk filter="[all[tiddlers]!has[draft.of]has[tags]!prefix[undefined]sort[title]]">
<hr>
<h2><$link to=<<cur_tip_pk>> /></h2>
<$list variable=cur_tip_text filter="[<cur_tip_pk>get[text]]">
<$codeblock code=<<cur_tip_text>> />
</$list><!--cur_tip_text-->
</$list><!--cur_tip_pk-->
\end
<<renderContent>>



template ExportAsText

\define renderContent()
{{{ $(exportFilter)$ ||$:/core/templates/plain-text-tiddler}}}
\end
<<renderContent>>



template Home Button

<div style="float:right;padding-left:30px;">
{{$:/core/ui/TopBar/menu}}
</div>

<div style="float:right"><$button set="$:/state/sidebar" setTo="no" tooltip={{$:/language/Buttons/Home/Hint}} aria-label={{$:/language/Buttons/Home/Caption}} class=<<tv-config-toolbar-class>>>
<span class="tc-dirty-indicator">
<$list filter="[<tv-config-toolbar-icons>match[yes]]">
{{$:/core/images/home-button}}
</$list>
<$list filter="[<tv-config-toolbar-text>match[yes]]">
<span class="tc-btn-text"><$text text={{$:/language/Buttons/Home/Caption}}/></span>
</$list>
</span>
<$action-sendmessage $message="tm-home"/>
</$button></div>




template LinePath

<$list filter="[is[current]has[line-path]]">
<<gtree_disp_next_level>>
</$list>



TW JS Pretty

{{ext TW Return}}

<<list-links filter:"[tag[DOC]field:level[1]sort[title]] [tag[DOC]field:level[]sort[title]]">>

* [[empty.htm]]
* [[Sample Code]]

[[___|Recent Entries]]



View All Cards

<$list filter="[all[tiddlers]!tag[EXTLINK]!tag[IMG]!tag[INDEX]!tag[MCR]!tag[META]!has[draft.of]!is[image]!is[tag]!is[system]has[tags]!prefix[undefined]sort[title]]">
<hr>
<h2><$link to=<<currentTiddler>> /></h2>
{{||$:/core/ui/ViewTemplate/tags}}
<$transclude mode="block"/>
</$list>



View All Code

<$list variable=cur_card_pk filter="[all[tiddlers]!has[draft.of]has[tags]!prefix[undefined]sort[title]]">
<hr>
<h2><$link to=<<cur_card_pk>> /></h2>
<$list variable=cur_card_text filter="[<cur_card_pk>get[text]]">
<$codeblock code=<<cur_card_text>> />
</$list><!--cur_card_text-->
</$list><!--cur_card_pk-->



widget o comment

/*\

Do nothing widget

\*/
(function(){

/*jslint node: true, browser: true */
/*global $tw: false */
"use strict";

var Widget = require("$:/core/modules/widgets/widget.js").widget;

exports.o = Widget;

})();

